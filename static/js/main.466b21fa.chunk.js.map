{"version":3,"sources":["EA1/index.js","EA2/index.js","EA3/index.js","EA4_1/index.js","EA4_2/index.js","EA5/index.js","App.js","serviceWorker.js","index.js"],"names":["EA1","props","handleKeyDown","key","refName","console","log","tempKey","state","eventKey","setState","yOffset","string","style","background","toString","ref","position","width","height","src","alt","this","handleKeys","onKeyEvent","e","href","Component","defaultProps","EA2","shaderProgram","gl","vs","fs","prog","createProgram","addshader","type","source","s","createShader","VERTEX_SHADER","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","attributeSetFloats","attr_name","rsize","arr","bindBuffer","ARRAY_BUFFER","createBuffer","bufferData","Float32Array","STATIC_DRAW","attr","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","draw","getContext","err","clearColor","clear","COLOR_BUFFER_BIT","useProgram","drawArrays","LINE_STRIP","init","alert","vertexShaderText","join","fragmentShaderText","Handle","createSliderWithTooltip","Slider","Range","handle","value","dragging","index","restProps","prefixCls","overlay","visible","placement","EA3","triangleVertices","vertexContainer1","vertex","x","y","r","g","b","vertexContainer2","vertexContainer3","vertexContainer4","vertexContainer5","triangleVertexBufferObject","positionAttribLocation","colorAttribLocation","FALSE","BYTES_PER_ELEMENT","TRIANGLE_STRIP","changeXV1","changeYV1","changeXV2","changeYV2","changeXV3","changeYV3","changeXV4","changeYV4","changeXV5","changeYV5","changeColorV1","colorManipulator","changeColorV2","changeColorV3","changeColorV4","changeColorV5","propsAsString","obj","unwrapObjects","depthLevelMap","depth","Object","keys","map","k","undefined","get","set","dethValue","currentDepthValue","HashMap","xMin","xMax","yMin","yMax","wrapperStyle","margin","className","min","max","defaultValue","step","onChange","i","EA4_1","handleCheckboxChange","checked","changeConstant","constant","frontFace","CCW","enable","CULL_FACE","cullFace","BACK","vertices","indicesLines","indicesTris","bindAttribLocation","n","m","Uint16Array","iLines","iTris","t","j","iVertex","u","v","Math","cos","sin","z","createVertexData","vboPos","posAttrib","colAttrib","iboLines","ELEMENT_ARRAY_BUFFER","numberOfElements","length","iboTris","c","vertexAttrib1f","vertexAttrib4f","random","drawElements","TRIANGLES","UNSIGNED_SHORT","LINES","myLoop","setTimeout","id","color","size","EA4_2","changeParameter","parameter","containerObject","PI","DEPTH_TEST","depthFunc","LEQUAL","POLYGON_OFFSET_FILL","polygonOffset","normals","pow","vertexLength","sqrt","vboNormal","DEPTH_BUFFER_BIT","disableVertexAttribArray","vertexAttrib3f","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.466b21fa.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\nimport './ea1.css';\n\nexport default class EA1 extends Component {\n    static propTypes = {}\n    static defaultProps = {}\n\n    constructor(props) {\n        super(props);\n        this.state = { // state keys go here\n            yOffset: 0,\n            eventKey: \" \"\n        }\n    }\n\n    handleKeyDown = (key,refName) => {\n\n        console.log(key + \"is down\");\n\n        var tempKey = key + \" \" + this.state.eventKey;\n\n        this.setState(\n            {\n                eventKey: tempKey\n            })\n\n        if (key === 'l') {\n            console.log('L pressed ! ')\n\n            if (this.state.yOffset >= 512) {\n                this.setState(\n                    {\n                        yOffset: this.state.yOffset - 512\n                    })\n            }\n\n        } else if (key === 'r') {\n            console.log('R pressed ! ')\n\n\n            this.setState(\n                {\n                    yOffset: this.state.yOffset + 512\n                })\n        }\n\n        var string = `url(\"https://i.ibb.co/b7HgSFy/Graph-Viz-Tech-EA1.png\") 0px ${this.state.yOffset}px`;\n        this[refName].style.background = string.toString();\n    }\n\n     //background: 'url(\"images/GraphVizTechEA1.png\") 0 0'},} \n     //src={process.env.PUBLIC_URL + '/images/placeholder1x1.png'} alt=\"circle\" width=\"1\" height=\"1\"></img>\n\n    render() {\n        //TODO change clippingrect css by jscript code on key input left right\n        let refName = 'clippingrect';\n\n        return (\n            <div>\n                <div><h2>EA1</h2></div>\n\n                <img \n                ref={ref => this[refName] = ref}\n                style= {{position: 'relative',\n                width: '512px',\n                height: '512px',\n                background: 'url(\"https://i.ibb.co/b7HgSFy/Graph-Viz-Tech-EA1.png\") 0 0'}}\n                src={'https://i.ibb.co/Yc3S8ZW/placeholder1x1.png'} alt=\"circle\" width=\"1\" height=\"1\"></img>\n                \n                <div>Input Key detected: {this.state.eventKey}</div>\n\n                <KeyboardEventHandler\n                    handleKeys={['l', 'r']}\n                    onKeyEvent={(key, e) => this.handleKeyDown(key,refName)} />\n\n                    <div style= {{position: 'relative', height: '30px'}}></div>\n                    <a href='https://www.searchpng.com/2019/01/07/blue-circle-glow-png-free-download/'>Circle Image Reference</a>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\nimport './ea2.css';\n\nexport default class EA2 extends Component {\n    \n    static propTypes = {}\n    static defaultProps = {}\n\n    constructor(props) {\n        super(props);\n        this.state = { // state keys go here\n            eventKey: \" \"\n        }\n    }\n\n    \n    componentDidMount() {\n            this.init();\n    }\n\n\n    shaderProgram = (gl, vs, fs) => {\n\n        var prog = gl.createProgram();\n        var addshader = function(type, source) {\n            var s = gl.createShader((type == 'vertex') ?\n                gl.VERTEX_SHADER : gl.FRAGMENT_SHADER);\n            gl.shaderSource(s, source);\n            gl.compileShader(s);\n            if (!gl.getShaderParameter(s, gl.COMPILE_STATUS)) {\n                throw \"Could not compile \"+type+\n                    \" shader:\\n\\n\"+gl.getShaderInfoLog(s);\n            }\n            gl.attachShader(prog, s);\n        };\n        addshader('vertex', vs);\n        addshader('fragment', fs);\n        gl.linkProgram(prog);\n        if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n            throw \"Could not link the shader program!\";\n        }\n        return prog;\n    }\n    \n    attributeSetFloats = (gl, prog, attr_name, rsize, arr) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(arr),\n            gl.STATIC_DRAW);\n        var attr = gl.getAttribLocation(prog, attr_name);\n        gl.enableVertexAttribArray(attr);\n        gl.vertexAttribPointer(attr, rsize, gl.FLOAT, false, 0, 0);\n    }\n    \n    draw = () => {\n        try {\n            var gl = this['webGLCanvas'].getContext('webgl');\n            if (!gl) { throw \"x\"; }\n        } catch (err) {\n            throw \"Your web browser does not support WebGL!\";\n        }\n        gl.clearColor(0.8, 0.8, 0.8, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    \n        var prog = this.shaderProgram(gl,\n            \"attribute vec3 pos;\"+\n            \"void main() {\"+\n            \"\tgl_Position = vec4(pos, 2.0);\"+\n            \"}\",\n            \"void main() {\"+\n            \"\tgl_FragColor = vec4(0.5, 0.5, 1.0, 1.0);\"+\n            \"}\"\n        );\n        gl.useProgram(prog);\n    \n        this.attributeSetFloats(gl, prog, \"pos\", 2, [\n            0.1, -0.1,\n            -0.1, 0.1,\n            0.1,0.1,\n            -0.1,-0.1,\n            -0.1,-0.1,\n            -0.2,-0.2,\n            -0.2,-0.1,\n            -0.2,-0.2,\n            -0.2,0.2,\n            0.2,0.2,\n            0.2,-0.2,\n            0.1,-0.1,\n            0,0,\n            0,-0.5,\n            -0.5,-0.5,\n            -0.5,0.5,\n            0.5,0.5,\n            0.5,-0.5,\n            -0.5,-0.5,\n            -0.5,-0.5,\n            1.0, -1.0,\n            -1, 1,\n            1,1,\n            -1,-1,\n            -1,-1,\n            -1.2,-1.2,\n            -1.2,-1.1,\n            -1.2,-1.2,\n            -1.2,1.2,\n            1.2,1.2,\n            1.2,-1.2,\n            1.2,-1.2,\n            1.1,-1.1,\n            1.1,-1.1,\n            0,0,\n            -1.5,-1.5,\n            -1.5,1.5,\n            1.5,1.5,\n            1.5,-1.5,\n            -1.5,-1.5,\n            -1.5,-1.5\n        ]);\n        \n        gl.drawArrays(gl.LINE_STRIP, 0, 41);\n\n    }\n    \n    init = () => {\n        try {\n            this.draw();\n        } catch (e) {\n            alert(\"Error: \"+e);\n        }\n    }\n\n    handleKeyDown = (key) => {\n\n        this.setState(\n            {\n                eventKey: key\n            })\n\n        if (key === '?') {\n            console.log('? pressed ! ')\n        } \n    }\n\n    render() {\n\n        return (\n            <div>\n                <div><h2>EA2</h2></div>\n\n                <canvas ref={ref => this['webGLCanvas'] = ref} width ='512px' height ='512px'></canvas>\n\n                <div>{this.state.eventKey}</div>\n                <KeyboardEventHandler\n                    handleKeys={['?']}\n                    onKeyEvent={(key, e) => this.handleKeyDown(key)} />\n\n                    <div style= {{position: 'relative', height: '30px'}}></div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport Slider from 'rc-slider';\nimport Tooltip from 'rc-tooltip';\nimport 'rc-slider/assets/index.css';\nimport HashMap from 'hashmap';\n\nimport './ea3.css';\n\nvar vertexShaderText =\n    [\n        'precision mediump float;',\n        '',\n        'attribute vec2 vertPosition;',\n        'attribute vec3 vertColor;',\n        'varying vec3 fragColor;',\n        '',\n        'void main()',\n        '{',\n        '  fragColor = vertColor;',\n        '  gl_Position = vec4(vertPosition, 0.0, 1.0);',\n        '}'\n    ].join('\\n');\n\nvar fragmentShaderText =\n    [\n        'precision mediump float;',\n        '',\n        'varying vec3 fragColor;',\n        'void main()',\n        '{',\n        '  gl_FragColor = vec4(fragColor, 1.0);',\n        '}'\n    ].join('\\n');\n\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Range = createSliderWithTooltip(Slider.Range);\nconst Handle = Slider.Handle;\n\nconst handle = (props) => {\n    const { value, dragging, index, ...restProps } = props;\n    return (\n        <Tooltip\n            prefixCls=\"rc-slider-tooltip\"\n            overlay={value}\n            visible={dragging}\n            placement=\"top\"\n            key={index}\n        >\n            <Handle value={value} {...restProps} />\n        </Tooltip>\n    );\n};\n\n\nexport default class EA3 extends Component {\n\n    static propTypes = {}\n    static defaultProps = {}\n\n    constructor(props) {\n        super(props);\n        this.state = { // state keys go here\n            eventKey: \" \",\n            xMin: -1.0, xMax: 1.0, yMin: -1.0, yMax: 1.0,\n            vertexContainer1: { vertex: { x: 0.56, y: 0.88, r: 1.0, g: 1.0, b: 0.0 }, colorManipulator: -0.5 },\n            vertexContainer2: { vertex: { x: -0.6, y: 0.6, r: 0.5, g: 0.0, b: 1.0 }, colorManipulator: 0.0 },\n            vertexContainer3: { vertex: { x: 0.6, y: -0.6, r: 0.1, g: 1.0, b: 0.8 }, colorManipulator: 0.0 },\n            vertexContainer4: { vertex: { x: 0.6, y: 0.6, r: 0.3, g: 0.9, b: 0.8 }, colorManipulator: 0.0 },\n            vertexContainer5: { vertex: { x: -0.84, y: -0.19, r: 1.0, g: 0.2, b: 0.0 }, colorManipulator: -0.5 }\n        }\n    }\n\n    componentDidMount() {\n        this.init();\n    }\n\n\n    shaderProgram = (gl, vs, fs) => {\n\n        var prog = gl.createProgram();\n\n        var addshader = function (type, source) {\n\n            var s = gl.createShader((type === 'vertex') ? gl.VERTEX_SHADER : gl.FRAGMENT_SHADER);\n\n            gl.shaderSource(s, source);\n\n            gl.compileShader(s);\n\n            if (!gl.getShaderParameter(s, gl.COMPILE_STATUS)) {\n                throw \"Could not compile \" + type +\n                \" shader:\\n\\n\" + gl.getShaderInfoLog(s);\n            }\n\n            gl.attachShader(prog, s);\n\n        };\n\n        addshader('vertex', vs);\n        addshader('fragment', fs);\n\n        gl.linkProgram(prog);\n\n        if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n            throw \"Could not link the shader program!\";\n        }\n        return prog;\n    }\n\n    draw = () => {\n\n        try {\n            var gl = this['webGLCanvas'].getContext('webgl');\n            if (!gl) { throw \"x\"; }\n        } catch (err) {\n            throw \"Your web browser does not support WebGL!\";\n        }\n\n        gl.clearColor(0.8, 0.8, 0.8, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        var prog = this.shaderProgram(gl, vertexShaderText, fragmentShaderText);\n\n\n\n        var triangleVertices =\n            [ // X, Y,       R, G, B\n                this.state.vertexContainer1.vertex.x, this.state.vertexContainer1.vertex.y, this.state.vertexContainer1.vertex.r, this.state.vertexContainer1.vertex.g, this.state.vertexContainer1.vertex.b,\n                this.state.vertexContainer2.vertex.x, this.state.vertexContainer2.vertex.y, this.state.vertexContainer2.vertex.r, this.state.vertexContainer2.vertex.g, this.state.vertexContainer2.vertex.b,\n                this.state.vertexContainer3.vertex.x, this.state.vertexContainer3.vertex.y, this.state.vertexContainer3.vertex.r, this.state.vertexContainer3.vertex.g, this.state.vertexContainer3.vertex.b,\n                this.state.vertexContainer4.vertex.x, this.state.vertexContainer4.vertex.y, this.state.vertexContainer4.vertex.r, this.state.vertexContainer4.vertex.g, this.state.vertexContainer4.vertex.b,\n                this.state.vertexContainer5.vertex.x, this.state.vertexContainer5.vertex.y, this.state.vertexContainer5.vertex.r, this.state.vertexContainer5.vertex.g, this.state.vertexContainer5.vertex.b\n            ];\n\n        var triangleVertexBufferObject = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, triangleVertexBufferObject);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(triangleVertices), gl.STATIC_DRAW);\n\n        var positionAttribLocation = gl.getAttribLocation(prog, 'vertPosition');\n        var colorAttribLocation = gl.getAttribLocation(prog, 'vertColor');\n        gl.vertexAttribPointer(\n            positionAttribLocation, // Attribute location\n            2, // Number of elements per attribute\n            gl.FLOAT, // Type of elements\n            gl.FALSE,\n            5 * Float32Array.BYTES_PER_ELEMENT, // Size of an individual vertex\n            0 // Offset from the beginning of a single vertex to this attribute\n        );\n        gl.vertexAttribPointer(\n            colorAttribLocation, // Attribute location\n            3, // Number of elements per attribute\n            gl.FLOAT, // Type of elements\n            gl.FALSE,\n            5 * Float32Array.BYTES_PER_ELEMENT, // Size of an individual vertex\n            2 * Float32Array.BYTES_PER_ELEMENT // Offset from the beginning of a single vertex to this attribute\n        );\n\n        gl.enableVertexAttribArray(positionAttribLocation);\n        gl.enableVertexAttribArray(colorAttribLocation);\n\n        //\n        // Main render loop\n        //\n        gl.useProgram(prog);\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 5);\n\n    }\n\n    init = () => {\n        try {\n            this.draw();\n        } catch (e) {\n            alert(\"Error: \" + e);\n        }\n    }\n\n    handleKeyDown = (key) => {\n\n        this.setState(\n            {\n                eventKey: key\n            })\n\n        if (key === '?') {\n            console.log('? pressed ! ')\n        }\n    }\n\n    changeXV1 = (value) => {\n        this.state.vertexContainer1.vertex.x = value;\n        this.draw();\n    }\n\n    changeYV1 = (value) => {\n        this.state.vertexContainer1.vertex.y = value;\n        this.draw();\n    }\n\n    changeXV2 = (value) => {\n        this.state.vertexContainer2.vertex.x = value;\n        this.draw();\n    }\n\n    changeYV2 = (value) => {\n        this.state.vertexContainer2.vertex.y = value;\n        this.draw();\n    }\n\n\n    changeXV3 = (value) => {\n        this.state.vertexContainer3.vertex.x = value;\n        this.draw();\n    }\n\n    changeYV3 = (value) => {\n        this.state.vertexContainer3.vertex.y = value;\n        this.draw();\n    }\n\n    changeXV4 = (value) => {\n        this.state.vertexContainer4.vertex.x = value;\n        this.draw();\n    }\n\n    changeYV4 = (value) => {\n        this.state.vertexContainer4.vertex.y = value;\n        this.draw();\n    }\n\n    changeXV5 = (value) => {\n        this.state.vertexContainer5.vertex.x = value;\n        this.draw();\n    }\n\n    changeYV5 = (value) => {\n        this.state.vertexContainer5.vertex.y = value;\n        this.draw();\n    }\n\n\n    changeColorV1 = (value) => {\n        this.state.vertexContainer1.colorManipulator = value;\n\n        this.state.vertexContainer1.vertex.r = 1 - this.state.vertexContainer1.colorManipulator;\n        this.state.vertexContainer1.vertex.g = 1 - this.state.vertexContainer1.colorManipulator;\n        this.state.vertexContainer1.vertex.b = 0 + this.state.vertexContainer1.colorManipulator;\n\n        this.draw();\n    }\n\n    changeColorV2 = (value) => {\n        this.state.vertexContainer2.colorManipulator = value;\n\n        this.state.vertexContainer2.vertex.r = 1 - this.state.vertexContainer2.colorManipulator;\n        this.state.vertexContainer2.vertex.g = 0 + this.state.vertexContainer2.colorManipulator;\n        this.state.vertexContainer2.vertex.b = 0 + this.state.vertexContainer2.colorManipulator;\n\n        this.draw();\n    }\n\n    changeColorV3 = (value) => {\n        this.state.vertexContainer3.colorManipulator = value;\n\n        this.state.vertexContainer3.vertex.r = 0 + this.state.vertexContainer3.colorManipulator;\n        this.state.vertexContainer3.vertex.g = 1 - this.state.vertexContainer3.colorManipulator;\n        this.state.vertexContainer3.vertex.b = 1 - this.state.vertexContainer3.colorManipulator;\n\n        this.draw();\n    }\n\n\n    changeColorV4 = (value) => {\n        this.state.vertexContainer4.colorManipulator = value;\n\n        this.state.vertexContainer4.vertex.r = 1 - this.state.vertexContainer4.colorManipulator;\n        this.state.vertexContainer4.vertex.g = 0 - this.state.vertexContainer4.colorManipulator;\n        this.state.vertexContainer4.vertex.b = 1 - this.state.vertexContainer4.colorManipulator;\n\n        this.draw();\n    }\n\n    changeColorV5 = (value) => {\n        this.state.vertexContainer5.colorManipulator = value;\n\n        this.state.vertexContainer5.vertex.r = 1 - this.state.vertexContainer5.colorManipulator;\n        this.state.vertexContainer5.vertex.g = 0 + this.state.vertexContainer5.colorManipulator;\n        this.state.vertexContainer5.vertex.b = 0 + this.state.vertexContainer5.colorManipulator;\n\n        this.draw();\n    }\n\n    propsAsString = obj => {\n        var depthLevelMap = new HashMap();\n        var depth = 1;\n\n        var unwrapObjects = (obj, depthLevelMap, depth) => {\n            return Object.keys(obj)\n                .map(function (k) {\n                    if (depthLevelMap.get(obj[k]) === undefined) {\n                        depthLevelMap.set(obj[k], 0);\n                    }\n\n                    var dethValue = depthLevelMap.get(obj[k]);\n\n                    if (\n                        typeof obj[k] === 'object' &&\n                        obj[k] !== null &&\n                        obj[k] !== undefined &&\n                        dethValue < depth\n                    ) {\n                        var currentDepthValue = depthLevelMap.get(obj[k]);\n                        currentDepthValue++;\n                        depthLevelMap.set(obj[k], currentDepthValue);\n\n                        return unwrapObjects(obj[k], depthLevelMap, depth);\n                    } else {\n                        return k + ' : ' + obj[k];\n                    }\n                })\n                .join(' \\n ');\n        };\n\n        return unwrapObjects(obj, depthLevelMap, depth);\n    };\n\n    render() {\n\n        const wrapperStyle = { width: 400, margin: 10 };\n\n\n\n        return (\n\n            <div>\n                <div>\n                    <h2>EA3</h2>\n                </div>\n\n                <div className='rowC'>\n\n                    <div className='canvasBox'>\n                        <canvas ref={ref => this['webGLCanvas'] = ref} width='512px' height='512px'></canvas>\n                    </div>\n\n                    <div className='sliderBox'>\n\n                        <div style={wrapperStyle}>\n\n                            Vertex1 X Value:\n                                <Slider min={this.state.xMin} max={this.state.xMax} defaultValue={this.state.vertexContainer1.vertex.x} step={0.01} handle={handle} onChange={this.changeXV1} />\n\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex1 Y Value:\n                                <Slider min={this.state.yMin} max={this.state.yMax} defaultValue={this.state.vertexContainer1.vertex.y} step={0.01} handle={handle} onChange={this.changeYV1} />\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex1 Color\n                <Slider min={-0.5} max={0.5} defaultValue={this.state.vertexContainer1.colorManipulator} step={0.001} handle={handle} onChange={this.changeColorV1} />\n                        </div>\n\n\n\n                        <div style={wrapperStyle}>\n                            Vertex2 X Value:\n                                <Slider min={this.state.xMin} max={this.state.xMax} defaultValue={this.state.vertexContainer2.vertex.x} step={0.01} handle={handle} onChange={this.changeXV2} />\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex2 Y Value:\n                                <Slider min={this.state.yMin} max={this.state.yMax} defaultValue={this.state.vertexContainer2.vertex.y} step={0.01} handle={handle} onChange={this.changeYV2} />\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex2 Color\n                <Slider min={-0.5} max={0.5} defaultValue={this.state.vertexContainer2.colorManipulator} step={0.001} handle={handle} onChange={this.changeColorV2} />\n                        </div>\n\n\n\n\n                        <div style={wrapperStyle}>\n                            Vertex3 X Value:\n                                <Slider min={this.state.xMin} max={this.state.xMax} defaultValue={this.state.vertexContainer3.vertex.x} step={0.01} handle={handle} onChange={this.changeXV3} />\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex3 Y Value:\n                                <Slider min={this.state.yMin} max={this.state.yMax} defaultValue={this.state.vertexContainer3.vertex.y} step={0.01} handle={handle} onChange={this.changeYV3} />\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex3 Color\n                <Slider min={-0.5} max={0.5} defaultValue={this.state.vertexContainer3.colorManipulator} step={0.001} handle={handle} onChange={this.changeColorV3} />\n                        </div>\n\n\n                        <div style={wrapperStyle}>\n                            Vertex4 X Value:\n                                <Slider min={this.state.xMin} max={this.state.xMax} defaultValue={this.state.vertexContainer4.vertex.x} step={0.01} handle={handle} onChange={this.changeXV4} />\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex4 Y Value:\n                                <Slider min={this.state.yMin} max={this.state.yMax} defaultValue={this.state.vertexContainer4.vertex.y} step={0.01} handle={handle} onChange={this.changeYV4} />\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex4 Color\n                <Slider min={-0.5} max={0.5} defaultValue={this.state.vertexContainer4.colorManipulator} step={0.001} handle={handle} onChange={this.changeColorV4} />\n                        </div>\n\n                        <div style={wrapperStyle}>\n                            Vertex5 X Value:\n                                <Slider min={this.state.xMin} max={this.state.xMax} defaultValue={this.state.vertexContainer5.vertex.x} step={0.01} handle={handle} onChange={this.changeXV5} />\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex5 Y Value:\n                                <Slider min={this.state.yMin} max={this.state.yMax} defaultValue={this.state.vertexContainer5.vertex.y} step={0.01} handle={handle} onChange={this.changeYV5} />\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex5 Color\n                <Slider min={-0.5} max={0.5} defaultValue={this.state.vertexContainer5.colorManipulator} step={0.001} handle={handle} onChange={this.changeColorV5} />\n                        </div>\n\n                    </div>\n\n                </div>\n\n                <div>{this.state.eventKey}</div>\n                <KeyboardEventHandler\n                    handleKeys={['?']}\n                    onKeyEvent={(key, e) => this.handleKeyDown(key)} />\n\n                <div style={{ position: 'relative', height: '30px' }}></div>\n            </div>\n\n\n        );\n    }\n}","import React, { Component } from 'react';\nimport Slider from 'rc-slider';\nimport Tooltip from 'rc-tooltip';\nimport Checkbox from 'react-simple-checkbox';\n\nvar i = 1;                     //  set your counter to 1\nconst Handle = Slider.Handle;\n\nconst handle = (props) => {\n    const { value, dragging, index, ...restProps } = props;\n    return (\n        <Tooltip\n            prefixCls=\"rc-slider-tooltip\"\n            overlay={value}\n            visible={dragging}\n            placement=\"top\"\n            key={index}\n        >\n            <Handle value={value} {...restProps} />\n        </Tooltip>\n    );\n};\nexport default class EA4_1 extends Component {\n\n    static propTypes = {}\n    static defaultProps = {}\n\n    constructor(props) {\n        super(props);\n        this.state = { // state keys go here\n            constant: 0.0,\n            checked: true\n        }\n    }\n\n    componentDidMount() {\n        this.init(true);\n    }\n\n    handleCheckboxChange = (value) => {\n        this.setState({ checked: value });\n\n        if(value)\n        {\n            this.init();\n        }\n        else \n        {\n            this.draw();\n        }\n    }\n\n    changeConstant = (value) => {\n        this.setState({ constant: value });\n        if(!this.state.checked)\n        {\n            this.draw();\n        }\n    }\n\n    draw = () => {\n\n        try {\n            var gl = this['webGLCanvas'].getContext('webgl');\n            if (!gl) { throw \"x\"; }\n        } catch (err) {\n            throw \"Your web browser does not support WebGL!\";\n        }\n\n        // Pipeline setup.\n        gl.clearColor(.0, .0, .0, 1);\n        // Backface culling.\n        gl.frontFace(gl.CCW);\n        gl.enable(gl.CULL_FACE);\n        gl.cullFace(gl.BACK);\n\n        // Compile vertex shader. \n        var vsSource = '' +\n            'attribute vec3 pos;' +\n            'attribute vec4 col;' +\n            'attribute float c;' +\n            'varying vec4 color;' +\n            'void main(){' + 'color = col;' +\n            'gl_Position = vec4(c * pos, 1);' +\n            '}';\n        var vs = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vs, vsSource);\n        gl.compileShader(vs);\n\n        // Compile fragment shader.\n        var fsSouce = 'precision mediump float;' +\n            'varying vec4 color;' +\n            'void main() {' +\n            'gl_FragColor = color;' +\n            '}';\n        var fs = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fs, fsSouce);\n        gl.compileShader(fs);\n\n        // Link shader together into a program.\n        var prog = gl.createProgram();\n        gl.attachShader(prog, vs);\n        gl.attachShader(prog, fs);\n        gl.bindAttribLocation(prog, 0, \"pos\");\n        gl.linkProgram(prog);\n        gl.useProgram(prog);\n\n        // Vertex data.\n        // Positions, Index data.\n        var vertices, indicesLines, indicesTris;\n        // Fill the data arrays.\n        createVertexData();\n\n        // Setup position vertex buffer object.\n        var vboPos = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, vboPos);\n        gl.bufferData(gl.ARRAY_BUFFER,\n            vertices, gl.STATIC_DRAW);\n        // Bind vertex buffer to attribute variable.\n        var posAttrib = gl.getAttribLocation(prog, 'pos');\n        gl.vertexAttribPointer(posAttrib, 3, gl.FLOAT,\n            false, 0, 0);\n        gl.enableVertexAttribArray(posAttrib);\n\n        // Setup constant color.\n        var colAttrib = gl.getAttribLocation(prog, 'col');\n\n        // Setup lines index buffer object.\n        var iboLines = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboLines);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,\n            indicesLines, gl.STATIC_DRAW);\n        iboLines.numberOfElements = indicesLines.length;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n        // Setup tris index buffer object.\n        var iboTris = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboTris);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,\n            indicesTris, gl.STATIC_DRAW);\n        iboTris.numberOfElements = indicesTris.length;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n        // Clear framebuffer and render primitives.\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        var c = gl.getAttribLocation(prog, 'c');\n        gl.vertexAttrib1f(c, this.state.constant);\n\n        // Setup rendering tris.\n        gl.vertexAttrib4f(colAttrib, \n            this.state.checked? Math.random(0.5) : 0.6, \n            this.state.checked? Math.random(0.5) : 0.6, \n            this.state.checked? Math.random(0.5) : 0.6, 0.8);\n\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboTris);\n        gl.drawElements(gl.TRIANGLES,\n            iboTris.numberOfElements, gl.UNSIGNED_SHORT, 0);\n\n        // Setup rendering lines.\n        gl.vertexAttrib4f(colAttrib, \n            \n        this.state.checked? Math.random(0.5) : 0.6, \n        this.state.checked? Math.random(0.5) : 0.6, \n        this.state.checked? Math.random(0.5) : 0.6, 0.7);\n\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboLines);\n        gl.drawElements(gl.LINES,\n            iboLines.numberOfElements, gl.UNSIGNED_SHORT, 0);\n\n        function createVertexData() {\n            var n = 100;\n            var m = 100;\n            // Positions.\n            vertices = new Float32Array(3 * (n + 1) * (m + 1));\n            // Index data.\n            indicesLines = new Uint16Array(2 * 2 * n * m);\n            indicesTris = new Uint16Array(3 * 2 * n * m);\n\n            var dt = 100 / n;\n            var dr = 100 / m;\n            // Counter for entries in index array.\n            var iLines = 0;\n            var iTris = 0;\n\n            // Loop angle t.\n            for (var i = 0, t = -1; i <= n; i++ , t += dt) {\n                // Loop radius r.\n                for (var j = 0, r = -1; j <= m; j++ , r += dr) {\n\n                    var iVertex = i * (m + 1) + j;\n\n                    var u = r;\n                    var v = t;\n\n                    //var x = u;\n                    //var y = v;\n                    //var z = Math.pow(r,3) - 3 * r * Math.pow(t,2);\n\n                    var x = u * Math.cos(Math.cos(u)) * Math.cos(v);\n                    var y = u * Math.cos(Math.cos(u)) * Math.sin(v);\n                    var z = u * Math.sin(Math.cos(u));\n\n                    // Set vertex positions.\n                    vertices[iVertex * 3] = x;\n                    vertices[iVertex * 3 + 1] = y;\n                    vertices[iVertex * 3 + 2] = z;\n\n                    // Set index.\n                    // Line on beam.\n                    if (j > 0 && i > 0) {\n                        indicesLines[iLines++] = iVertex - 1;\n                        indicesLines[iLines++] = iVertex;\n                    }\n                    // Line on ring.\n                    if (j > 0 && i > 0) {\n                        indicesLines[iLines++] = iVertex - (m + 1);\n                        indicesLines[iLines++] = iVertex;\n                    }\n\n                    // Set index.\n                    // Two Triangles.\n                    if (j > 0 && i > 0) {\n                        indicesTris[iTris++] = iVertex;\n                        indicesTris[iTris++] = iVertex - 1;\n                        indicesTris[iTris++] = iVertex - (m + 1);\n                        //        \n                        indicesTris[iTris++] = iVertex - 1;\n                        indicesTris[iTris++] = iVertex - (m + 1) - 1;\n                        indicesTris[iTris++] = iVertex - (m + 1);\n                    }\n                }\n            }\n        }\n    }\n\n\n\n    myLoop = () => {\n\n        setTimeout(() => {\n            this.draw();\n            this.changeConstant(this.state.constant + 0.0001);\n            i++;\n\n            if (this.state.checked) {\n                if (i < 100000) {\n                    this.myLoop();\n                }\n            } else {\n                i = 0;\n            }\n        }, 100)\n    }\n\n    init = () => {\n        try {\n            this.myLoop();\n        } catch (e) {\n            alert(\"Error: \" + e);\n        }\n    }\n    render() {\n\n        const wrapperStyle = { width: 400, margin: 10 };\n        return (\n\n            <div>\n                <div>\n                    <h2>EA4 1 - Wellenkugel</h2>\n                </div>\n\n                <div className='rowC'>\n\n                    <div className='canvasBox'>\n                        <canvas ref={ref => this['webGLCanvas'] = ref} width='512px' height='512px'></canvas>\n                    </div>\n                </div>\n\n                <div style={wrapperStyle}>\n                    Zoom :\n                                <Slider min={0.00000001} max={0.9} defaultValue={0.0} step={0.00001} handle={handle} onChange={this.changeConstant} />\n                </div>\n\n                <div style={wrapperStyle}>\n                    Animation on?\n                        <Checkbox\n                        id='Animation'\n                        color='#884A88'\n                        size='2'\n                        checked={this.state.checked}\n                        onChange={this.handleCheckboxChange}\n                    />\n                </div>\n\n                <div style={{ position: 'relative', height: '30px' }}></div>\n            </div>\n\n\n        );\n    }\n}","import React, { Component } from 'react';\nimport Slider from 'rc-slider';\nimport Tooltip from 'rc-tooltip';\nimport Checkbox from 'react-simple-checkbox';\n\nvar i = 1;                     //  set your counter to 1\n\nconst Handle = Slider.Handle;\n\nconst handle = (props) => {\n    const { value, dragging, index, ...restProps } = props;\n    return (\n        <Tooltip\n            prefixCls=\"rc-slider-tooltip\"\n            overlay={value}\n            visible={dragging}\n            placement=\"top\"\n            key={index}\n        >\n            <Handle value={value} {...restProps} />\n        </Tooltip>\n    );\n};\n\nexport default class EA4_2 extends Component {\n\n    static propTypes = {}\n    static defaultProps = {}\n\n    constructor(props) {\n        super(props);\n        this.state = { // state keys go here\n            constant: 1.0,\n            parameter: 0.0,\n            checked: true\n        }\n    }\n\n    componentDidMount() {\n        this.init();\n    }\n\n    handleCheckboxChange = (value) => {\n        this.setState({ checked: value });\n\n        if(value)\n        {\n            this.init();\n        }\n        else \n        {\n            this.draw();\n        }\n    }\n\n    changeConstant = (value) => {\n        this.setState({ constant: value });\n        if(!this.state.checked)\n        {\n            this.draw();\n        }\n    }\n\n    changeParameter =  (value) => \n    {\n        this.setState({parameter: value});\n\n        if(!this.state.checked)\n        {\n            this.draw();\n        }\n    }\n\n    draw = () => {\n\n        try {\n            var gl = this['webGLCanvas'].getContext('webgl');\n            if (!gl) { throw \"x\"; }\n        } catch (err) {\n            throw \"Your web browser does not support WebGL!\";\n        }\n \n           // Pipeline setup.\n           gl.clearColor(Math.random(0.2), Math.random(0.2), Math.random(0.2), 0.5);\n           // Backface culling.\n           gl.frontFace(gl.CCW);\n           gl.enable(gl.CULL_FACE);\n           gl.cullFace(gl.BACK);\n\n           // Compile vertex shader. \n           var vsSource = '' + \n               'attribute vec3 pos;' + \n               'attribute vec4 col;' +\n               'attribute float c;' + \n               'varying vec4 color;' + \n               'void main(){' + 'color = col;' + \n               'gl_Position = vec4(c * pos, 1);' +\n               '}';\n           var vs = gl.createShader(gl.VERTEX_SHADER);\n           gl.shaderSource(vs, vsSource);\n           gl.compileShader(vs);\n\n           // Compile fragment shader.\n           var fsSouce = 'precision mediump float;' + \n               'varying vec4 color;' + \n               'void main() {' + \n               'gl_FragColor = color;' + \n               '}';\n           var fs = gl.createShader(gl.FRAGMENT_SHADER);\n           gl.shaderSource(fs, fsSouce);\n           gl.compileShader(fs);\n\n           // Link shader together into a program.\n           var prog = gl.createProgram();\n           gl.attachShader(prog, vs);\n           gl.attachShader(prog, fs);\n           gl.bindAttribLocation(prog, 0, \"pos\");\n           gl.linkProgram(prog);\n           gl.useProgram(prog);\n\n           // Vertex data.\n           // Positions, Index data.\n           var vertices, indicesLines, indicesTris;\n           // Fill the data arrays.\n           var containerObject = this.createVertexData(vertices, indicesLines, indicesTris);\n\n           vertices = containerObject.vertices;\n           indicesLines = containerObject.indicesLines;\n           indicesTris = containerObject.indicesTris;\n\n           // Setup position vertex buffer object.\n           var vboPos = gl.createBuffer();\n           gl.bindBuffer(gl.ARRAY_BUFFER, vboPos);\n           gl.bufferData(gl.ARRAY_BUFFER,\n               vertices, gl.STATIC_DRAW);\n           // Bind vertex buffer to attribute variable.\n           var posAttrib = gl.getAttribLocation(prog, 'pos');\n           gl.vertexAttribPointer(posAttrib, 3, gl.FLOAT,\n               false, 0, 0);\n           gl.enableVertexAttribArray(posAttrib);\n\n           // Setup constant color.\n           var colAttrib = gl.getAttribLocation(prog, 'col');\n\n           // Setup lines index buffer object.\n           var iboLines = gl.createBuffer();\n           gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboLines);\n           gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,\n               indicesLines, gl.STATIC_DRAW);\n           iboLines.numberOfElements = indicesLines.length;\n           gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n           // Setup tris index buffer object.\n           var iboTris = gl.createBuffer();\n           gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboTris);\n           gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,\n               indicesTris, gl.STATIC_DRAW);\n           iboTris.numberOfElements = indicesTris.length;\n           gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n           // Clear framebuffer and render primitives.\n           gl.clear(gl.COLOR_BUFFER_BIT);\n\n           var c = gl.getAttribLocation(prog, 'c');\n\n           gl.vertexAttrib1f(c,this.state.constant);\n           // Setup rendering tris.\n           gl.vertexAttrib4f(colAttrib, Math.random(0.5), Math.random(0.5),Math.random(0.5),1);\n           gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboTris);\n           gl.drawElements(gl.TRIANGLES,\n               iboTris.numberOfElements, gl.UNSIGNED_SHORT, 0);\n\n           // Setup rendering lines.\n           gl.vertexAttrib4f(colAttrib, Math.random(0.5),Math.random(0.5),Math.random(0.5),1);\n           gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboLines);\n           gl.drawElements(gl.LINES,\n               iboLines.numberOfElements, gl.UNSIGNED_SHORT, 0);\n\n\n    }\n\n    createVertexData = (vertices, indicesLines, indicesTris) => {\n        var n = 100;\n        var m = 100;\n        // Positions.\n        vertices = new Float32Array(3 * (n+1) * (m+1));\n        // Index data.\n        indicesLines = new Uint16Array(2 * 2 * n * m);\n        indicesTris  = new Uint16Array(3 * 2 * n * m);\n\n        var dt = 10/n;\n        var dr = 10/m;\n        // Counter for entries in index array.\n        var iLines = 0;\n        var iTris = 0;\n\n        // Loop angle t.\n        for(var i=0, t=-Math.PI; i <= n; i++, t += dt) {\n            // Loop radius r.\n            for(var j=0, r=Math.PI; j <= m; j++, r += dr){\n\n                 var u = t;\n                 var v = r;\n\n                var iVertex = i*(m+1) + j;\n\n                var x = 2 * Math.sin(3* u)/(2 + Math.cos(v*this.state.parameter));\n                var y = 2 * (Math.sin(u) + 2* Math.sin(2 *u*this.state.parameter))/(2 + Math.cos(v*this.state.parameter + 2 *Math.PI/3));    \n                var z = (Math.cos(u) - 2 * Math.cos(2 * u)) * (2 + Math.cos(v)) * (2 + Math.cos(v + 2 * Math.PI))/4;\n\n                \n\n                // Set vertex positions.\n                vertices[iVertex * 3] = x;\n                vertices[iVertex * 3 + 1] = y;\n                vertices[iVertex * 3 + 2] = z;\n\n                // Set index.\n                // Line on beam.\n                if(j>0 && i>0){\n                    indicesLines[iLines++] = iVertex - 1;\n                    indicesLines[iLines++] = iVertex;\n                }\n                // Line on ring.\n                if(j>0 && i>0){\n                    indicesLines[iLines++] = iVertex - (m+1);                            \n                    indicesLines[iLines++] = iVertex;\n                }\n\n                // Set index.\n                // Two Triangles.\n                if(j>0 && i>0){\n                    indicesTris[iTris++] = iVertex;\n                    indicesTris[iTris++] = iVertex - 1;\n                    indicesTris[iTris++] = iVertex - (m+1);\n                    //        \n                    indicesTris[iTris++] = iVertex - 1;\n                    indicesTris[iTris++] = iVertex - (m+1) - 1;\n                    indicesTris[iTris++] = iVertex - (m+1);    \n                }\n            }\n        }\n\n        return {vertices:vertices , \n            indicesLines:indicesLines , \n            indicesTris:indicesTris }\n    } \n\n     myLoop = () => {\n\n        setTimeout(() => {\n            this.draw();\n            this.changeParameter(this.state.parameter + 0.001);\n            this.changeConstant(this.state.constant - 0.01);\n            i++;\n\n            if (this.state.checked) {\n                if (i < 100000) {\n                    this.myLoop();\n                }\n            } else {\n                i = 0;\n            }\n        }, 100)\n    }\n\n    init = () => {\n        try {\n            this.myLoop();            \n        } catch (e) {\n            alert(\"Error: \" + e);\n        }\n    }\n    render() {\n\n        const wrapperStyle = { width: 400, margin: 10 };\n        return (\n\n            <div>\n                <div>\n                    <h2>EA4 2 - Tranguloid Trefoil (with extra parameter)</h2>\n                </div>\n\n                <div className='rowC'>\n\n                    <div className='canvasBox'>\n                        <canvas ref={ref => this['webGLCanvas'] = ref} width='512px' height='512px'></canvas>\n                    </div>\n                </div>\n\n                <div style={wrapperStyle}>\n                            Zoom :\n                                <Slider min={0.001} max={2.0} defaultValue={1.0} step={0.001} handle={handle} onChange={this.changeConstant} />\n                        </div>\n\n                        <div style={wrapperStyle}>\n                            Parameter :\n                                <Slider min={0.000001} max={4.0} defaultValue={0.0} step={0.000001} handle={handle} onChange={this.changeParameter} />\n                        </div>\n\n                        <div style={wrapperStyle}>\n                    Animation on?\n                        <Checkbox\n                        id='Animation'\n                        color='#884A88'\n                        size='2'\n                        checked={this.state.checked}\n                        onChange={this.handleCheckboxChange}\n                    />\n                </div>\n\n                <div style={{ position: 'relative', height: '30px' }}></div>\n            </div>\n\n\n        );\n    }\n}","import React, { Component } from 'react';\nimport './ea5.css';\n\nexport default class EA5 extends Component {\n\n    static propTypes = {}\n    static defaultProps = {}\n\n    constructor(props) {\n        super(props);\n        this.state = { // state keys go here\n        }\n    }\n\n    componentDidMount() {\n        this.init();\n    }\n\n    draw = () => {\n\n        try {\n            var gl = this['webGLCanvas'].getContext('webgl');\n            if (!gl) { throw \"x\"; }\n        } catch (err) {\n            throw \"Your web browser does not support WebGL!\";\n        }\n \n           \n            // Pipeline setup.\n            gl.clearColor(.95, .95, .95, 1);\n            // Backface culling.\n            gl.frontFace(gl.CCW);\n            gl.enable(gl.CULL_FACE);\n            gl.cullFace(gl.BACK);\n            // Depth(Z)-Buffer.\n            gl.enable(gl.DEPTH_TEST);\n            gl.depthFunc(gl.LEQUAL);    \n            // Polygon offset of rastered Fragments.\n            gl.enable(gl.POLYGON_OFFSET_FILL);\n            gl.polygonOffset(0.5, 0);           \n \n            // Compile vertex shader. \n            var vsSource = '' + \n                'attribute vec3 pos;' + \n                'attribute vec3 col;' + \n                'varying vec4 color;' + \n                'void main(){' +\n                'color = vec4(col.z, col.z, col.z, 1);' + \n                'gl_Position = vec4(pos, 1);' +\n                '}';\n            var vs = gl.createShader(gl.VERTEX_SHADER);\n            gl.shaderSource(vs, vsSource);\n            gl.compileShader(vs);\n \n            // Compile fragment shader.\n            var fsSouce = 'precision mediump float;' + \n                'varying vec4 color;' + \n                'void main() {' + \n                'gl_FragColor = color;' + \n                '}';\n            var fs = gl.createShader(gl.FRAGMENT_SHADER);\n            gl.shaderSource(fs, fsSouce);\n            gl.compileShader(fs);\n \n            // Link shader together into a program.\n            var prog = gl.createProgram();\n            gl.attachShader(prog, vs);\n            gl.attachShader(prog, fs);\n            gl.bindAttribLocation(prog, 0, \"pos\");\n            gl.linkProgram(prog);\n            gl.useProgram(prog);\n \n            // Vertex data.\n            // Positions, Normals, Index data.\n            var vertices, normals, indicesLines, indicesTris;\n            // Fill the data arrays.\n            createVertexData();\n \n            // Setup position vertex buffer object.\n            var vboPos = gl.createBuffer();\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboPos);\n            gl.bufferData(gl.ARRAY_BUFFER,\n                vertices, gl.STATIC_DRAW);\n            // Bind vertex buffer to attribute variable.\n            var posAttrib = gl.getAttribLocation(prog, 'pos');\n            gl.vertexAttribPointer(posAttrib, 3, gl.FLOAT,\n                false, 0, 0);\n            gl.enableVertexAttribArray(posAttrib);\n \n            // Setup normal vertex buffer object.\n            var vboNormal = gl.createBuffer();\n            gl.bindBuffer(gl.ARRAY_BUFFER, vboNormal);\n            gl.bufferData(gl.ARRAY_BUFFER,\n                normals, gl.STATIC_DRAW);\n            // Bind buffer to attribute variable.\n            var colAttrib = gl.getAttribLocation(prog, 'col');\n            gl.vertexAttribPointer(colAttrib, 3, gl.FLOAT,\n                false, 0, 0);\n            gl.enableVertexAttribArray(colAttrib);\n \n            // Setup constant color.\n            //var colAttrib = gl.getAttribLocation(prog, 'col');\n \n            // Setup lines index buffer object.\n            var iboLines = gl.createBuffer();\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboLines);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,\n                indicesLines, gl.STATIC_DRAW);\n            iboLines.numberOfElements = indicesLines.length;\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n \n            // Setup tris index buffer object.\n            var iboTris = gl.createBuffer();\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboTris);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,\n                indicesTris, gl.STATIC_DRAW);\n            iboTris.numberOfElements = indicesTris.length;\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n \n            // Clear framebuffer and render primitives.\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n \n            // Setup rendering tris.\n            // gl.vertexAttrib4f(colAttrib, 0, 1, 1, 1);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboTris);\n            gl.drawElements(gl.TRIANGLES,\n                iboTris.numberOfElements, gl.UNSIGNED_SHORT, 0);\n \n            // Setup rendering lines.\n            gl.disableVertexAttribArray(colAttrib);\n            gl.vertexAttrib3f(colAttrib, 0, 0, 0);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboLines);\n            gl.drawElements(gl.LINES,\n                iboLines.numberOfElements, gl.UNSIGNED_SHORT, 0);\n \n            function createVertexData(){\n                var n = 100;\n                var m = 100;\n \n                // Positions.\n                vertices = new Float32Array(3 * (n+1) * (m+1));\n                // Normals.\n                normals = new Float32Array(3 * (n+1) * (m+1));                                \n                // Index data.\n                indicesLines = new Uint16Array(2 * 2 * n * m);\n                indicesTris  = new Uint16Array(3 * 2 * n * m);\n \n                var du = /*2 * Math.PI/*/2/n;\n                var dv = /*Math.PI/*/2/m;\n                var r = 1;\n                // Counter for entries in index array.\n                var iLines = 0;\n                var iTris = 0;\n \n                // Loop angle u.\n                for(var i=0, u=-1; i <= n; i++, u += du) {\n                    // Loop angle v.\n                    for(var j=0, v=-1; j <= m; j++, v += dv) {\n \n                        var iVertex = i*(m+1) + j;\n /*\n                        var x = r * Math.sin(v) * Math.cos(u);\n                        var y = r * Math.sin(v) * Math.sin(u);\n                        var z = r * Math.cos(v);*/\n\n                        var x = u;\n                        var y = v;\n                        var z = Math.pow(u,3) - 3 * u * Math.pow(v,2);\n \n                        // Set vertex positions.\n                        vertices[iVertex * 3] = x;\n                        vertices[iVertex * 3 + 1] = y;\n                        vertices[iVertex * 3 + 2] = z;\n \n                        // Calc and set normals.\n                        var vertexLength = Math.sqrt(x*x+y*y+z*z);\n                        normals[iVertex * 3] = x/vertexLength;\n                        normals[iVertex * 3 + 1] = y/vertexLength;\n                        normals[iVertex * 3 + 2] = z/vertexLength;\n \n                        // Set index.\n                        // Line on beam.\n                        if(j>0 && i>0){\n                            indicesLines[iLines++] = iVertex - 1;\n                            indicesLines[iLines++] = iVertex;\n                         }\n                        // Line on ring.\n                        if(j>0 && i>0){\n                            indicesLines[iLines++] = iVertex - (m+1);                            \n                            indicesLines[iLines++] = iVertex;\n                        }                   \n \n                        // Set index.\n                        // Two Triangles.\n                        if(j>0 && i>0){\n                            indicesTris[iTris++] = iVertex;\n                            indicesTris[iTris++] = iVertex - 1;\n                            indicesTris[iTris++] = iVertex - (m+1);\n                            //                            \n                            indicesTris[iTris++] = iVertex - 1;\n                            indicesTris[iTris++] = iVertex - (m+1) - 1;                            \n                            indicesTris[iTris++] = iVertex - (m+1);                            \n                        }\n                    }\n                }\n            }    \n    }\n\n    init = () => {\n        try {\n            this.draw();\n        } catch (e) {\n            alert(\"Error: \" + e);\n        }\n    }\n    render() {\n\n        const wrapperStyle = { width: 400, margin: 10 };\n        return (\n\n            <div>\n                <div>\n                    <h2>EA5</h2>\n                </div>\n\n                <div className='rowC'>\n                    <div className='canvasBox'>\n                        <canvas ref={ref => this['webGLCanvas'] = ref} width='512px' height='512px'></canvas>\n                    </div>\n                </div>\n                <div style={{ position: 'relative', height: '30px' }}></div>\n            </div>\n\n\n        );\n    }\n}","import React from 'react';\nimport './App.css';\nimport EA1 from './EA1/index.js';\nimport EA2 from './EA2/index.js';\nimport EA3 from './EA3/index.js';\nimport EA4_1 from './EA4_1/index.js';\nimport EA4_2 from './EA4_2/index.js';\nimport EA5 from './EA5/index.js';\n\nfunction App() {\n  return (\n\n    <div>\n\n<div className='ea4_row'>\n  <div className='ea4_1_box'>\n  <EA4_1></EA4_1>\n  </div>\n  <div className='ea4_2_box'>\n  <EA4_2></EA4_2>\n  </div>\n</div>\n\n      <EA3></EA3>\n      <EA2></EA2>\n      <EA1></EA1> \n      \n      {/*<EA5></EA5>*/}\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
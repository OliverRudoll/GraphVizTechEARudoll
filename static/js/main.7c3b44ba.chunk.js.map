{"version":3,"sources":["EA1/index.js","EA2/index.js","EA3/index.js","EA4_1/index.js","EA4_2/index.js","EA5/sphere.js","EA5/custom.js","EA5/index.js","App.js","serviceWorker.js","index.js"],"names":["EA1","props","handleKeyDown","key","refName","console","log","tempKey","state","eventKey","setState","yOffset","string","style","background","toString","ref","position","width","height","src","alt","this","handleKeys","onKeyEvent","e","href","Component","defaultProps","EA2","shaderProgram","gl","vs","fs","prog","createProgram","addshader","type","source","s","createShader","VERTEX_SHADER","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","attributeSetFloats","attr_name","rsize","arr","bindBuffer","ARRAY_BUFFER","createBuffer","bufferData","Float32Array","STATIC_DRAW","attr","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","draw","getContext","err","clearColor","clear","COLOR_BUFFER_BIT","useProgram","drawArrays","LINE_STRIP","init","alert","vertexShaderText","join","fragmentShaderText","Handle","createSliderWithTooltip","Slider","Range","handle","value","dragging","index","restProps","prefixCls","overlay","visible","placement","EA3","triangleVertices","vertexContainer1","vertex","x","y","r","g","b","vertexContainer2","vertexContainer3","vertexContainer4","vertexContainer5","triangleVertexBufferObject","positionAttribLocation","colorAttribLocation","FALSE","BYTES_PER_ELEMENT","TRIANGLE_STRIP","changeXV1","changeYV1","changeXV2","changeYV2","changeXV3","changeYV3","changeXV4","changeYV4","changeXV5","changeYV5","changeColorV1","colorManipulator","changeColorV2","changeColorV3","changeColorV4","changeColorV5","propsAsString","obj","unwrapObjects","depthLevelMap","depth","Object","keys","map","k","undefined","get","set","dethValue","currentDepthValue","HashMap","xMin","xMax","yMin","yMax","wrapperStyle","margin","className","min","max","defaultValue","step","onChange","i","EA4_1","handleCheckboxChange","checked","changeConstant","constant","frontFace","CCW","enable","CULL_FACE","cullFace","BACK","vertices","indicesLines","indicesTris","bindAttribLocation","n","m","Uint16Array","iLines","iTris","t","j","iVertex","u","v","Math","cos","sin","z","createVertexData","vboPos","posAttrib","colAttrib","iboLines","ELEMENT_ARRAY_BUFFER","numberOfElements","length","iboTris","c","vertexAttrib1f","vertexAttrib4f","random","drawElements","TRIANGLES","UNSIGNED_SHORT","LINES","myLoop","setTimeout","id","color","size","EA4_2","changeParameter","parameter","containerObject","PI","normals","nx","ny","nz","models","camera","eye","center","up","fovy","lrtb","vMatrix","glmatrix","create","pMatrix","projectionType","zAngle","distance","EA5","rotationX","cameraEyeX","rotationY","cameraEyeY","rotationZ","cameraEyeZ","zoom","renderWegGL","initWebGL","initShaderProgram","initUniforms","initModels","initEventHandler","initPipline","viewportWidth","viewportHeight","DEPTH_TEST","POLYGON_OFFSET_FILL","polygonOffset","viewport","aspect","initShader","shaderType","SourceTagId","shader","pMatrixUniform","getUniformLocation","mvMatrixUniform","createModel","importedGeometry1","importedGeometry2","geometryname","fillstyle","model","initDataAndBuffers","mvMatrix","push","apply","positionAttrib","vboNormal","normalAttrib","window","onkeydown","evt","which","keyCode","String","fromCharCode","calculateCameraOrbit","DEPTH_BUFFER_BIT","setProjection","lookAt","copy","uniformMatrix4fv","ortho","search","disableVertexAttribArray","vertexAttrib3f","cameraCenterX","cameraCenterY","cameraCenterZ","cameraUpX","cameraUpY","cameraUpZ","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7c3b44ba.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\nimport './ea1.css';\n\nexport default class EA1 extends Component {\n    static propTypes = {}\n    static defaultProps = {}\n\n    constructor(props) {\n        super(props);\n        this.state = { // state keys go here\n            yOffset: 0,\n            eventKey: \" \"\n        }\n    }\n\n    handleKeyDown = (key,refName) => {\n\n        console.log(key + \"is down\");\n\n        var tempKey = key + \" \" + this.state.eventKey;\n\n        this.setState(\n            {\n                eventKey: tempKey\n            })\n\n        if (key === 'l') {\n            console.log('L pressed ! ')\n\n            if (this.state.yOffset >= 512) {\n                this.setState(\n                    {\n                        yOffset: this.state.yOffset - 512\n                    })\n            }\n\n        } else if (key === 'r') {\n            console.log('R pressed ! ')\n\n\n            this.setState(\n                {\n                    yOffset: this.state.yOffset + 512\n                })\n        }\n\n        var string = `url(\"https://i.ibb.co/b7HgSFy/Graph-Viz-Tech-EA1.png\") 0px ${this.state.yOffset}px`;\n        this[refName].style.background = string.toString();\n    }\n\n     //background: 'url(\"images/GraphVizTechEA1.png\") 0 0'},} \n     //src={process.env.PUBLIC_URL + '/images/placeholder1x1.png'} alt=\"circle\" width=\"1\" height=\"1\"></img>\n\n    render() {\n        //TODO change clippingrect css by jscript code on key input left right\n        let refName = 'clippingrect';\n\n        return (\n            <div>\n                <div><h2>EA1</h2></div>\n\n                <img \n                ref={ref => this[refName] = ref}\n                style= {{position: 'relative',\n                width: '512px',\n                height: '512px',\n                background: 'url(\"https://i.ibb.co/b7HgSFy/Graph-Viz-Tech-EA1.png\") 0 0'}}\n                src={'https://i.ibb.co/Yc3S8ZW/placeholder1x1.png'} alt=\"circle\" width=\"1\" height=\"1\"></img>\n                \n                <div>Input Key detected: {this.state.eventKey}</div>\n\n                <KeyboardEventHandler\n                    handleKeys={['l', 'r']}\n                    onKeyEvent={(key, e) => this.handleKeyDown(key,refName)} />\n\n                    <div style= {{position: 'relative', height: '30px'}}></div>\n                    <a href='https://www.searchpng.com/2019/01/07/blue-circle-glow-png-free-download/'>Circle Image Reference</a>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\nimport './ea2.css';\n\nexport default class EA2 extends Component {\n    \n    static propTypes = {}\n    static defaultProps = {}\n\n    constructor(props) {\n        super(props);\n        this.state = { // state keys go here\n            eventKey: \" \"\n        }\n    }\n\n    \n    componentDidMount() {\n            this.init();\n    }\n\n\n    shaderProgram = (gl, vs, fs) => {\n\n        var prog = gl.createProgram();\n        var addshader = function(type, source) {\n            var s = gl.createShader((type == 'vertex') ?\n                gl.VERTEX_SHADER : gl.FRAGMENT_SHADER);\n            gl.shaderSource(s, source);\n            gl.compileShader(s);\n            if (!gl.getShaderParameter(s, gl.COMPILE_STATUS)) {\n                throw \"Could not compile \"+type+\n                    \" shader:\\n\\n\"+gl.getShaderInfoLog(s);\n            }\n            gl.attachShader(prog, s);\n        };\n        addshader('vertex', vs);\n        addshader('fragment', fs);\n        gl.linkProgram(prog);\n        if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n            throw \"Could not link the shader program!\";\n        }\n        return prog;\n    }\n    \n    attributeSetFloats = (gl, prog, attr_name, rsize, arr) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(arr),\n            gl.STATIC_DRAW);\n        var attr = gl.getAttribLocation(prog, attr_name);\n        gl.enableVertexAttribArray(attr);\n        gl.vertexAttribPointer(attr, rsize, gl.FLOAT, false, 0, 0);\n    }\n    \n    draw = () => {\n        try {\n            var gl = this['webGLCanvas'].getContext('webgl');\n            if (!gl) { throw \"x\"; }\n        } catch (err) {\n            throw \"Your web browser does not support WebGL!\";\n        }\n        gl.clearColor(0.8, 0.8, 0.8, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    \n        var prog = this.shaderProgram(gl,\n            \"attribute vec3 pos;\"+\n            \"void main() {\"+\n            \"\tgl_Position = vec4(pos, 2.0);\"+\n            \"}\",\n            \"void main() {\"+\n            \"\tgl_FragColor = vec4(0.5, 0.5, 1.0, 1.0);\"+\n            \"}\"\n        );\n        gl.useProgram(prog);\n    \n        this.attributeSetFloats(gl, prog, \"pos\", 2, [\n            0.1, -0.1,\n            -0.1, 0.1,\n            0.1,0.1,\n            -0.1,-0.1,\n            -0.1,-0.1,\n            -0.2,-0.2,\n            -0.2,-0.1,\n            -0.2,-0.2,\n            -0.2,0.2,\n            0.2,0.2,\n            0.2,-0.2,\n            0.1,-0.1,\n            0,0,\n            0,-0.5,\n            -0.5,-0.5,\n            -0.5,0.5,\n            0.5,0.5,\n            0.5,-0.5,\n            -0.5,-0.5,\n            -0.5,-0.5,\n            1.0, -1.0,\n            -1, 1,\n            1,1,\n            -1,-1,\n            -1,-1,\n            -1.2,-1.2,\n            -1.2,-1.1,\n            -1.2,-1.2,\n            -1.2,1.2,\n            1.2,1.2,\n            1.2,-1.2,\n            1.2,-1.2,\n            1.1,-1.1,\n            1.1,-1.1,\n            0,0,\n            -1.5,-1.5,\n            -1.5,1.5,\n            1.5,1.5,\n            1.5,-1.5,\n            -1.5,-1.5,\n            -1.5,-1.5\n        ]);\n        \n        gl.drawArrays(gl.LINE_STRIP, 0, 41);\n\n    }\n    \n    init = () => {\n        try {\n            this.draw();\n        } catch (e) {\n            alert(\"Error: \"+e);\n        }\n    }\n\n    handleKeyDown = (key) => {\n\n        this.setState(\n            {\n                eventKey: key\n            })\n\n        if (key === '?') {\n            console.log('? pressed ! ')\n        } \n    }\n\n    render() {\n\n        return (\n            <div>\n                <div><h2>EA2</h2></div>\n\n                <canvas ref={ref => this['webGLCanvas'] = ref} width ='512px' height ='512px'></canvas>\n\n                <div>{this.state.eventKey}</div>\n                <KeyboardEventHandler\n                    handleKeys={['?']}\n                    onKeyEvent={(key, e) => this.handleKeyDown(key)} />\n\n                    <div style= {{position: 'relative', height: '30px'}}></div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport Slider from 'rc-slider';\nimport Tooltip from 'rc-tooltip';\nimport 'rc-slider/assets/index.css';\nimport HashMap from 'hashmap';\n\nimport './ea3.css';\n\nvar vertexShaderText =\n    [\n        'precision mediump float;',\n        '',\n        'attribute vec2 vertPosition;',\n        'attribute vec3 vertColor;',\n        'varying vec3 fragColor;',\n        '',\n        'void main()',\n        '{',\n        '  fragColor = vertColor;',\n        '  gl_Position = vec4(vertPosition, 0.0, 1.0);',\n        '}'\n    ].join('\\n');\n\nvar fragmentShaderText =\n    [\n        'precision mediump float;',\n        '',\n        'varying vec3 fragColor;',\n        'void main()',\n        '{',\n        '  gl_FragColor = vec4(fragColor, 1.0);',\n        '}'\n    ].join('\\n');\n\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Range = createSliderWithTooltip(Slider.Range);\nconst Handle = Slider.Handle;\n\nconst handle = (props) => {\n    const { value, dragging, index, ...restProps } = props;\n    return (\n        <Tooltip\n            prefixCls=\"rc-slider-tooltip\"\n            overlay={value}\n            visible={dragging}\n            placement=\"top\"\n            key={index}\n        >\n            <Handle value={value} {...restProps} />\n        </Tooltip>\n    );\n};\n\n\nexport default class EA3 extends Component {\n\n    static propTypes = {}\n    static defaultProps = {}\n\n    constructor(props) {\n        super(props);\n        this.state = { // state keys go here\n            eventKey: \" \",\n            xMin: -1.0, xMax: 1.0, yMin: -1.0, yMax: 1.0,\n            vertexContainer1: { vertex: { x: 0.56, y: 0.88, r: 1.0, g: 1.0, b: 0.0 }, colorManipulator: -0.5 },\n            vertexContainer2: { vertex: { x: -0.6, y: 0.6, r: 0.5, g: 0.0, b: 1.0 }, colorManipulator: 0.0 },\n            vertexContainer3: { vertex: { x: 0.6, y: -0.6, r: 0.1, g: 1.0, b: 0.8 }, colorManipulator: 0.0 },\n            vertexContainer4: { vertex: { x: 0.6, y: 0.6, r: 0.3, g: 0.9, b: 0.8 }, colorManipulator: 0.0 },\n            vertexContainer5: { vertex: { x: -0.84, y: -0.19, r: 1.0, g: 0.2, b: 0.0 }, colorManipulator: -0.5 }\n        }\n    }\n\n    componentDidMount() {\n        this.init();\n    }\n\n\n    shaderProgram = (gl, vs, fs) => {\n\n        var prog = gl.createProgram();\n\n        var addshader = function (type, source) {\n\n            var s = gl.createShader((type === 'vertex') ? gl.VERTEX_SHADER : gl.FRAGMENT_SHADER);\n\n            gl.shaderSource(s, source);\n\n            gl.compileShader(s);\n\n            if (!gl.getShaderParameter(s, gl.COMPILE_STATUS)) {\n                throw \"Could not compile \" + type +\n                \" shader:\\n\\n\" + gl.getShaderInfoLog(s);\n            }\n\n            gl.attachShader(prog, s);\n\n        };\n\n        addshader('vertex', vs);\n        addshader('fragment', fs);\n\n        gl.linkProgram(prog);\n\n        if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n            throw \"Could not link the shader program!\";\n        }\n        return prog;\n    }\n\n    draw = () => {\n\n        try {\n            var gl = this['webGLCanvas'].getContext('webgl');\n            if (!gl) { throw \"x\"; }\n        } catch (err) {\n            throw \"Your web browser does not support WebGL!\";\n        }\n\n        gl.clearColor(0.8, 0.8, 0.8, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        var prog = this.shaderProgram(gl, vertexShaderText, fragmentShaderText);\n\n\n\n        var triangleVertices =\n            [ // X, Y,       R, G, B\n                this.state.vertexContainer1.vertex.x, this.state.vertexContainer1.vertex.y, this.state.vertexContainer1.vertex.r, this.state.vertexContainer1.vertex.g, this.state.vertexContainer1.vertex.b,\n                this.state.vertexContainer2.vertex.x, this.state.vertexContainer2.vertex.y, this.state.vertexContainer2.vertex.r, this.state.vertexContainer2.vertex.g, this.state.vertexContainer2.vertex.b,\n                this.state.vertexContainer3.vertex.x, this.state.vertexContainer3.vertex.y, this.state.vertexContainer3.vertex.r, this.state.vertexContainer3.vertex.g, this.state.vertexContainer3.vertex.b,\n                this.state.vertexContainer4.vertex.x, this.state.vertexContainer4.vertex.y, this.state.vertexContainer4.vertex.r, this.state.vertexContainer4.vertex.g, this.state.vertexContainer4.vertex.b,\n                this.state.vertexContainer5.vertex.x, this.state.vertexContainer5.vertex.y, this.state.vertexContainer5.vertex.r, this.state.vertexContainer5.vertex.g, this.state.vertexContainer5.vertex.b\n            ];\n\n        var triangleVertexBufferObject = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, triangleVertexBufferObject);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(triangleVertices), gl.STATIC_DRAW);\n\n        var positionAttribLocation = gl.getAttribLocation(prog, 'vertPosition');\n        var colorAttribLocation = gl.getAttribLocation(prog, 'vertColor');\n        gl.vertexAttribPointer(\n            positionAttribLocation, // Attribute location\n            2, // Number of elements per attribute\n            gl.FLOAT, // Type of elements\n            gl.FALSE,\n            5 * Float32Array.BYTES_PER_ELEMENT, // Size of an individual vertex\n            0 // Offset from the beginning of a single vertex to this attribute\n        );\n        gl.vertexAttribPointer(\n            colorAttribLocation, // Attribute location\n            3, // Number of elements per attribute\n            gl.FLOAT, // Type of elements\n            gl.FALSE,\n            5 * Float32Array.BYTES_PER_ELEMENT, // Size of an individual vertex\n            2 * Float32Array.BYTES_PER_ELEMENT // Offset from the beginning of a single vertex to this attribute\n        );\n\n        gl.enableVertexAttribArray(positionAttribLocation);\n        gl.enableVertexAttribArray(colorAttribLocation);\n\n        //\n        // Main render loop\n        //\n        gl.useProgram(prog);\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 5);\n\n    }\n\n    init = () => {\n        try {\n            this.draw();\n        } catch (e) {\n            alert(\"Error: \" + e);\n        }\n    }\n\n    handleKeyDown = (key) => {\n\n        this.setState(\n            {\n                eventKey: key\n            })\n\n        if (key === '?') {\n            console.log('? pressed ! ')\n        }\n    }\n\n    changeXV1 = (value) => {\n        this.state.vertexContainer1.vertex.x = value;\n        this.draw();\n    }\n\n    changeYV1 = (value) => {\n        this.state.vertexContainer1.vertex.y = value;\n        this.draw();\n    }\n\n    changeXV2 = (value) => {\n        this.state.vertexContainer2.vertex.x = value;\n        this.draw();\n    }\n\n    changeYV2 = (value) => {\n        this.state.vertexContainer2.vertex.y = value;\n        this.draw();\n    }\n\n\n    changeXV3 = (value) => {\n        this.state.vertexContainer3.vertex.x = value;\n        this.draw();\n    }\n\n    changeYV3 = (value) => {\n        this.state.vertexContainer3.vertex.y = value;\n        this.draw();\n    }\n\n    changeXV4 = (value) => {\n        this.state.vertexContainer4.vertex.x = value;\n        this.draw();\n    }\n\n    changeYV4 = (value) => {\n        this.state.vertexContainer4.vertex.y = value;\n        this.draw();\n    }\n\n    changeXV5 = (value) => {\n        this.state.vertexContainer5.vertex.x = value;\n        this.draw();\n    }\n\n    changeYV5 = (value) => {\n        this.state.vertexContainer5.vertex.y = value;\n        this.draw();\n    }\n\n\n    changeColorV1 = (value) => {\n        this.state.vertexContainer1.colorManipulator = value;\n\n        this.state.vertexContainer1.vertex.r = 1 - this.state.vertexContainer1.colorManipulator;\n        this.state.vertexContainer1.vertex.g = 1 - this.state.vertexContainer1.colorManipulator;\n        this.state.vertexContainer1.vertex.b = 0 + this.state.vertexContainer1.colorManipulator;\n\n        this.draw();\n    }\n\n    changeColorV2 = (value) => {\n        this.state.vertexContainer2.colorManipulator = value;\n\n        this.state.vertexContainer2.vertex.r = 1 - this.state.vertexContainer2.colorManipulator;\n        this.state.vertexContainer2.vertex.g = 0 + this.state.vertexContainer2.colorManipulator;\n        this.state.vertexContainer2.vertex.b = 0 + this.state.vertexContainer2.colorManipulator;\n\n        this.draw();\n    }\n\n    changeColorV3 = (value) => {\n        this.state.vertexContainer3.colorManipulator = value;\n\n        this.state.vertexContainer3.vertex.r = 0 + this.state.vertexContainer3.colorManipulator;\n        this.state.vertexContainer3.vertex.g = 1 - this.state.vertexContainer3.colorManipulator;\n        this.state.vertexContainer3.vertex.b = 1 - this.state.vertexContainer3.colorManipulator;\n\n        this.draw();\n    }\n\n\n    changeColorV4 = (value) => {\n        this.state.vertexContainer4.colorManipulator = value;\n\n        this.state.vertexContainer4.vertex.r = 1 - this.state.vertexContainer4.colorManipulator;\n        this.state.vertexContainer4.vertex.g = 0 - this.state.vertexContainer4.colorManipulator;\n        this.state.vertexContainer4.vertex.b = 1 - this.state.vertexContainer4.colorManipulator;\n\n        this.draw();\n    }\n\n    changeColorV5 = (value) => {\n        this.state.vertexContainer5.colorManipulator = value;\n\n        this.state.vertexContainer5.vertex.r = 1 - this.state.vertexContainer5.colorManipulator;\n        this.state.vertexContainer5.vertex.g = 0 + this.state.vertexContainer5.colorManipulator;\n        this.state.vertexContainer5.vertex.b = 0 + this.state.vertexContainer5.colorManipulator;\n\n        this.draw();\n    }\n\n    propsAsString = obj => {\n        var depthLevelMap = new HashMap();\n        var depth = 1;\n\n        var unwrapObjects = (obj, depthLevelMap, depth) => {\n            return Object.keys(obj)\n                .map(function (k) {\n                    if (depthLevelMap.get(obj[k]) === undefined) {\n                        depthLevelMap.set(obj[k], 0);\n                    }\n\n                    var dethValue = depthLevelMap.get(obj[k]);\n\n                    if (\n                        typeof obj[k] === 'object' &&\n                        obj[k] !== null &&\n                        obj[k] !== undefined &&\n                        dethValue < depth\n                    ) {\n                        var currentDepthValue = depthLevelMap.get(obj[k]);\n                        currentDepthValue++;\n                        depthLevelMap.set(obj[k], currentDepthValue);\n\n                        return unwrapObjects(obj[k], depthLevelMap, depth);\n                    } else {\n                        return k + ' : ' + obj[k];\n                    }\n                })\n                .join(' \\n ');\n        };\n\n        return unwrapObjects(obj, depthLevelMap, depth);\n    };\n\n    render() {\n\n        const wrapperStyle = { width: 400, margin: 10 };\n\n\n\n        return (\n\n            <div>\n                <div>\n                    <h2>EA3</h2>\n                </div>\n\n                <div className='rowC'>\n\n                    <div className='canvasBox'>\n                        <canvas ref={ref => this['webGLCanvas'] = ref} width='512px' height='512px'></canvas>\n                    </div>\n\n                    <div className='sliderBox'>\n\n                        <div style={wrapperStyle}>\n\n                            Vertex1 X Value:\n                                <Slider min={this.state.xMin} max={this.state.xMax} defaultValue={this.state.vertexContainer1.vertex.x} step={0.01} handle={handle} onChange={this.changeXV1} />\n\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex1 Y Value:\n                                <Slider min={this.state.yMin} max={this.state.yMax} defaultValue={this.state.vertexContainer1.vertex.y} step={0.01} handle={handle} onChange={this.changeYV1} />\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex1 Color\n                <Slider min={-0.5} max={0.5} defaultValue={this.state.vertexContainer1.colorManipulator} step={0.001} handle={handle} onChange={this.changeColorV1} />\n                        </div>\n\n\n\n                        <div style={wrapperStyle}>\n                            Vertex2 X Value:\n                                <Slider min={this.state.xMin} max={this.state.xMax} defaultValue={this.state.vertexContainer2.vertex.x} step={0.01} handle={handle} onChange={this.changeXV2} />\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex2 Y Value:\n                                <Slider min={this.state.yMin} max={this.state.yMax} defaultValue={this.state.vertexContainer2.vertex.y} step={0.01} handle={handle} onChange={this.changeYV2} />\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex2 Color\n                <Slider min={-0.5} max={0.5} defaultValue={this.state.vertexContainer2.colorManipulator} step={0.001} handle={handle} onChange={this.changeColorV2} />\n                        </div>\n\n\n\n\n                        <div style={wrapperStyle}>\n                            Vertex3 X Value:\n                                <Slider min={this.state.xMin} max={this.state.xMax} defaultValue={this.state.vertexContainer3.vertex.x} step={0.01} handle={handle} onChange={this.changeXV3} />\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex3 Y Value:\n                                <Slider min={this.state.yMin} max={this.state.yMax} defaultValue={this.state.vertexContainer3.vertex.y} step={0.01} handle={handle} onChange={this.changeYV3} />\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex3 Color\n                <Slider min={-0.5} max={0.5} defaultValue={this.state.vertexContainer3.colorManipulator} step={0.001} handle={handle} onChange={this.changeColorV3} />\n                        </div>\n\n\n                        <div style={wrapperStyle}>\n                            Vertex4 X Value:\n                                <Slider min={this.state.xMin} max={this.state.xMax} defaultValue={this.state.vertexContainer4.vertex.x} step={0.01} handle={handle} onChange={this.changeXV4} />\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex4 Y Value:\n                                <Slider min={this.state.yMin} max={this.state.yMax} defaultValue={this.state.vertexContainer4.vertex.y} step={0.01} handle={handle} onChange={this.changeYV4} />\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex4 Color\n                <Slider min={-0.5} max={0.5} defaultValue={this.state.vertexContainer4.colorManipulator} step={0.001} handle={handle} onChange={this.changeColorV4} />\n                        </div>\n\n                        <div style={wrapperStyle}>\n                            Vertex5 X Value:\n                                <Slider min={this.state.xMin} max={this.state.xMax} defaultValue={this.state.vertexContainer5.vertex.x} step={0.01} handle={handle} onChange={this.changeXV5} />\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex5 Y Value:\n                                <Slider min={this.state.yMin} max={this.state.yMax} defaultValue={this.state.vertexContainer5.vertex.y} step={0.01} handle={handle} onChange={this.changeYV5} />\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex5 Color\n                <Slider min={-0.5} max={0.5} defaultValue={this.state.vertexContainer5.colorManipulator} step={0.001} handle={handle} onChange={this.changeColorV5} />\n                        </div>\n\n                    </div>\n\n                </div>\n\n                <div>{this.state.eventKey}</div>\n                <KeyboardEventHandler\n                    handleKeys={['?']}\n                    onKeyEvent={(key, e) => this.handleKeyDown(key)} />\n\n                <div style={{ position: 'relative', height: '30px' }}></div>\n            </div>\n\n\n        );\n    }\n}","import React, { Component } from 'react';\nimport Slider from 'rc-slider';\nimport Tooltip from 'rc-tooltip';\nimport Checkbox from 'react-simple-checkbox';\n\nvar i = 1;                     //  set your counter to 1\nconst Handle = Slider.Handle;\n\nconst handle = (props) => {\n    const { value, dragging, index, ...restProps } = props;\n    return (\n        <Tooltip\n            prefixCls=\"rc-slider-tooltip\"\n            overlay={value}\n            visible={dragging}\n            placement=\"top\"\n            key={index}\n        >\n            <Handle value={value} {...restProps} />\n        </Tooltip>\n    );\n};\nexport default class EA4_1 extends Component {\n\n    static propTypes = {}\n    static defaultProps = {}\n\n    constructor(props) {\n        super(props);\n        this.state = { // state keys go here\n            constant: 0.0,\n            checked: true\n        }\n    }\n\n    componentDidMount() {\n        this.init(true);\n    }\n\n    handleCheckboxChange = (value) => {\n        this.setState({ checked: value });\n\n        if(value)\n        {\n            this.init();\n        }\n        else \n        {\n            this.draw();\n        }\n    }\n\n    changeConstant = (value) => {\n        this.setState({ constant: value });\n        if(!this.state.checked)\n        {\n            this.draw();\n        }\n    }\n\n    draw = () => {\n\n        try {\n            var gl = this['webGLCanvas'].getContext('webgl');\n            if (!gl) { throw \"x\"; }\n        } catch (err) {\n            throw \"Your web browser does not support WebGL!\";\n        }\n\n        // Pipeline setup.\n        gl.clearColor(.0, .0, .0, 1);\n        // Backface culling.\n        gl.frontFace(gl.CCW);\n        gl.enable(gl.CULL_FACE);\n        gl.cullFace(gl.BACK);\n\n        // Compile vertex shader. \n        var vsSource = '' +\n            'attribute vec3 pos;' +\n            'attribute vec4 col;' +\n            'attribute float c;' +\n            'varying vec4 color;' +\n            'void main(){' + 'color = col;' +\n            'gl_Position = vec4(c * pos, 1);' +\n            '}';\n        var vs = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vs, vsSource);\n        gl.compileShader(vs);\n\n        // Compile fragment shader.\n        var fsSouce = 'precision mediump float;' +\n            'varying vec4 color;' +\n            'void main() {' +\n            'gl_FragColor = color;' +\n            '}';\n        var fs = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fs, fsSouce);\n        gl.compileShader(fs);\n\n        // Link shader together into a program.\n        var prog = gl.createProgram();\n        gl.attachShader(prog, vs);\n        gl.attachShader(prog, fs);\n        gl.bindAttribLocation(prog, 0, \"pos\");\n        gl.linkProgram(prog);\n        gl.useProgram(prog);\n\n        // Vertex data.\n        // Positions, Index data.\n        var vertices, indicesLines, indicesTris;\n        // Fill the data arrays.\n        createVertexData();\n\n        // Setup position vertex buffer object.\n        var vboPos = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, vboPos);\n        gl.bufferData(gl.ARRAY_BUFFER,\n            vertices, gl.STATIC_DRAW);\n        // Bind vertex buffer to attribute variable.\n        var posAttrib = gl.getAttribLocation(prog, 'pos');\n        gl.vertexAttribPointer(posAttrib, 3, gl.FLOAT,\n            false, 0, 0);\n        gl.enableVertexAttribArray(posAttrib);\n\n        // Setup constant color.\n        var colAttrib = gl.getAttribLocation(prog, 'col');\n\n        // Setup lines index buffer object.\n        var iboLines = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboLines);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,\n            indicesLines, gl.STATIC_DRAW);\n        iboLines.numberOfElements = indicesLines.length;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n        // Setup tris index buffer object.\n        var iboTris = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboTris);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,\n            indicesTris, gl.STATIC_DRAW);\n        iboTris.numberOfElements = indicesTris.length;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n        // Clear framebuffer and render primitives.\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        var c = gl.getAttribLocation(prog, 'c');\n        gl.vertexAttrib1f(c, this.state.constant);\n\n        // Setup rendering tris.\n        gl.vertexAttrib4f(colAttrib, \n            this.state.checked? Math.random(0.5) : 0.6, \n            this.state.checked? Math.random(0.5) : 0.6, \n            this.state.checked? Math.random(0.5) : 0.6, 0.8);\n\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboTris);\n        gl.drawElements(gl.TRIANGLES,\n            iboTris.numberOfElements, gl.UNSIGNED_SHORT, 0);\n\n        // Setup rendering lines.\n        gl.vertexAttrib4f(colAttrib, \n            \n        this.state.checked? Math.random(0.5) : 0.6, \n        this.state.checked? Math.random(0.5) : 0.6, \n        this.state.checked? Math.random(0.5) : 0.6, 0.7);\n\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboLines);\n        gl.drawElements(gl.LINES,\n            iboLines.numberOfElements, gl.UNSIGNED_SHORT, 0);\n\n        function createVertexData() {\n            var n = 100;\n            var m = 100;\n            // Positions.\n            vertices = new Float32Array(3 * (n + 1) * (m + 1));\n            // Index data.\n            indicesLines = new Uint16Array(2 * 2 * n * m);\n            indicesTris = new Uint16Array(3 * 2 * n * m);\n\n            var dt = 100 / n;\n            var dr = 100 / m;\n            // Counter for entries in index array.\n            var iLines = 0;\n            var iTris = 0;\n\n            // Loop angle t.\n            for (var i = 0, t = -1; i <= n; i++ , t += dt) {\n                // Loop radius r.\n                for (var j = 0, r = -1; j <= m; j++ , r += dr) {\n\n                    var iVertex = i * (m + 1) + j;\n\n                    var u = r;\n                    var v = t;\n\n                    //var x = u;\n                    //var y = v;\n                    //var z = Math.pow(r,3) - 3 * r * Math.pow(t,2);\n\n                    var x = u * Math.cos(Math.cos(u)) * Math.cos(v);\n                    var y = u * Math.cos(Math.cos(u)) * Math.sin(v);\n                    var z = u * Math.sin(Math.cos(u));\n\n                    // Set vertex positions.\n                    vertices[iVertex * 3] = x;\n                    vertices[iVertex * 3 + 1] = y;\n                    vertices[iVertex * 3 + 2] = z;\n\n                    // Set index.\n                    // Line on beam.\n                    if (j > 0 && i > 0) {\n                        indicesLines[iLines++] = iVertex - 1;\n                        indicesLines[iLines++] = iVertex;\n                    }\n                    // Line on ring.\n                    if (j > 0 && i > 0) {\n                        indicesLines[iLines++] = iVertex - (m + 1);\n                        indicesLines[iLines++] = iVertex;\n                    }\n\n                    // Set index.\n                    // Two Triangles.\n                    if (j > 0 && i > 0) {\n                        indicesTris[iTris++] = iVertex;\n                        indicesTris[iTris++] = iVertex - 1;\n                        indicesTris[iTris++] = iVertex - (m + 1);\n                        //        \n                        indicesTris[iTris++] = iVertex - 1;\n                        indicesTris[iTris++] = iVertex - (m + 1) - 1;\n                        indicesTris[iTris++] = iVertex - (m + 1);\n                    }\n                }\n            }\n        }\n    }\n\n\n\n    myLoop = () => {\n\n        setTimeout(() => {\n            this.draw();\n            this.changeConstant(this.state.constant + 0.0001);\n            i++;\n\n            if (this.state.checked) {\n                if (i < 100000) {\n                    this.myLoop();\n                }\n            } else {\n                i = 0;\n            }\n        }, 100)\n    }\n\n    init = () => {\n        try {\n            this.myLoop();\n        } catch (e) {\n            alert(\"Error: \" + e);\n        }\n    }\n    render() {\n\n        const wrapperStyle = { width: 400, margin: 10 };\n        return (\n\n            <div>\n                <div>\n                    <h2>EA4 1 - Wellenkugel</h2>\n                </div>\n\n                <div className='rowC'>\n\n                    <div className='canvasBox'>\n                        <canvas ref={ref => this['webGLCanvas'] = ref} width='512px' height='512px'></canvas>\n                    </div>\n                </div>\n\n                <div style={wrapperStyle}>\n                    Zoom :\n                                <Slider min={0.00000001} max={0.9} defaultValue={0.0} step={0.00001} handle={handle} onChange={this.changeConstant} />\n                </div>\n\n                <div style={wrapperStyle}>\n                    Animation on?\n                        <Checkbox\n                        id='Animation'\n                        color='#884A88'\n                        size='2'\n                        checked={this.state.checked}\n                        onChange={this.handleCheckboxChange}\n                    />\n                </div>\n\n                <div style={{ position: 'relative', height: '30px' }}></div>\n            </div>\n\n\n        );\n    }\n}","import React, { Component } from 'react';\nimport Slider from 'rc-slider';\nimport Tooltip from 'rc-tooltip';\nimport Checkbox from 'react-simple-checkbox';\n\nvar i = 1;                     //  set your counter to 1\n\nconst Handle = Slider.Handle;\n\nconst handle = (props) => {\n    const { value, dragging, index, ...restProps } = props;\n    return (\n        <Tooltip\n            prefixCls=\"rc-slider-tooltip\"\n            overlay={value}\n            visible={dragging}\n            placement=\"top\"\n            key={index}\n        >\n            <Handle value={value} {...restProps} />\n        </Tooltip>\n    );\n};\n\nexport default class EA4_2 extends Component {\n\n    static propTypes = {}\n    static defaultProps = {}\n\n    constructor(props) {\n        super(props);\n        this.state = { // state keys go here\n            constant: 1.0,\n            parameter: 0.0,\n            checked: true\n        }\n    }\n\n    componentDidMount() {\n        this.init();\n    }\n\n    handleCheckboxChange = (value) => {\n        this.setState({ checked: value });\n\n        if(value)\n        {\n            this.init();\n        }\n        else \n        {\n            this.draw();\n        }\n    }\n\n    changeConstant = (value) => {\n        this.setState({ constant: value });\n        if(!this.state.checked)\n        {\n            this.draw();\n        }\n    }\n\n    changeParameter =  (value) => \n    {\n        this.setState({parameter: value});\n\n        if(!this.state.checked)\n        {\n            this.draw();\n        }\n    }\n\n    draw = () => {\n\n        try {\n            var gl = this['webGLCanvas'].getContext('webgl');\n            if (!gl) { throw \"x\"; }\n        } catch (err) {\n            throw \"Your web browser does not support WebGL!\";\n        }\n \n           // Pipeline setup.\n           gl.clearColor(Math.random(0.2), Math.random(0.2), Math.random(0.2), 0.5);\n           // Backface culling.\n           gl.frontFace(gl.CCW);\n           gl.enable(gl.CULL_FACE);\n           gl.cullFace(gl.BACK);\n\n           // Compile vertex shader. \n           var vsSource = '' + \n               'attribute vec3 pos;' + \n               'attribute vec4 col;' +\n               'attribute float c;' + \n               'varying vec4 color;' + \n               'void main(){' + 'color = col;' + \n               'gl_Position = vec4(c * pos, 1);' +\n               '}';\n           var vs = gl.createShader(gl.VERTEX_SHADER);\n           gl.shaderSource(vs, vsSource);\n           gl.compileShader(vs);\n\n           // Compile fragment shader.\n           var fsSouce = 'precision mediump float;' + \n               'varying vec4 color;' + \n               'void main() {' + \n               'gl_FragColor = color;' + \n               '}';\n           var fs = gl.createShader(gl.FRAGMENT_SHADER);\n           gl.shaderSource(fs, fsSouce);\n           gl.compileShader(fs);\n\n           // Link shader together into a program.\n           var prog = gl.createProgram();\n           gl.attachShader(prog, vs);\n           gl.attachShader(prog, fs);\n           gl.bindAttribLocation(prog, 0, \"pos\");\n           gl.linkProgram(prog);\n           gl.useProgram(prog);\n\n           // Vertex data.\n           // Positions, Index data.\n           var vertices, indicesLines, indicesTris;\n           // Fill the data arrays.\n           var containerObject = this.createVertexData(vertices, indicesLines, indicesTris);\n\n           vertices = containerObject.vertices;\n           indicesLines = containerObject.indicesLines;\n           indicesTris = containerObject.indicesTris;\n\n           // Setup position vertex buffer object.\n           var vboPos = gl.createBuffer();\n           gl.bindBuffer(gl.ARRAY_BUFFER, vboPos);\n           gl.bufferData(gl.ARRAY_BUFFER,\n               vertices, gl.STATIC_DRAW);\n           // Bind vertex buffer to attribute variable.\n           var posAttrib = gl.getAttribLocation(prog, 'pos');\n           gl.vertexAttribPointer(posAttrib, 3, gl.FLOAT,\n               false, 0, 0);\n           gl.enableVertexAttribArray(posAttrib);\n\n           // Setup constant color.\n           var colAttrib = gl.getAttribLocation(prog, 'col');\n\n           // Setup lines index buffer object.\n           var iboLines = gl.createBuffer();\n           gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboLines);\n           gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,\n               indicesLines, gl.STATIC_DRAW);\n           iboLines.numberOfElements = indicesLines.length;\n           gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n           // Setup tris index buffer object.\n           var iboTris = gl.createBuffer();\n           gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboTris);\n           gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,\n               indicesTris, gl.STATIC_DRAW);\n           iboTris.numberOfElements = indicesTris.length;\n           gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n           // Clear framebuffer and render primitives.\n           gl.clear(gl.COLOR_BUFFER_BIT);\n\n           var c = gl.getAttribLocation(prog, 'c');\n\n           gl.vertexAttrib1f(c,this.state.constant);\n           // Setup rendering tris.\n           gl.vertexAttrib4f(colAttrib, Math.random(0.5), Math.random(0.5),Math.random(0.5),1);\n           gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboTris);\n           gl.drawElements(gl.TRIANGLES,\n               iboTris.numberOfElements, gl.UNSIGNED_SHORT, 0);\n\n           // Setup rendering lines.\n           gl.vertexAttrib4f(colAttrib, Math.random(0.5),Math.random(0.5),Math.random(0.5),1);\n           gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboLines);\n           gl.drawElements(gl.LINES,\n               iboLines.numberOfElements, gl.UNSIGNED_SHORT, 0);\n\n\n    }\n\n    createVertexData = (vertices, indicesLines, indicesTris) => {\n        var n = 100;\n        var m = 100;\n        // Positions.\n        vertices = new Float32Array(3 * (n+1) * (m+1));\n        // Index data.\n        indicesLines = new Uint16Array(2 * 2 * n * m);\n        indicesTris  = new Uint16Array(3 * 2 * n * m);\n\n        var dt = 10/n;\n        var dr = 10/m;\n        // Counter for entries in index array.\n        var iLines = 0;\n        var iTris = 0;\n\n        // Loop angle t.\n        for(var i=0, t=-Math.PI; i <= n; i++, t += dt) {\n            // Loop radius r.\n            for(var j=0, r=Math.PI; j <= m; j++, r += dr){\n\n                 var u = t;\n                 var v = r;\n\n                var iVertex = i*(m+1) + j;\n\n                var x = 2 * Math.sin(3* u)/(2 + Math.cos(v*this.state.parameter));\n                var y = 2 * (Math.sin(u) + 2* Math.sin(2 *u*this.state.parameter))/(2 + Math.cos(v*this.state.parameter + 2 *Math.PI/3));    \n                var z = (Math.cos(u) - 2 * Math.cos(2 * u)) * (2 + Math.cos(v)) * (2 + Math.cos(v + 2 * Math.PI))/4;\n\n                \n\n                // Set vertex positions.\n                vertices[iVertex * 3] = x;\n                vertices[iVertex * 3 + 1] = y;\n                vertices[iVertex * 3 + 2] = z;\n\n                // Set index.\n                // Line on beam.\n                if(j>0 && i>0){\n                    indicesLines[iLines++] = iVertex - 1;\n                    indicesLines[iLines++] = iVertex;\n                }\n                // Line on ring.\n                if(j>0 && i>0){\n                    indicesLines[iLines++] = iVertex - (m+1);                            \n                    indicesLines[iLines++] = iVertex;\n                }\n\n                // Set index.\n                // Two Triangles.\n                if(j>0 && i>0){\n                    indicesTris[iTris++] = iVertex;\n                    indicesTris[iTris++] = iVertex - 1;\n                    indicesTris[iTris++] = iVertex - (m+1);\n                    //        \n                    indicesTris[iTris++] = iVertex - 1;\n                    indicesTris[iTris++] = iVertex - (m+1) - 1;\n                    indicesTris[iTris++] = iVertex - (m+1);    \n                }\n            }\n        }\n\n        return {vertices:vertices , \n            indicesLines:indicesLines , \n            indicesTris:indicesTris }\n    } \n\n     myLoop = () => {\n\n        setTimeout(() => {\n            this.draw();\n            this.changeParameter(this.state.parameter + 0.001);\n            this.changeConstant(this.state.constant - 0.01);\n            i++;\n\n            if (this.state.checked) {\n                if (i < 100000) {\n                    this.myLoop();\n                }\n            } else {\n                i = 0;\n            }\n        }, 100)\n    }\n\n    init = () => {\n        try {\n            this.myLoop();            \n        } catch (e) {\n            alert(\"Error: \" + e);\n        }\n    }\n    render() {\n\n        const wrapperStyle = { width: 400, margin: 10 };\n        return (\n\n            <div>\n                <div>\n                    <h2>EA4 2 - Tranguloid Trefoil (with extra parameter)</h2>\n                </div>\n\n                <div className='rowC'>\n\n                    <div className='canvasBox'>\n                        <canvas ref={ref => this['webGLCanvas'] = ref} width='512px' height='512px'></canvas>\n                    </div>\n                </div>\n\n                <div style={wrapperStyle}>\n                            Zoom :\n                                <Slider min={0.001} max={2.0} defaultValue={1.0} step={0.001} handle={handle} onChange={this.changeConstant} />\n                        </div>\n\n                        <div style={wrapperStyle}>\n                            Parameter :\n                                <Slider min={0.000001} max={4.0} defaultValue={0.0} step={0.000001} handle={handle} onChange={this.changeParameter} />\n                        </div>\n\n                        <div style={wrapperStyle}>\n                    Animation on?\n                        <Checkbox\n                        id='Animation'\n                        color='#884A88'\n                        size='2'\n                        checked={this.state.checked}\n                        onChange={this.handleCheckboxChange}\n                    />\n                </div>\n\n                <div style={{ position: 'relative', height: '30px' }}></div>\n            </div>\n\n\n        );\n    }\n}","export function createVertexData() {\n\tvar n = 100;\n\tvar m = 100;\n\n\t// Positions.\n\tthis.vertices = new Float32Array(3 * (n + 1) * (m + 1));\n\tvar vertices = this.vertices;\n\t// Normals.\n\tthis.normals = new Float32Array(3 * (n + 1) * (m + 1));\n\tvar normals = this.normals;\n\t// Index data.\n\tthis.indicesLines = new Uint16Array(2 * 2 * n * m);\n\tvar indicesLines = this.indicesLines;\n\tthis.indicesTris = new Uint16Array(3 * 2 * n * m);\n\tvar indicesTris = this.indicesTris;\n\n\tvar du = 10 / n;\n\tvar dv = 10 / m;\n\n\t// Counter for entries in index array.\n\tvar iLines = 0;\n\tvar iTris = 0;\n\n\t// Loop angle u.\n\tfor(var i = 0, u = 0; i <= n; i++, u += du) {\n\t\t// Loop angle v.\n\t\tfor(var j = 0, v = 0; j <= m; j++, v += dv) {\n\n\t\t\tvar iVertex = i * (m + 1) + j;\n\n\t\t\tvar x = u * Math.cos(Math.cos(u)) * Math.cos(v);\n            var y = u * Math.cos(Math.cos(u)) * Math.sin(v);\n            var z = u * Math.sin(Math.cos(u));\n\n\t\t\t// Set vertex positions.\n\t\t\tvertices[iVertex * 3] = x;\n\t\t\tvertices[iVertex * 3 + 1] = y;\n\t\t\tvertices[iVertex * 3 + 2] = z;\n\n\t\t\t// Calc and set normals.\n\t\t\tvar nx = Math.cos(u) * Math.cos(v);\n\t\t\tvar ny = Math.cos(u) * Math.sin(v);\n\t\t\tvar nz = Math.sin(u);\n\t\t\tnormals[iVertex * 3] = nx;\n\t\t\tnormals[iVertex * 3 + 1] = ny;\n\t\t\tnormals[iVertex * 3 + 2] = nz;\n\n\t\t\t// if(i>14){\n\t\t\t// continue;\n\t\t\t// }\n\n\t\t\t// Set index.\n\t\t\t// Line on beam.\n\t\t\tif(j > 0 && i > 0) {\n\t\t\t\tindicesLines[iLines++] = iVertex - 1;\n\t\t\t\tindicesLines[iLines++] = iVertex;\n\t\t\t}\n\t\t\t// Line on ring.\n\t\t\tif(j > 0 && i > 0) {\n\t\t\t\tindicesLines[iLines++] = iVertex - (m + 1);\n\t\t\t\tindicesLines[iLines++] = iVertex;\n\t\t\t}\n\n\t\t\t// Set index.\n\t\t\t// Two Triangles.\n\t\t\tif(j > 0 && i > 0) {\n\t\t\t\tindicesTris[iTris++] = iVertex;\n\t\t\t\tindicesTris[iTris++] = iVertex - 1;\n\t\t\t\tindicesTris[iTris++] = iVertex - (m + 1);\n\t\t\t\t//\n\t\t\t\tindicesTris[iTris++] = iVertex - 1;\n\t\t\t\tindicesTris[iTris++] = iVertex - (m + 1) - 1;\n\t\t\t\tindicesTris[iTris++] = iVertex - (m + 1);\n\t\t\t}\n\t\t}\n\t}\n}","export function createVertexData() {\n\tvar n = 100;\n\tvar m = 100;\n\n\t// Positions.\n\tthis.vertices = new Float32Array(3 * (n + 1) * (m + 1));\n\tvar vertices = this.vertices;\n\t// Normals.\n\tthis.normals = new Float32Array(3 * (n + 1) * (m + 1));\n\tvar normals = this.normals;\n\t// Index data.\n\tthis.indicesLines = new Uint16Array(2 * 2 * n * m);\n\tvar indicesLines = this.indicesLines;\n\tthis.indicesTris = new Uint16Array(3 * 2 * n * m);\n\tvar indicesTris = this.indicesTris;\n\n\tvar du = 10 / n;\n\tvar dv = 10 / m;\n\n\t// Counter for entries in index array.\n\tvar iLines = 0;\n\tvar iTris = 0;\n\n\t// Loop angle u.\n\tfor(var i = 0, u = 0; i <= n; i++, u += du) {\n\t\t// Loop angle v.\n\t\tfor(var j = 0, v = 0; j <= m; j++, v += dv) {\n\n\t\t\tvar iVertex = i * (m + 1) + j;\n\n\t\t\tvar x = 2 * Math.sin(3* u)/(2 + Math.cos(v));\n\t\t\tvar y = 2 * (Math.sin(u) + 2* Math.sin(2 *u))/(2 + Math.cos(v + 2 *Math.PI/3));    \n\t\t\tvar z = (Math.cos(u) - 2 * Math.cos(2 * u)) * (2 + Math.cos(v)) * (2 + Math.cos(v + 2 * Math.PI))/4;\n\n\t\t\t// Set vertex positions.\n\t\t\tvertices[iVertex * 3] = x;\n\t\t\tvertices[iVertex * 3 + 1] = y;\n\t\t\tvertices[iVertex * 3 + 2] = z;\n\n\t\t\t// Calc and set normals.\n\t\t\tvar nx = Math.cos(u) * Math.cos(v);\n\t\t\tvar ny = Math.cos(u) * Math.sin(v);\n\t\t\tvar nz = Math.sin(u);\n\t\t\tnormals[iVertex * 3] = nx;\n\t\t\tnormals[iVertex * 3 + 1] = ny;\n\t\t\tnormals[iVertex * 3 + 2] = nz;\n\n\t\t\t// if(i>14){\n\t\t\t// continue;\n\t\t\t// }\n\n\t\t\t// Set index.\n\t\t\t// Line on beam.\n\t\t\tif(j > 0 && i > 0) {\n\t\t\t\tindicesLines[iLines++] = iVertex - 1;\n\t\t\t\tindicesLines[iLines++] = iVertex;\n\t\t\t}\n\t\t\t// Line on ring.\n\t\t\tif(j > 0 && i > 0) {\n\t\t\t\tindicesLines[iLines++] = iVertex - (m + 1);\n\t\t\t\tindicesLines[iLines++] = iVertex;\n\t\t\t}\n\n\t\t\t// Set index.\n\t\t\t// Two Triangles.\n\t\t\tif(j > 0 && i > 0) {\n\t\t\t\tindicesTris[iTris++] = iVertex;\n\t\t\t\tindicesTris[iTris++] = iVertex - 1;\n\t\t\t\tindicesTris[iTris++] = iVertex - (m + 1);\n\t\t\t\t//\n\t\t\t\tindicesTris[iTris++] = iVertex - 1;\n\t\t\t\tindicesTris[iTris++] = iVertex - (m + 1) - 1;\n\t\t\t\tindicesTris[iTris++] = iVertex - (m + 1);\n\t\t\t}\n\t\t}\n\t}\n}","import React, { Component } from 'react';\nimport './ea5.css';\nimport * as glmatrix from 'gl-matrix';\nimport * as importedGeometry1 from './sphere.js';\nimport * as importedGeometry2 from './custom.js';\nimport Slider from 'rc-slider';\nimport Tooltip from 'rc-tooltip';\nimport 'rc-slider/assets/index.css';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Range = createSliderWithTooltip(Slider.Range);\nconst Handle = Slider.Handle;\n\nvar deltaRotate = Math.PI / 36;\n\nconst handle = (props) => {\n    const { value, dragging, index, ...restProps } = props;\n    return (\n        <Tooltip\n            prefixCls=\"rc-slider-tooltip\"\n            overlay={value}\n            visible={dragging}\n            placement=\"top\"\n            key={index}\n        >\n            <Handle value={value} {...restProps} />\n        </Tooltip>\n    );\n};\n\nvar vertexShaderText =\n    [\n        'attribute vec3 aPosition;',\n        'attribute vec3 aNormal;',\n        'uniform mat4 uPMatrix;',\n        'uniform mat4 uMVMatrix;',\n        'varying vec4 vColor;',\n        'void main()',\n        '{',\n        'gl_Position = uPMatrix * uMVMatrix * vec4(aPosition, 1.0);',\n        'vColor = vec4(aNormal.x, aNormal.y, aNormal.z, 1.0);',\n        'vColor = (vColor + 1.0) / 2.0;',\n        '}'\n    ].join('\\n');\n\n\nvar fragmentShaderText =\n    [\n        'precision mediump float;',\n        'varying vec4 vColor;',\n        'void main()',\n        '{',\n        '  gl_FragColor = vColor;',\n        '}'\n    ].join('\\n');\n\nvar gl;\n\n// The shader program object is also used to\n// store attribute and uniform locations.\nvar prog;\n\n// Array of model objects.\nvar models = [];\n\nvar camera = {\n    // Initial position of the camera.\n    eye: [0, 1, 4],\n    // Point to look at.\n    center: [0, 0, 0],\n    // Roll and pitch of the camera.\n    up: [1, 0, 0],\n    // Opening angle given in radian.\n    // radian = degree*2*PI/360.\n    fovy: 60.0 * Math.PI / 180,\n    // Camera near plane dimensions:\n    // value for left right top bottom in projection.\n    lrtb: 4.0,\n    // View matrix.\n    vMatrix: glmatrix.mat4.create(),\n    // Projection matrix.\n    pMatrix: glmatrix.mat4.create(),\n    // Projection types: ortho, perspective, frustum.\n    projectionType: \"ortho\",\n    // Angle to Z-Axis for camera when orbiting the center\n    // given in radian.\n    zAngle: 0,\n    // Distance in XZ-Plane from center when orbiting.\n    distance: 8,\n};\n\nexport default class EA5 extends Component {\n\n    static propTypes = {}\n    static defaultProps = {}\n\n    constructor(props) {\n        super(props);\n        this.state = { // state keys go here\n            eventKey: \" \",\n            zoom: 2,\n            xMin: -3.0, xMax: 3.0, yMin: -3.0, yMax: 3.0,\n            rotationX: 0,\n            rotationY: 0,\n            rotationZ: 0,\n            cameraEyeX: 0,\n            cameraEyeY: 1,\n            cameraEyeZ: 4,\n            cameraCenterX: 0,\n            cameraCenterY: 0,\n            cameraCenterZ: 0,\n            cameraUpX: 0,\n            cameraUpY: 0,\n            cameraUpZ: 0\n        }\n    }\n\n    componentDidMount() {\n        this.init();\n    }\n\n        /*\n    *\n    *\n    * GUI Functions\n    * \n    * \n    * */\n\nhandleKeyDown = (key) => {\n\n    console.log(key + \"is down\");\n\n    if (key === 'w') {\n\n        console.log('w pressed ! ')\n\n        var value = this.state.rotationX + 0.01;\n        var value = this.state.cameraEyeX + 0.1;\n\n            this.setState\n            (\n                {\n                    rotationX: value,\n                    cameraEyeX: value\n                }\n            )\n    }\n    else \n    if (key === 's') {\n\n        console.log('s pressed ! ')\n        var value = this.state.rotationX - 0.01;\n        var value = this.state.cameraEyeX - 0.1;\n\n            this.setState\n            (\n                {\n                    rotationX: value,\n                    cameraEyeX: value\n                }\n            )\n    }\n    else\n    if (key === 'a') {\n\n        console.log('a pressed ! ')\n        var value = this.state.rotationY - 0.01;\n        var value = this.state.cameraEyeY - 0.1;\n\n            this.setState\n            (\n                {\n                    rotationY: value,\n                    cameraEyeY: value\n                }\n            )\n    }    \n    else\n    if (key === 'd') {\n\n\n        console.log('d pressed ! ')\n        var value = this.state.rotationY + 0.01;\n        var value = this.state.cameraEyeY + 0.1;\n\n            this.setState\n            (\n                {\n                    rotationY: value,\n                    cameraEyeY: value\n                }\n            )\n    }\n    else\n    if (key === 'q') {\n        console.log('q pressed ! ')\n        var value = this.state.rotationZ - 0.1;\n        var value = this.state.cameraEyeZ - 0.1;\n\n            this.setState\n            (\n                {\n                    rotationZ: value,\n                    cameraEyeZ: value\n                }\n            )\n    }\n    else\n    if (key === 'e') {\n        console.log('e pressed ! ')\n        var value = this.state.rotationZ + 0.1;\n        var value = this.state.cameraEyeZ + 0.1;\n\n            this.setState\n            (\n                {\n                    rotationZ: value,\n                    cameraEyeZ: value\n                }\n            )\n    }\n    else\n    if (key === 'o') {\n        console.log('i pressed ! ')\n\n        var value = this.state.zoom + 0.1;\n\n            this.setState\n            (\n                {\n                    zoom: value\n                }\n            )\n    }\n    else\n    if (key === 'i') {\n        console.log('o pressed ! ')\n\n        var value = this.state.zoom - 0.1;\n\n            this.setState\n            (\n                {\n                    zoom: value\n                }\n            )\n    }\n\n    this.renderWegGL();\n}\n\n\n    render() {\n\n        const wrapperStyle = { width: 400, margin: 10 };\n        return (\n\n            <div>\n                <div>\n                    <h2>EA5</h2>\n                </div>\n\n                <div className='rowCEA5'>\n                    <div className='canvasBoxEA5'>\n                        <canvas ref={ref => this['webGLCanvas'] = ref} width='512px' height='512px'></canvas>\n                    </div>\n\n                    <KeyboardEventHandler\n                    handleKeys={['w','a','s','d','q','e','i','o']}\n                    onKeyEvent={(key, e) => this.handleKeyDown(key)} />\n\n                    <div className='sliderBoxEA5'>\n                    <div style={wrapperStyle}>\n                            Move Camera with W,A,S,D on X and Y axis and with Q,E around Z. Zoom with I,O.\n                            The Look At Center is 0,0,0\n                        </div>\n                        <div style={wrapperStyle}>\n                            rotationX: { this.state.rotationX} , cameraEyeX: { this.state.cameraEyeX}\n                        </div>\n                        <div style={wrapperStyle}>\n                            rotationY: {this.state.rotationY} , cameraEyeY: { this.state.cameraEyeY}\n                        </div>\n                        <div style={wrapperStyle}>\n                            rotationZ: {this.state.rotationZ}, cameraEyeZ: { this.state.cameraEyeZ}\n                        </div>\n                        <div style={wrapperStyle}>\n                            camera Zoom: <p>{this.state.zoom}</p>\n                        </div>\n                    </div>\n                </div>\n                <div style={{ position: 'relative', height: '30px' }}></div>\n            </div>\n        );\n    }\n\n\n    /*\n    *\n    *\n    * WEB GL Section\n    * \n    * \n    * */\n\n    init = () => {\n\n\n        try {\n            this.initWebGL();\n        } catch (e) {\n            alert(\"Error: \" + e);\n        }\n\n        this.initShaderProgram();\n        this.initUniforms()\n        this.initModels();\n        this.initEventHandler();\n        this.initPipline();\n\n        this.renderWegGL();\n    }\n\n    initWebGL = () => {\n\n        try {\n            gl = this['webGLCanvas'].getContext('webgl');\n            if (!gl) { throw \"x\"; }\n        } catch (err) {\n            throw \"Your web browser does not support WebGL!\";\n        }\n\n        gl.viewportWidth = this['webGLCanvas'].width;\n        gl.viewportHeight = this['webGLCanvas'].height;\n    }\n\n    /**\n     * Init pipeline parameters that will not change again.\n     * If projection or viewport change, their setup must\n     * be in render .\n     */\n    initPipline = () => {\n        gl.clearColor(.95, .95, .95, 1);\n\n        // Backface culling.\n        gl.frontFace(gl.CCW);\n        gl.enable(gl.CULL_FACE);\n        gl.cullFace(gl.BACK);\n\n        // Depth(Z)-Buffer.\n        gl.enable(gl.DEPTH_TEST);\n\n        // Polygon offset of rastered Fragments.\n        gl.enable(gl.POLYGON_OFFSET_FILL);\n        gl.polygonOffset(0.5, 0);\n\n        // Set viewport.\n        gl.viewport(0, 0, gl.viewportWidth, gl.viewportHeight);\n\n        // Init camera.\n        // Set projection aspect ratio.\n        camera.aspect = gl.viewportWidth / gl.viewportHeight;\n    }\n\n    initShaderProgram = () => {\n        // Init vertex shader.\n        var vs = this.initShader(gl.VERTEX_SHADER, \"vertexshader\");\n        // Init fragment shader.\n        var fs = this.initShader(gl.FRAGMENT_SHADER, \"fragmentshader\");\n        // Link shader into a shader program.\n        prog = gl.createProgram();\n        gl.attachShader(prog, vs);\n        gl.attachShader(prog, fs);\n        gl.bindAttribLocation(prog, 0, \"aPosition\");\n        gl.linkProgram(prog);\n        gl.useProgram(prog);\n    }\n\n    /**\n     * Create and init shader from source.\n     * \n     * @parameter shaderType: openGL shader type.\n     * @parameter SourceTagId: Id of HTML Tag with shader source.\n     * @returns shader object.\n     */\n    initShader = (shaderType, SourceTagId) => {\n        var shader = gl.createShader(shaderType);\n        var shaderSource;\n\n        if (SourceTagId == 'vertexshader') {\n            shaderSource = vertexShaderText;\n        }\n        else {\n            shaderSource = fragmentShaderText;\n        }\n\n        gl.shaderSource(shader, shaderSource);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            console.log(SourceTagId + \": \" + gl.getShaderInfoLog(shader));\n            return null;\n        }\n        return shader;\n    }\n\n    initUniforms = () => {\n        // Projection Matrix.\n        prog.pMatrixUniform = gl.getUniformLocation(prog, \"uPMatrix\");\n\n        // Model-View-Matrix.\n        prog.mvMatrixUniform = gl.getUniformLocation(prog, \"uMVMatrix\");\n    }\n\n    initModels = () => {\n        // fill-style\n        var fs = \"fillwireframe\";\n        this.createModel(importedGeometry1, fs);\n        this.createModel(importedGeometry2, fs);\n    }\n\n    /**\n     * Create model object, fill it and push it in models array.\n     * \n     * @parameter geometryname: string with name of geometry.\n     * @parameter fillstyle: wireframe, fill, fillwireframe.\n     */\n    createModel = (geometryname, fillstyle) => {\n        var model = {};\n        model.fillstyle = fillstyle;\n        \n        this.initDataAndBuffers(model, geometryname);\n        // Create and initialize Model-View-Matrix.\n        model.mvMatrix = glmatrix.mat4.create();\n\n        models.push(model);\n    }\n\n    /**\n     * Init data and buffers for model object.\n     * \n     * @parameter model: a model object to augment with data.\n     * @parameter geometryname: string with name of geometry.\n     */\n    initDataAndBuffers = (model, geometryname) => {\n        // Provide model object with vertex data arrays.\n        // Fill data arrays for Vertex-Positions, Normals, Index data:\n        // vertices, normals, indicesLines, indicesTris;\n        // Pointer this refers to the window.\n        geometryname.createVertexData.apply(model);\n\n        // Setup position vertex buffer object.\n        model.vboPos = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, model.vboPos);\n        gl.bufferData(gl.ARRAY_BUFFER, model.vertices, gl.STATIC_DRAW);\n        // Bind vertex buffer to attribute variable.\n        prog.positionAttrib = gl.getAttribLocation(prog, 'aPosition');\n        gl.enableVertexAttribArray(prog.positionAttrib);\n\n        // Setup normal vertex buffer object.\n        model.vboNormal = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, model.vboNormal);\n        gl.bufferData(gl.ARRAY_BUFFER, model.normals, gl.STATIC_DRAW);\n        // Bind buffer to attribute variable.\n        prog.normalAttrib = gl.getAttribLocation(prog, 'aNormal');\n        gl.enableVertexAttribArray(prog.normalAttrib);\n\n        // Setup lines index buffer object.\n        model.iboLines = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, model.iboLines);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, model.indicesLines,\n            gl.STATIC_DRAW);\n        model.iboLines.numberOfElements = model.indicesLines.length;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n        // Setup triangle index buffer object.\n        model.iboTris = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, model.iboTris);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, model.indicesTris,\n            gl.STATIC_DRAW);\n        model.iboTris.numberOfElements = model.indicesTris.length;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    }\n\n    initEventHandler = () => {\n\n        window.onkeydown = (evt) => {\n            var key = evt.which ? evt.which : evt.keyCode;\n            var c = String.fromCharCode(key);\n            // console.log(evt);\n\n            // Change projection of scene.\n            switch (c) {\n                case ('O'):\n                    camera.projectionType = \"ortho\";\n                    camera.lrtb = 4;\n                    break;\n            }\n\n            // Render the scene again on any key pressed.\n            this.renderWegGL();\n        };\n    }\n\n    calculateCameraOrbit = () => {\n        // Calculate x,z position/eye of camera orbiting the center.\n        var x = 0;\n        var z = 2;\n        camera.eye[x] = camera.center[x];\n        camera.eye[z] = camera.center[z];\n        camera.eye[x] += camera.distance * Math.sin(camera.zAngle);\n        camera.eye[z] += camera.distance * Math.cos(camera.zAngle);\n    }\n\n    /**\n     * Run the rendering pipeline.\n     */\n    renderWegGL = () => {\n\n        \n        camera.eye = [this.state.cameraEyeX, this.state.cameraEyeY, this.state.cameraEyeZ];\n\n        camera.lrtb = this.state.zoom;\n\n        // Clear framebuffer and depth-/z-buffer.\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n        this.setProjection();\n\n        //glmatrix.mat4.identity(camera.vMatrix);\n        //glmatrix.mat4.rotate(camera.vMatrix, camera.vMatrix, Math.PI * this.state.rotationX,[1, 0, 0]);\n        //glmatrix.mat4.rotate(camera.vMatrix, camera.vMatrix, Math.PI * this.state.rotationY,[0, 1, 0]);\n        //glmatrix.mat4.rotate(camera.vMatrix, camera.vMatrix, Math.PI * this.state.rotationZ,[0, 0, 1]);\n\n        //this.calculateCameraOrbit();\n        glmatrix.mat4.lookAt(camera.vMatrix, camera.eye, camera.center, camera.up);\n\n        // Loop over models.\n        for (var i = 0; i < models.length; i++) {\n            // Update modelview for model.\n            glmatrix.mat4.copy(models[i].mvMatrix, camera.vMatrix);\n\n            // Set uniforms for model.\n            gl.uniformMatrix4fv(prog.mvMatrixUniform, false,\n                models[i].mvMatrix);\n\n            this.draw(models[i]);\n        }\n    }\n\n    setProjection = () => {\n        // Set projection Matrix.\n        switch (camera.projectionType) {\n            case (\"ortho\"):\n                var v = camera.lrtb;\n                glmatrix.mat4.ortho(camera.pMatrix, -v, v, -v, v, -10, 10);\n                break;\n        }\n        // Set projection uniform.\n        gl.uniformMatrix4fv(prog.pMatrixUniform, false, camera.pMatrix);\n    }\n\n    draw = (model) => {\n        // Setup position VBO.\n        gl.bindBuffer(gl.ARRAY_BUFFER, model.vboPos);\n        gl.vertexAttribPointer(prog.positionAttrib, 3, gl.FLOAT, false, 0, 0);\n\n        // Setup normal VBO.\n        gl.bindBuffer(gl.ARRAY_BUFFER, model.vboNormal);\n        gl.vertexAttribPointer(prog.normalAttrib, 3, gl.FLOAT, false, 0, 0);\n\n        // Setup rendering tris.\n        var fill = (model.fillstyle.search(/fill/) != -1);\n        if (fill) {\n            gl.enableVertexAttribArray(prog.normalAttrib);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, model.iboTris);\n            gl.drawElements(gl.TRIANGLES, model.iboTris.numberOfElements,\n                gl.UNSIGNED_SHORT, 0);\n        }\n\n        // Setup rendering lines.\n        var wireframe = (model.fillstyle.search(/wireframe/) != -1);\n        if (wireframe) {\n            gl.disableVertexAttribArray(prog.normalAttrib);\n            gl.vertexAttrib3f(prog.normalAttrib, 0, 0, 0);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, model.iboLines);\n            gl.drawElements(gl.LINES, model.iboLines.numberOfElements,\n                gl.UNSIGNED_SHORT, 0);\n        }\n    }\n}","import React from 'react';\nimport './App.css';\nimport EA1 from './EA1/index.js';\nimport EA2 from './EA2/index.js';\nimport EA3 from './EA3/index.js';\nimport EA4_1 from './EA4_1/index.js';\nimport EA4_2 from './EA4_2/index.js';\nimport EA5 from './EA5/index.js';\n\nfunction App() {\n  return (\n\n    <div>\n\n<EA5></EA5>\n\n<div className='ea4_row'>\n  <div className='ea4_1_box'>\n  <EA4_1></EA4_1>\n  </div>\n  <div className='ea4_2_box'>\n  <EA4_2></EA4_2>\n  </div>\n</div>\n      <EA3></EA3>\n      <EA2></EA2>\n      <EA1></EA1> \n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["EA1/index.js","EA2/index.js","App.js","serviceWorker.js","index.js"],"names":["EA1","props","handleKeyDown","key","refName","console","log","tempKey","state","eventKey","setState","yOffset","string","style","background","toString","ref","position","width","height","src","alt","this","handleKeys","onKeyEvent","e","href","Component","defaultProps","EA2","shaderProgram","gl","vs","fs","prog","createProgram","addshader","type","source","s","createShader","VERTEX_SHADER","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","attributeSetFloats","attr_name","rsize","arr","bindBuffer","ARRAY_BUFFER","createBuffer","bufferData","Float32Array","STATIC_DRAW","attr","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","draw","getContext","err","clearColor","clear","COLOR_BUFFER_BIT","useProgram","drawArrays","LINE_STRIP","init","alert","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+VAKqBA,G,kBAIjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAOVC,cAAgB,SAACC,EAAIC,GAEjBC,QAAQC,IAAIH,EAAM,WAElB,IAAII,EAAUJ,EAAM,IAAM,EAAKK,MAAMC,SAErC,EAAKC,SACD,CACID,SAAUF,IAGN,MAARJ,GACAE,QAAQC,IAAI,gBAER,EAAKE,MAAMG,SAAW,KACtB,EAAKD,SACD,CACIC,QAAS,EAAKH,MAAMG,QAAU,OAI3B,MAARR,IACPE,QAAQC,IAAI,gBAGZ,EAAKI,SACD,CACIC,QAAS,EAAKH,MAAMG,QAAU,OAI1C,IAAIC,EAAM,qEAAiE,EAAKJ,MAAMG,QAA5E,MACV,EAAKP,GAASS,MAAMC,WAAaF,EAAOG,YAtCxC,EAAKP,MAAQ,CACTG,QAAS,EACTF,SAAU,KAJC,E,sEA8CT,IAAD,OAIL,OACI,6BACI,6BAAK,oCAEL,yBACAO,IAAK,SAAAA,GAAG,OAAI,EAAI,aAAYA,GAC5BH,MAAQ,CAACI,SAAU,WACnBC,MAAO,QACPC,OAAQ,QACRL,WAAY,8DACZM,IAAK,8CAA+CC,IAAI,SAASH,MAAM,IAAIC,OAAO,MAElF,oDAA0BG,KAAKd,MAAMC,UAErC,kBAAC,IAAD,CACIc,WAAY,CAAC,IAAK,KAClBC,WAAY,SAACrB,EAAKsB,GAAN,OAAY,EAAKvB,cAAcC,EAlBzC,mBAoBF,yBAAKU,MAAQ,CAACI,SAAU,WAAYE,OAAQ,UAC5C,uBAAGO,KAAK,4EAAR,+B,GAzEaC,cAAZ3B,EAEV4B,aAAe,G,UCFLC,E,YAKjB,WAAY5B,GAAQ,IAAD,8BACf,4CAAMA,KAYV6B,cAAgB,SAACC,EAAIC,EAAIC,GAErB,IAAIC,EAAOH,EAAGI,gBACVC,EAAY,SAASC,EAAMC,GAC3B,IAAIC,EAAIR,EAAGS,aAAsB,UAARH,EACrBN,EAAGU,cAAgBV,EAAGW,iBAG1B,GAFAX,EAAGY,aAAaJ,EAAGD,GACnBP,EAAGa,cAAcL,IACZR,EAAGc,mBAAmBN,EAAGR,EAAGe,gBAC7B,KAAM,qBAAqBT,EACvB,eAAeN,EAAGgB,iBAAiBR,GAE3CR,EAAGiB,aAAad,EAAMK,IAK1B,GAHAH,EAAU,SAAUJ,GACpBI,EAAU,WAAYH,GACtBF,EAAGkB,YAAYf,IACVH,EAAGmB,oBAAoBhB,EAAMH,EAAGoB,aACjC,KAAM,qCAEV,OAAOjB,GAjCQ,EAoCnBkB,mBAAqB,SAACrB,EAAIG,EAAMmB,EAAWC,EAAOC,GAC9CxB,EAAGyB,WAAWzB,EAAG0B,aAAc1B,EAAG2B,gBAClC3B,EAAG4B,WAAW5B,EAAG0B,aAAc,IAAIG,aAAaL,GAC5CxB,EAAG8B,aACP,IAAIC,EAAO/B,EAAGgC,kBAAkB7B,EAAMmB,GACtCtB,EAAGiC,wBAAwBF,GAC3B/B,EAAGkC,oBAAoBH,EAAMR,EAAOvB,EAAGmC,OAAO,EAAO,EAAG,IA1CzC,EA6CnBC,KAAO,WACH,IACI,IAAIpC,EAAK,cAAoBqC,WAAW,SACxC,IAAKrC,EAAM,KAAM,IACnB,MAAOsC,GACL,KAAM,2CAEVtC,EAAGuC,WAAW,GAAK,GAAK,GAAK,GAC7BvC,EAAGwC,MAAMxC,EAAGyC,kBAEZ,IAAItC,EAAO,EAAKJ,cAAcC,EAC1B,mEAIA,4DAIJA,EAAG0C,WAAWvC,GAEd,EAAKkB,mBAAmBrB,EAAIG,EAAM,MAAO,EAAG,CACxC,IAAM,IACL,GAAK,GACN,GAAI,IACH,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,GAAI,GACL,GAAI,GACJ,IAAK,GACL,IAAK,GACL,EAAE,EACF,GAAG,IACF,IAAK,IACL,GAAI,GACL,GAAI,GACJ,IAAK,IACJ,IAAK,IACL,IAAK,GACN,GAAM,GACL,EAAG,EACJ,EAAE,GACD,GAAG,GACH,GAAG,GACH,KAAK,KACL,KAAK,KACL,KAAK,KACL,IAAI,IACL,IAAI,IACJ,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,EAAE,GACD,KAAK,KACL,IAAI,IACL,IAAI,IACJ,KAAK,KACJ,KAAK,KACL,KAAK,MAGVH,EAAG2C,WAAW3C,EAAG4C,WAAY,EAAG,KA9GjB,EAkHnBC,KAAO,WACH,IACI,EAAKT,OACP,MAAO1C,GACLoD,MAAM,UAAUpD,KAtHL,EA0HnBvB,cAAgB,SAACC,GAEb,EAAKO,SACD,CACID,SAAUN,IAGN,MAARA,GACAE,QAAQC,IAAI,iBAhIhB,EAAKE,MAAQ,CACTC,SAAU,KAHC,E,iFASXa,KAAKsD,S,+BA6HH,IAAD,OAEL,OACI,6BACI,6BAAK,oCAEL,4BAAQ5D,IAAK,SAAAA,GAAG,OAAI,EAAI,YAAkBA,GAAKE,MAAO,QAAQC,OAAQ,UAEtE,6BAAMG,KAAKd,MAAMC,UACjB,kBAAC,IAAD,CACIc,WAAY,CAAC,KACbC,WAAY,SAACrB,EAAKsB,GAAN,OAAY,EAAKvB,cAAcC,MAE3C,yBAAKU,MAAQ,CAACI,SAAU,WAAYE,OAAQ,e,GAxJ/BQ,aAAZE,EAGVD,aAAe,GCOXkD,MAVf,WACE,OAEE,6BACG,kBAAC,EAAD,MACA,kBAAC,EAAD,QCEaC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.5e06c7a5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\nimport './ea1.css';\n\nexport default class EA1 extends Component {\n    static propTypes = {}\n    static defaultProps = {}\n\n    constructor(props) {\n        super(props);\n        this.state = { // state keys go here\n            yOffset: 0,\n            eventKey: \" \"\n        }\n    }\n\n    handleKeyDown = (key,refName) => {\n\n        console.log(key + \"is down\");\n\n        var tempKey = key + \" \" + this.state.eventKey;\n\n        this.setState(\n            {\n                eventKey: tempKey\n            })\n\n        if (key === 'l') {\n            console.log('L pressed ! ')\n\n            if (this.state.yOffset >= 512) {\n                this.setState(\n                    {\n                        yOffset: this.state.yOffset - 512\n                    })\n            }\n\n        } else if (key === 'r') {\n            console.log('R pressed ! ')\n\n\n            this.setState(\n                {\n                    yOffset: this.state.yOffset + 512\n                })\n        }\n\n        var string = `url(\"https://i.ibb.co/b7HgSFy/Graph-Viz-Tech-EA1.png\") 0px ${this.state.yOffset}px`;\n        this[refName].style.background = string.toString();\n    }\n\n     //background: 'url(\"images/GraphVizTechEA1.png\") 0 0'},} \n     //src={process.env.PUBLIC_URL + '/images/placeholder1x1.png'} alt=\"circle\" width=\"1\" height=\"1\"></img>\n\n    render() {\n        //TODO change clippingrect css by jscript code on key input left right\n        let refName = 'clippingrect';\n\n        return (\n            <div>\n                <div><h2>EA1</h2></div>\n\n                <img \n                ref={ref => this[refName] = ref}\n                style= {{position: 'relative',\n                width: '512px',\n                height: '512px',\n                background: 'url(\"https://i.ibb.co/b7HgSFy/Graph-Viz-Tech-EA1.png\") 0 0'}}\n                src={'https://i.ibb.co/Yc3S8ZW/placeholder1x1.png'} alt=\"circle\" width=\"1\" height=\"1\"></img>\n                \n                <div>Input Key detected: {this.state.eventKey}</div>\n\n                <KeyboardEventHandler\n                    handleKeys={['l', 'r']}\n                    onKeyEvent={(key, e) => this.handleKeyDown(key,refName)} />\n\n                    <div style= {{position: 'relative', height: '30px'}}></div>\n                    <a href='https://www.searchpng.com/2019/01/07/blue-circle-glow-png-free-download/'>Circle Image Reference</a>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\nimport './ea2.css';\n\nexport default class EA2 extends Component {\n    \n    static propTypes = {}\n    static defaultProps = {}\n\n    constructor(props) {\n        super(props);\n        this.state = { // state keys go here\n            eventKey: \" \"\n        }\n    }\n\n    \n    componentDidMount() {\n            this.init();\n    }\n\n\n    shaderProgram = (gl, vs, fs) => {\n\n        var prog = gl.createProgram();\n        var addshader = function(type, source) {\n            var s = gl.createShader((type == 'vertex') ?\n                gl.VERTEX_SHADER : gl.FRAGMENT_SHADER);\n            gl.shaderSource(s, source);\n            gl.compileShader(s);\n            if (!gl.getShaderParameter(s, gl.COMPILE_STATUS)) {\n                throw \"Could not compile \"+type+\n                    \" shader:\\n\\n\"+gl.getShaderInfoLog(s);\n            }\n            gl.attachShader(prog, s);\n        };\n        addshader('vertex', vs);\n        addshader('fragment', fs);\n        gl.linkProgram(prog);\n        if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n            throw \"Could not link the shader program!\";\n        }\n        return prog;\n    }\n    \n    attributeSetFloats = (gl, prog, attr_name, rsize, arr) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(arr),\n            gl.STATIC_DRAW);\n        var attr = gl.getAttribLocation(prog, attr_name);\n        gl.enableVertexAttribArray(attr);\n        gl.vertexAttribPointer(attr, rsize, gl.FLOAT, false, 0, 0);\n    }\n    \n    draw = () => {\n        try {\n            var gl = this['webGLCanvas'].getContext('webgl');\n            if (!gl) { throw \"x\"; }\n        } catch (err) {\n            throw \"Your web browser does not support WebGL!\";\n        }\n        gl.clearColor(0.8, 0.8, 0.8, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    \n        var prog = this.shaderProgram(gl,\n            \"attribute vec3 pos;\"+\n            \"void main() {\"+\n            \"\tgl_Position = vec4(pos, 2.0);\"+\n            \"}\",\n            \"void main() {\"+\n            \"\tgl_FragColor = vec4(0.5, 0.5, 1.0, 1.0);\"+\n            \"}\"\n        );\n        gl.useProgram(prog);\n    \n        this.attributeSetFloats(gl, prog, \"pos\", 2, [\n            0.1, -0.1,\n            -0.1, 0.1,\n            0.1,0.1,\n            -0.1,-0.1,\n            -0.1,-0.1,\n            -0.2,-0.2,\n            -0.2,-0.1,\n            -0.2,-0.2,\n            -0.2,0.2,\n            0.2,0.2,\n            0.2,-0.2,\n            0.1,-0.1,\n            0,0,\n            0,-0.5,\n            -0.5,-0.5,\n            -0.5,0.5,\n            0.5,0.5,\n            0.5,-0.5,\n            -0.5,-0.5,\n            -0.5,-0.5,\n            1.0, -1.0,\n            -1, 1,\n            1,1,\n            -1,-1,\n            -1,-1,\n            -1.2,-1.2,\n            -1.2,-1.1,\n            -1.2,-1.2,\n            -1.2,1.2,\n            1.2,1.2,\n            1.2,-1.2,\n            1.2,-1.2,\n            1.1,-1.1,\n            1.1,-1.1,\n            0,0,\n            -1.5,-1.5,\n            -1.5,1.5,\n            1.5,1.5,\n            1.5,-1.5,\n            -1.5,-1.5,\n            -1.5,-1.5\n        ]);\n        \n        gl.drawArrays(gl.LINE_STRIP, 0, 41);\n\n    }\n    \n    init = () => {\n        try {\n            this.draw();\n        } catch (e) {\n            alert(\"Error: \"+e);\n        }\n    }\n\n    handleKeyDown = (key) => {\n\n        this.setState(\n            {\n                eventKey: key\n            })\n\n        if (key === '?') {\n            console.log('? pressed ! ')\n        } \n    }\n\n    render() {\n\n        return (\n            <div>\n                <div><h2>EA2</h2></div>\n\n                <canvas ref={ref => this['webGLCanvas'] = ref} width ='512px' height ='512px'></canvas>\n\n                <div>{this.state.eventKey}</div>\n                <KeyboardEventHandler\n                    handleKeys={['?']}\n                    onKeyEvent={(key, e) => this.handleKeyDown(key)} />\n\n                    <div style= {{position: 'relative', height: '30px'}}></div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './App.css';\nimport EA1 from './EA1/index.js';\nimport EA2 from './EA2/index.js';\n\nfunction App() {\n  return (\n\n    <div>\n       <EA1></EA1>\n       <EA2></EA2>\n    </div>\n  );\n}\n\nexport default App;\n\n\n/*\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n    </div>\n    */","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
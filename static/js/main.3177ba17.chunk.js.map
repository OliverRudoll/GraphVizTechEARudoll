{"version":3,"sources":["Buttons.js","EA1/index.js","EA2/index.js","EA3/index.js","EA4_1/index.js","EA4_2/index.js","EA5/sphere.js","EA5/custom.js","EA5/index.js","EA6/GVT_Src_vertexData_plane.js","EA6/GVT_Src_vertexData_sphere.js","EA6/GVT_Src_vertexData_torus.js","EA6/index.js","Menu.js","App.js","serviceWorker.js","index.js"],"names":["props","value","onClick","clickBtn","EA1","handleKeyDown","key","refName","console","log","tempKey","state","eventKey","setState","yOffset","string","style","background","toString","ref","position","width","height","src","alt","this","handleKeys","onKeyEvent","e","href","Component","defaultProps","EA2","shaderProgram","gl","vs","fs","prog","createProgram","addshader","type","source","s","createShader","VERTEX_SHADER","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","attributeSetFloats","attr_name","rsize","arr","bindBuffer","ARRAY_BUFFER","createBuffer","bufferData","Float32Array","STATIC_DRAW","attr","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","draw","getContext","err","clearColor","clear","COLOR_BUFFER_BIT","useProgram","drawArrays","LINE_STRIP","init","alert","vertexShaderText","join","fragmentShaderText","Handle","createSliderWithTooltip","Slider","Range","handle","dragging","index","restProps","prefixCls","overlay","visible","placement","EA3","triangleVertices","vertexContainer1","vertex","x","y","r","g","b","vertexContainer2","vertexContainer3","vertexContainer4","vertexContainer5","triangleVertexBufferObject","positionAttribLocation","colorAttribLocation","FALSE","BYTES_PER_ELEMENT","TRIANGLE_STRIP","changeXV1","changeYV1","changeXV2","changeYV2","changeXV3","changeYV3","changeXV4","changeYV4","changeXV5","changeYV5","changeColorV1","colorManipulator","changeColorV2","changeColorV3","changeColorV4","changeColorV5","propsAsString","obj","unwrapObjects","depthLevelMap","depth","Object","keys","map","k","undefined","get","set","dethValue","currentDepthValue","HashMap","xMin","xMax","yMin","yMax","wrapperStyle","margin","className","min","max","defaultValue","step","onChange","i","EA4_1","handleCheckboxChange","checked","changeConstant","constant","frontFace","CCW","enable","CULL_FACE","cullFace","BACK","vertices","indicesLines","indicesTris","bindAttribLocation","n","m","Uint16Array","iLines","iTris","t","j","iVertex","u","v","Math","cos","sin","z","createVertexData","vboPos","posAttrib","colAttrib","iboLines","ELEMENT_ARRAY_BUFFER","numberOfElements","length","iboTris","c","vertexAttrib1f","vertexAttrib4f","random","drawElements","TRIANGLES","UNSIGNED_SHORT","LINES","myLoop","setTimeout","id","color","size","EA4_2","changeParameter","parameter","containerObject","PI","normals","nx","ny","nz","models","camera","eye","center","up","fovy","lrtb","vMatrix","glmatrix","create","pMatrix","projectionType","zAngle","distance","EA5","rotationX","cameraEyeX","rotationY","cameraEyeY","rotationZ","cameraEyeZ","zoom","renderWegGL","initWebGL","initShaderProgram","initUniforms","initModels","initEventHandler","initPipline","viewportWidth","viewportHeight","DEPTH_TEST","POLYGON_OFFSET_FILL","polygonOffset","viewport","aspect","initShader","shaderType","SourceTagId","shader","pMatrixUniform","getUniformLocation","mvMatrixUniform","createModel","importedGeometry1","importedGeometry2","geometryname","fillstyle","model","initDataAndBuffers","mvMatrix","push","apply","positionAttrib","vboNormal","normalAttrib","window","onkeydown","evt","which","keyCode","String","fromCharCode","calculateCameraOrbit","DEPTH_BUFFER_BIT","setProjection","lookAt","copy","uniformMatrix4fv","ortho","search","disableVertexAttribArray","vertexAttrib3f","cameraCenterX","cameraCenterY","cameraCenterZ","cameraUpX","cameraUpY","cameraUpZ","du","dv","vertexLength","sqrt","EA6","animateModels","changedAngle","angle","deltaTime","isLoop","commandNote","interactiveTorus","rotate","xOffset","radius","interactiveSphere1","translate","interactiveSphere2","interactiveSphere3","interactiveSphere4","torus","plane","sphere","geometry","scale","name","initTransformations","mMatrix","updateTransformations","identity","rotateX","rotateY","rotateZ","multiply","Menu","renderView","target","Buttons","App","location","reload","_refreshPage","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3177ba17.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default props => (\n  <>\n    <p>Einsendeaufgaben{\" \"}</p>\n    <p> \n       <button value={7} onClick={props.clickBtn}>\n      EA 6\n    </button>{\" \"}\n    </p>\n    <p> \n    <button value={6} onClick={props.clickBtn}>\n      EA 5\n    </button>{\" \"}\n    </p>\n    <p> \n    <button value={5} onClick={props.clickBtn}>\n      EA 4-2\n    </button>{\" \"}\n    </p>\n    <p> \n    <button value={4} onClick={props.clickBtn}>\n      EA 4-1\n    </button>{\" \"}\n    </p>\n    <p> \n    <button value={3} onClick={props.clickBtn}>\n      EA 3\n    </button>{\" \"}\n    </p>\n    <p> \n    <button value={2} onClick={props.clickBtn}>\n      EA 2\n    </button>{\" \"}\n    </p>\n    <p> \n    <button value={1} onClick={props.clickBtn}>\n      EA 1\n    </button>{\" \"}\n    </p>\n  </>\n);","import React, { Component } from 'react';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport Menu from '../Menu.js';\nimport './ea1.css';\n\nexport default class EA1 extends Component {\n    static propTypes = {}\n    static defaultProps = {}\n\n    constructor(props) {\n        super(props);\n        this.state = { // state keys go here\n            yOffset: 0,\n            eventKey: \" \"\n        }\n    }\n\n    handleKeyDown = (key,refName) => {\n\n        console.log(key + \"is down\");\n\n        var tempKey = key + \" \" + this.state.eventKey;\n\n        this.setState(\n            {\n                eventKey: tempKey\n            })\n\n        if (key === 'l') {\n            console.log('L pressed ! ')\n\n            if (this.state.yOffset >= 512) {\n                this.setState(\n                    {\n                        yOffset: this.state.yOffset - 512\n                    })\n            }\n\n        } else if (key === 'r') {\n            console.log('R pressed ! ')\n\n\n            this.setState(\n                {\n                    yOffset: this.state.yOffset + 512\n                })\n        }\n\n        var string = `url(\"https://i.ibb.co/b7HgSFy/Graph-Viz-Tech-EA1.png\") 0px ${this.state.yOffset}px`;\n        this[refName].style.background = string.toString();\n    }\n\n     //background: 'url(\"images/GraphVizTechEA1.png\") 0 0'},} \n     //src={process.env.PUBLIC_URL + '/images/placeholder1x1.png'} alt=\"circle\" width=\"1\" height=\"1\"></img>\n\n    render() {\n\n        //TODO change clippingrect css by jscript code on key input left right\n        let refName = 'clippingrect';\n\n        return (\n            <div>\n                <div><h2>EA1</h2></div>\n\n                <img \n                ref={ref => this[refName] = ref}\n                style= {{position: 'relative',\n                width: '512px',\n                height: '512px',\n                background: 'url(\"https://i.ibb.co/b7HgSFy/Graph-Viz-Tech-EA1.png\") 0 0'}}\n                src={'https://i.ibb.co/Yc3S8ZW/placeholder1x1.png'} alt=\"circle\" width=\"1\" height=\"1\"></img>\n                \n                <div>Input Key detected: {this.state.eventKey}</div>\n\n                <KeyboardEventHandler\n                    handleKeys={['l', 'r']}\n                    onKeyEvent={(key, e) => this.handleKeyDown(key,refName)} />\n\n                    <div style= {{position: 'relative', height: '30px'}}></div>\n                    <a href='https://www.searchpng.com/2019/01/07/blue-circle-glow-png-free-download/'>Circle Image Reference</a>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\nimport './ea2.css';\n\nexport default class EA2 extends Component {\n    \n    static propTypes = {}\n    static defaultProps = {}\n\n    constructor(props) {\n        super(props);\n        this.state = { // state keys go here\n            eventKey: \" \"\n        }\n    }\n\n    \n    componentDidMount() {\n            this.init();\n    }\n\n\n    shaderProgram = (gl, vs, fs) => {\n\n        var prog = gl.createProgram();\n        var addshader = function(type, source) {\n            var s = gl.createShader((type == 'vertex') ?\n                gl.VERTEX_SHADER : gl.FRAGMENT_SHADER);\n            gl.shaderSource(s, source);\n            gl.compileShader(s);\n            if (!gl.getShaderParameter(s, gl.COMPILE_STATUS)) {\n                throw \"Could not compile \"+type+\n                    \" shader:\\n\\n\"+gl.getShaderInfoLog(s);\n            }\n            gl.attachShader(prog, s);\n        };\n        addshader('vertex', vs);\n        addshader('fragment', fs);\n        gl.linkProgram(prog);\n        if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n            throw \"Could not link the shader program!\";\n        }\n        return prog;\n    }\n    \n    attributeSetFloats = (gl, prog, attr_name, rsize, arr) => {\n        gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(arr),\n            gl.STATIC_DRAW);\n        var attr = gl.getAttribLocation(prog, attr_name);\n        gl.enableVertexAttribArray(attr);\n        gl.vertexAttribPointer(attr, rsize, gl.FLOAT, false, 0, 0);\n    }\n    \n    draw = () => {\n        try {\n            var gl = this['webGLCanvas'].getContext('webgl');\n            if (!gl) { throw \"x\"; }\n        } catch (err) {\n            throw \"Your web browser does not support WebGL!\";\n        }\n        gl.clearColor(0.8, 0.8, 0.8, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    \n        var prog = this.shaderProgram(gl,\n            \"attribute vec3 pos;\"+\n            \"void main() {\"+\n            \"\tgl_Position = vec4(pos, 2.0);\"+\n            \"}\",\n            \"void main() {\"+\n            \"\tgl_FragColor = vec4(0.5, 0.5, 1.0, 1.0);\"+\n            \"}\"\n        );\n        gl.useProgram(prog);\n    \n        this.attributeSetFloats(gl, prog, \"pos\", 2, [\n            0.1, -0.1,\n            -0.1, 0.1,\n            0.1,0.1,\n            -0.1,-0.1,\n            -0.1,-0.1,\n            -0.2,-0.2,\n            -0.2,-0.1,\n            -0.2,-0.2,\n            -0.2,0.2,\n            0.2,0.2,\n            0.2,-0.2,\n            0.1,-0.1,\n            0,0,\n            0,-0.5,\n            -0.5,-0.5,\n            -0.5,0.5,\n            0.5,0.5,\n            0.5,-0.5,\n            -0.5,-0.5,\n            -0.5,-0.5,\n            1.0, -1.0,\n            -1, 1,\n            1,1,\n            -1,-1,\n            -1,-1,\n            -1.2,-1.2,\n            -1.2,-1.1,\n            -1.2,-1.2,\n            -1.2,1.2,\n            1.2,1.2,\n            1.2,-1.2,\n            1.2,-1.2,\n            1.1,-1.1,\n            1.1,-1.1,\n            0,0,\n            -1.5,-1.5,\n            -1.5,1.5,\n            1.5,1.5,\n            1.5,-1.5,\n            -1.5,-1.5,\n            -1.5,-1.5\n        ]);\n        \n        gl.drawArrays(gl.LINE_STRIP, 0, 41);\n\n    }\n    \n    init = () => {\n        try {\n            this.draw();\n        } catch (e) {\n            alert(\"Error: \"+e);\n        }\n    }\n\n    handleKeyDown = (key) => {\n\n        this.setState(\n            {\n                eventKey: key\n            })\n\n        if (key === '?') {\n            console.log('? pressed ! ')\n        } \n    }\n\n    render() {\n\n        return (\n            <div>\n                <div><h2>EA2</h2></div>\n\n                <canvas ref={ref => this['webGLCanvas'] = ref} width ='512px' height ='512px'></canvas>\n\n                <div>{this.state.eventKey}</div>\n                <KeyboardEventHandler\n                    handleKeys={['?']}\n                    onKeyEvent={(key, e) => this.handleKeyDown(key)} />\n\n                    <div style= {{position: 'relative', height: '30px'}}></div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport Slider from 'rc-slider';\nimport Tooltip from 'rc-tooltip';\nimport 'rc-slider/assets/index.css';\nimport HashMap from 'hashmap';\n\nimport './ea3.css';\n\nvar vertexShaderText =\n    [\n        'precision mediump float;',\n        '',\n        'attribute vec2 vertPosition;',\n        'attribute vec3 vertColor;',\n        'varying vec3 fragColor;',\n        '',\n        'void main()',\n        '{',\n        '  fragColor = vertColor;',\n        '  gl_Position = vec4(vertPosition, 0.0, 1.0);',\n        '}'\n    ].join('\\n');\n\nvar fragmentShaderText =\n    [\n        'precision mediump float;',\n        '',\n        'varying vec3 fragColor;',\n        'void main()',\n        '{',\n        '  gl_FragColor = vec4(fragColor, 1.0);',\n        '}'\n    ].join('\\n');\n\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Range = createSliderWithTooltip(Slider.Range);\nconst Handle = Slider.Handle;\n\nconst handle = (props) => {\n    const { value, dragging, index, ...restProps } = props;\n    return (\n        <Tooltip\n            prefixCls=\"rc-slider-tooltip\"\n            overlay={value}\n            visible={dragging}\n            placement=\"top\"\n            key={index}\n        >\n            <Handle value={value} {...restProps} />\n        </Tooltip>\n    );\n};\n\n\nexport default class EA3 extends Component {\n\n    static propTypes = {}\n    static defaultProps = {}\n\n    constructor(props) {\n        super(props);\n        this.state = { // state keys go here\n            eventKey: \" \",\n            xMin: -1.0, xMax: 1.0, yMin: -1.0, yMax: 1.0,\n            vertexContainer1: { vertex: { x: 0.56, y: 0.88, r: 1.0, g: 1.0, b: 0.0 }, colorManipulator: -0.5 },\n            vertexContainer2: { vertex: { x: -0.6, y: 0.6, r: 0.5, g: 0.0, b: 1.0 }, colorManipulator: 0.0 },\n            vertexContainer3: { vertex: { x: 0.6, y: -0.6, r: 0.1, g: 1.0, b: 0.8 }, colorManipulator: 0.0 },\n            vertexContainer4: { vertex: { x: 0.6, y: 0.6, r: 0.3, g: 0.9, b: 0.8 }, colorManipulator: 0.0 },\n            vertexContainer5: { vertex: { x: -0.84, y: -0.19, r: 1.0, g: 0.2, b: 0.0 }, colorManipulator: -0.5 }\n        }\n    }\n\n    componentDidMount() {\n        this.init();\n    }\n\n\n    shaderProgram = (gl, vs, fs) => {\n\n        var prog = gl.createProgram();\n\n        var addshader = function (type, source) {\n\n            var s = gl.createShader((type === 'vertex') ? gl.VERTEX_SHADER : gl.FRAGMENT_SHADER);\n\n            gl.shaderSource(s, source);\n\n            gl.compileShader(s);\n\n            if (!gl.getShaderParameter(s, gl.COMPILE_STATUS)) {\n                throw \"Could not compile \" + type +\n                \" shader:\\n\\n\" + gl.getShaderInfoLog(s);\n            }\n\n            gl.attachShader(prog, s);\n\n        };\n\n        addshader('vertex', vs);\n        addshader('fragment', fs);\n\n        gl.linkProgram(prog);\n\n        if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n            throw \"Could not link the shader program!\";\n        }\n        return prog;\n    }\n\n    draw = () => {\n\n        try {\n            var gl = this['webGLCanvas'].getContext('webgl');\n            if (!gl) { throw \"x\"; }\n        } catch (err) {\n            throw \"Your web browser does not support WebGL!\";\n        }\n\n        gl.clearColor(0.8, 0.8, 0.8, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        var prog = this.shaderProgram(gl, vertexShaderText, fragmentShaderText);\n\n\n\n        var triangleVertices =\n            [ // X, Y,       R, G, B\n                this.state.vertexContainer1.vertex.x, this.state.vertexContainer1.vertex.y, this.state.vertexContainer1.vertex.r, this.state.vertexContainer1.vertex.g, this.state.vertexContainer1.vertex.b,\n                this.state.vertexContainer2.vertex.x, this.state.vertexContainer2.vertex.y, this.state.vertexContainer2.vertex.r, this.state.vertexContainer2.vertex.g, this.state.vertexContainer2.vertex.b,\n                this.state.vertexContainer3.vertex.x, this.state.vertexContainer3.vertex.y, this.state.vertexContainer3.vertex.r, this.state.vertexContainer3.vertex.g, this.state.vertexContainer3.vertex.b,\n                this.state.vertexContainer4.vertex.x, this.state.vertexContainer4.vertex.y, this.state.vertexContainer4.vertex.r, this.state.vertexContainer4.vertex.g, this.state.vertexContainer4.vertex.b,\n                this.state.vertexContainer5.vertex.x, this.state.vertexContainer5.vertex.y, this.state.vertexContainer5.vertex.r, this.state.vertexContainer5.vertex.g, this.state.vertexContainer5.vertex.b\n            ];\n\n        var triangleVertexBufferObject = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, triangleVertexBufferObject);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(triangleVertices), gl.STATIC_DRAW);\n\n        var positionAttribLocation = gl.getAttribLocation(prog, 'vertPosition');\n        var colorAttribLocation = gl.getAttribLocation(prog, 'vertColor');\n        gl.vertexAttribPointer(\n            positionAttribLocation, // Attribute location\n            2, // Number of elements per attribute\n            gl.FLOAT, // Type of elements\n            gl.FALSE,\n            5 * Float32Array.BYTES_PER_ELEMENT, // Size of an individual vertex\n            0 // Offset from the beginning of a single vertex to this attribute\n        );\n        gl.vertexAttribPointer(\n            colorAttribLocation, // Attribute location\n            3, // Number of elements per attribute\n            gl.FLOAT, // Type of elements\n            gl.FALSE,\n            5 * Float32Array.BYTES_PER_ELEMENT, // Size of an individual vertex\n            2 * Float32Array.BYTES_PER_ELEMENT // Offset from the beginning of a single vertex to this attribute\n        );\n\n        gl.enableVertexAttribArray(positionAttribLocation);\n        gl.enableVertexAttribArray(colorAttribLocation);\n\n        //\n        // Main render loop\n        //\n        gl.useProgram(prog);\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 5);\n\n    }\n\n    init = () => {\n        try {\n            this.draw();\n        } catch (e) {\n            alert(\"Error: \" + e);\n        }\n    }\n\n    handleKeyDown = (key) => {\n\n        this.setState(\n            {\n                eventKey: key\n            })\n\n        if (key === '?') {\n            console.log('? pressed ! ')\n        }\n    }\n\n    changeXV1 = (value) => {\n        this.state.vertexContainer1.vertex.x = value;\n        this.draw();\n    }\n\n    changeYV1 = (value) => {\n        this.state.vertexContainer1.vertex.y = value;\n        this.draw();\n    }\n\n    changeXV2 = (value) => {\n        this.state.vertexContainer2.vertex.x = value;\n        this.draw();\n    }\n\n    changeYV2 = (value) => {\n        this.state.vertexContainer2.vertex.y = value;\n        this.draw();\n    }\n\n\n    changeXV3 = (value) => {\n        this.state.vertexContainer3.vertex.x = value;\n        this.draw();\n    }\n\n    changeYV3 = (value) => {\n        this.state.vertexContainer3.vertex.y = value;\n        this.draw();\n    }\n\n    changeXV4 = (value) => {\n        this.state.vertexContainer4.vertex.x = value;\n        this.draw();\n    }\n\n    changeYV4 = (value) => {\n        this.state.vertexContainer4.vertex.y = value;\n        this.draw();\n    }\n\n    changeXV5 = (value) => {\n        this.state.vertexContainer5.vertex.x = value;\n        this.draw();\n    }\n\n    changeYV5 = (value) => {\n        this.state.vertexContainer5.vertex.y = value;\n        this.draw();\n    }\n\n\n    changeColorV1 = (value) => {\n        this.state.vertexContainer1.colorManipulator = value;\n\n        this.state.vertexContainer1.vertex.r = 1 - this.state.vertexContainer1.colorManipulator;\n        this.state.vertexContainer1.vertex.g = 1 - this.state.vertexContainer1.colorManipulator;\n        this.state.vertexContainer1.vertex.b = 0 + this.state.vertexContainer1.colorManipulator;\n\n        this.draw();\n    }\n\n    changeColorV2 = (value) => {\n        this.state.vertexContainer2.colorManipulator = value;\n\n        this.state.vertexContainer2.vertex.r = 1 - this.state.vertexContainer2.colorManipulator;\n        this.state.vertexContainer2.vertex.g = 0 + this.state.vertexContainer2.colorManipulator;\n        this.state.vertexContainer2.vertex.b = 0 + this.state.vertexContainer2.colorManipulator;\n\n        this.draw();\n    }\n\n    changeColorV3 = (value) => {\n        this.state.vertexContainer3.colorManipulator = value;\n\n        this.state.vertexContainer3.vertex.r = 0 + this.state.vertexContainer3.colorManipulator;\n        this.state.vertexContainer3.vertex.g = 1 - this.state.vertexContainer3.colorManipulator;\n        this.state.vertexContainer3.vertex.b = 1 - this.state.vertexContainer3.colorManipulator;\n\n        this.draw();\n    }\n\n\n    changeColorV4 = (value) => {\n        this.state.vertexContainer4.colorManipulator = value;\n\n        this.state.vertexContainer4.vertex.r = 1 - this.state.vertexContainer4.colorManipulator;\n        this.state.vertexContainer4.vertex.g = 0 - this.state.vertexContainer4.colorManipulator;\n        this.state.vertexContainer4.vertex.b = 1 - this.state.vertexContainer4.colorManipulator;\n\n        this.draw();\n    }\n\n    changeColorV5 = (value) => {\n        this.state.vertexContainer5.colorManipulator = value;\n\n        this.state.vertexContainer5.vertex.r = 1 - this.state.vertexContainer5.colorManipulator;\n        this.state.vertexContainer5.vertex.g = 0 + this.state.vertexContainer5.colorManipulator;\n        this.state.vertexContainer5.vertex.b = 0 + this.state.vertexContainer5.colorManipulator;\n\n        this.draw();\n    }\n\n    propsAsString = obj => {\n        var depthLevelMap = new HashMap();\n        var depth = 1;\n\n        var unwrapObjects = (obj, depthLevelMap, depth) => {\n            return Object.keys(obj)\n                .map(function (k) {\n                    if (depthLevelMap.get(obj[k]) === undefined) {\n                        depthLevelMap.set(obj[k], 0);\n                    }\n\n                    var dethValue = depthLevelMap.get(obj[k]);\n\n                    if (\n                        typeof obj[k] === 'object' &&\n                        obj[k] !== null &&\n                        obj[k] !== undefined &&\n                        dethValue < depth\n                    ) {\n                        var currentDepthValue = depthLevelMap.get(obj[k]);\n                        currentDepthValue++;\n                        depthLevelMap.set(obj[k], currentDepthValue);\n\n                        return unwrapObjects(obj[k], depthLevelMap, depth);\n                    } else {\n                        return k + ' : ' + obj[k];\n                    }\n                })\n                .join(' \\n ');\n        };\n\n        return unwrapObjects(obj, depthLevelMap, depth);\n    };\n\n    render() {\n\n        const wrapperStyle = { width: 400, margin: 10 };\n\n\n\n        return (\n\n            <div>\n                <div>\n                    <h2>EA3</h2>\n                </div>\n\n                <div className='rowC'>\n\n                    <div className='canvasBox'>\n                        <canvas ref={ref => this['webGLCanvas'] = ref} width='512px' height='512px'></canvas>\n                    </div>\n\n                    <div className='sliderBox'>\n\n                        <div style={wrapperStyle}>\n\n                            Vertex1 X Value:\n                                <Slider min={this.state.xMin} max={this.state.xMax} defaultValue={this.state.vertexContainer1.vertex.x} step={0.01} handle={handle} onChange={this.changeXV1} />\n\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex1 Y Value:\n                                <Slider min={this.state.yMin} max={this.state.yMax} defaultValue={this.state.vertexContainer1.vertex.y} step={0.01} handle={handle} onChange={this.changeYV1} />\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex1 Color\n                <Slider min={-0.5} max={0.5} defaultValue={this.state.vertexContainer1.colorManipulator} step={0.001} handle={handle} onChange={this.changeColorV1} />\n                        </div>\n\n\n\n                        <div style={wrapperStyle}>\n                            Vertex2 X Value:\n                                <Slider min={this.state.xMin} max={this.state.xMax} defaultValue={this.state.vertexContainer2.vertex.x} step={0.01} handle={handle} onChange={this.changeXV2} />\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex2 Y Value:\n                                <Slider min={this.state.yMin} max={this.state.yMax} defaultValue={this.state.vertexContainer2.vertex.y} step={0.01} handle={handle} onChange={this.changeYV2} />\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex2 Color\n                <Slider min={-0.5} max={0.5} defaultValue={this.state.vertexContainer2.colorManipulator} step={0.001} handle={handle} onChange={this.changeColorV2} />\n                        </div>\n\n\n\n\n                        <div style={wrapperStyle}>\n                            Vertex3 X Value:\n                                <Slider min={this.state.xMin} max={this.state.xMax} defaultValue={this.state.vertexContainer3.vertex.x} step={0.01} handle={handle} onChange={this.changeXV3} />\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex3 Y Value:\n                                <Slider min={this.state.yMin} max={this.state.yMax} defaultValue={this.state.vertexContainer3.vertex.y} step={0.01} handle={handle} onChange={this.changeYV3} />\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex3 Color\n                <Slider min={-0.5} max={0.5} defaultValue={this.state.vertexContainer3.colorManipulator} step={0.001} handle={handle} onChange={this.changeColorV3} />\n                        </div>\n\n\n                        <div style={wrapperStyle}>\n                            Vertex4 X Value:\n                                <Slider min={this.state.xMin} max={this.state.xMax} defaultValue={this.state.vertexContainer4.vertex.x} step={0.01} handle={handle} onChange={this.changeXV4} />\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex4 Y Value:\n                                <Slider min={this.state.yMin} max={this.state.yMax} defaultValue={this.state.vertexContainer4.vertex.y} step={0.01} handle={handle} onChange={this.changeYV4} />\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex4 Color\n                <Slider min={-0.5} max={0.5} defaultValue={this.state.vertexContainer4.colorManipulator} step={0.001} handle={handle} onChange={this.changeColorV4} />\n                        </div>\n\n                        <div style={wrapperStyle}>\n                            Vertex5 X Value:\n                                <Slider min={this.state.xMin} max={this.state.xMax} defaultValue={this.state.vertexContainer5.vertex.x} step={0.01} handle={handle} onChange={this.changeXV5} />\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex5 Y Value:\n                                <Slider min={this.state.yMin} max={this.state.yMax} defaultValue={this.state.vertexContainer5.vertex.y} step={0.01} handle={handle} onChange={this.changeYV5} />\n                        </div>\n                        <div style={wrapperStyle}>\n                            Vertex5 Color\n                <Slider min={-0.5} max={0.5} defaultValue={this.state.vertexContainer5.colorManipulator} step={0.001} handle={handle} onChange={this.changeColorV5} />\n                        </div>\n\n                    </div>\n\n                </div>\n\n                <div>{this.state.eventKey}</div>\n                <KeyboardEventHandler\n                    handleKeys={['?']}\n                    onKeyEvent={(key, e) => this.handleKeyDown(key)} />\n\n                <div style={{ position: 'relative', height: '30px' }}></div>\n            </div>\n\n\n        );\n    }\n}","import React, { Component } from 'react';\nimport Slider from 'rc-slider';\nimport Tooltip from 'rc-tooltip';\nimport Checkbox from 'react-simple-checkbox';\n\nvar i = 1;                     //  set your counter to 1\nconst Handle = Slider.Handle;\n\nconst handle = (props) => {\n    const { value, dragging, index, ...restProps } = props;\n    return (\n        <Tooltip\n            prefixCls=\"rc-slider-tooltip\"\n            overlay={value}\n            visible={dragging}\n            placement=\"top\"\n            key={index}\n        >\n            <Handle value={value} {...restProps} />\n        </Tooltip>\n    );\n};\nexport default class EA4_1 extends Component {\n\n    static propTypes = {}\n    static defaultProps = {}\n\n    constructor(props) {\n        super(props);\n        this.state = { // state keys go here\n            constant: 0.0,\n            checked: true\n        }\n    }\n\n    componentDidMount() {\n        this.init(true);\n    }\n\n    handleCheckboxChange = (value) => {\n        this.setState({ checked: value });\n\n        if(value)\n        {\n            this.init();\n        }\n        else \n        {\n            this.draw();\n        }\n    }\n\n    changeConstant = (value) => {\n        this.setState({ constant: value });\n        if(!this.state.checked)\n        {\n            this.draw();\n        }\n    }\n\n    draw = () => {\n\n        try {\n            var gl = this['webGLCanvas'].getContext('webgl');\n            if (!gl) { throw \"x\"; }\n        } catch (err) {\n            throw \"Your web browser does not support WebGL!\";\n        }\n\n        // Pipeline setup.\n        gl.clearColor(.0, .0, .0, 1);\n        // Backface culling.\n        gl.frontFace(gl.CCW);\n        gl.enable(gl.CULL_FACE);\n        gl.cullFace(gl.BACK);\n\n        // Compile vertex shader. \n        var vsSource = '' +\n            'attribute vec3 pos;' +\n            'attribute vec4 col;' +\n            'attribute float c;' +\n            'varying vec4 color;' +\n            'void main(){' + 'color = col;' +\n            'gl_Position = vec4(c * pos, 1);' +\n            '}';\n        var vs = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vs, vsSource);\n        gl.compileShader(vs);\n\n        // Compile fragment shader.\n        var fsSouce = 'precision mediump float;' +\n            'varying vec4 color;' +\n            'void main() {' +\n            'gl_FragColor = color;' +\n            '}';\n        var fs = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fs, fsSouce);\n        gl.compileShader(fs);\n\n        // Link shader together into a program.\n        var prog = gl.createProgram();\n        gl.attachShader(prog, vs);\n        gl.attachShader(prog, fs);\n        gl.bindAttribLocation(prog, 0, \"pos\");\n        gl.linkProgram(prog);\n        gl.useProgram(prog);\n\n        // Vertex data.\n        // Positions, Index data.\n        var vertices, indicesLines, indicesTris;\n        // Fill the data arrays.\n        createVertexData();\n\n        // Setup position vertex buffer object.\n        var vboPos = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, vboPos);\n        gl.bufferData(gl.ARRAY_BUFFER,\n            vertices, gl.STATIC_DRAW);\n        // Bind vertex buffer to attribute variable.\n        var posAttrib = gl.getAttribLocation(prog, 'pos');\n        gl.vertexAttribPointer(posAttrib, 3, gl.FLOAT,\n            false, 0, 0);\n        gl.enableVertexAttribArray(posAttrib);\n\n        // Setup constant color.\n        var colAttrib = gl.getAttribLocation(prog, 'col');\n\n        // Setup lines index buffer object.\n        var iboLines = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboLines);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,\n            indicesLines, gl.STATIC_DRAW);\n        iboLines.numberOfElements = indicesLines.length;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n        // Setup tris index buffer object.\n        var iboTris = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboTris);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,\n            indicesTris, gl.STATIC_DRAW);\n        iboTris.numberOfElements = indicesTris.length;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n        // Clear framebuffer and render primitives.\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        var c = gl.getAttribLocation(prog, 'c');\n        gl.vertexAttrib1f(c, this.state.constant);\n\n        // Setup rendering tris.\n        gl.vertexAttrib4f(colAttrib, \n            this.state.checked? Math.random(0.5) : 0.6, \n            this.state.checked? Math.random(0.5) : 0.6, \n            this.state.checked? Math.random(0.5) : 0.6, 0.8);\n\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboTris);\n        gl.drawElements(gl.TRIANGLES,\n            iboTris.numberOfElements, gl.UNSIGNED_SHORT, 0);\n\n        // Setup rendering lines.\n        gl.vertexAttrib4f(colAttrib, \n            \n        this.state.checked? Math.random(0.5) : 0.6, \n        this.state.checked? Math.random(0.5) : 0.6, \n        this.state.checked? Math.random(0.5) : 0.6, 0.7);\n\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboLines);\n        gl.drawElements(gl.LINES,\n            iboLines.numberOfElements, gl.UNSIGNED_SHORT, 0);\n\n        function createVertexData() {\n            var n = 100;\n            var m = 100;\n            // Positions.\n            vertices = new Float32Array(3 * (n + 1) * (m + 1));\n            // Index data.\n            indicesLines = new Uint16Array(2 * 2 * n * m);\n            indicesTris = new Uint16Array(3 * 2 * n * m);\n\n            var dt = 100 / n;\n            var dr = 100 / m;\n            // Counter for entries in index array.\n            var iLines = 0;\n            var iTris = 0;\n\n            // Loop angle t.\n            for (var i = 0, t = -1; i <= n; i++ , t += dt) {\n                // Loop radius r.\n                for (var j = 0, r = -1; j <= m; j++ , r += dr) {\n\n                    var iVertex = i * (m + 1) + j;\n\n                    var u = r;\n                    var v = t;\n\n                    //var x = u;\n                    //var y = v;\n                    //var z = Math.pow(r,3) - 3 * r * Math.pow(t,2);\n\n                    var x = u * Math.cos(Math.cos(u)) * Math.cos(v);\n                    var y = u * Math.cos(Math.cos(u)) * Math.sin(v);\n                    var z = u * Math.sin(Math.cos(u));\n\n                    // Set vertex positions.\n                    vertices[iVertex * 3] = x;\n                    vertices[iVertex * 3 + 1] = y;\n                    vertices[iVertex * 3 + 2] = z;\n\n                    // Set index.\n                    // Line on beam.\n                    if (j > 0 && i > 0) {\n                        indicesLines[iLines++] = iVertex - 1;\n                        indicesLines[iLines++] = iVertex;\n                    }\n                    // Line on ring.\n                    if (j > 0 && i > 0) {\n                        indicesLines[iLines++] = iVertex - (m + 1);\n                        indicesLines[iLines++] = iVertex;\n                    }\n\n                    // Set index.\n                    // Two Triangles.\n                    if (j > 0 && i > 0) {\n                        indicesTris[iTris++] = iVertex;\n                        indicesTris[iTris++] = iVertex - 1;\n                        indicesTris[iTris++] = iVertex - (m + 1);\n                        //        \n                        indicesTris[iTris++] = iVertex - 1;\n                        indicesTris[iTris++] = iVertex - (m + 1) - 1;\n                        indicesTris[iTris++] = iVertex - (m + 1);\n                    }\n                }\n            }\n        }\n    }\n\n\n\n    myLoop = () => {\n\n        setTimeout(() => {\n            this.draw();\n            this.changeConstant(this.state.constant + 0.0001);\n            i++;\n\n            if (this.state.checked) {\n                if (i < 100000) {\n                    this.myLoop();\n                }\n            } else {\n                i = 0;\n            }\n        }, 100)\n    }\n\n    init = () => {\n        try {\n            this.myLoop();\n        } catch (e) {\n            alert(\"Error: \" + e);\n        }\n    }\n    render() {\n\n        const wrapperStyle = { width: 400, margin: 10 };\n        return (\n\n            <div>\n                <div>\n                    <h2>EA4 1 - Wellenkugel</h2>\n                </div>\n\n                <div className='rowC'>\n\n                    <div className='canvasBox'>\n                        <canvas ref={ref => this['webGLCanvas'] = ref} width='512px' height='512px'></canvas>\n                    </div>\n                </div>\n\n                <div style={wrapperStyle}>\n                    Zoom :\n                                <Slider min={0.00000001} max={0.9} defaultValue={0.0} step={0.00001} handle={handle} onChange={this.changeConstant} />\n                </div>\n\n                <div style={wrapperStyle}>\n                    Animation on?\n                        <Checkbox\n                        id='Animation'\n                        color='#884A88'\n                        size='2'\n                        checked={this.state.checked}\n                        onChange={this.handleCheckboxChange}\n                    />\n                </div>\n\n                <div style={{ position: 'relative', height: '30px' }}></div>\n            </div>\n\n\n        );\n    }\n}","import React, { Component } from 'react';\nimport Slider from 'rc-slider';\nimport Tooltip from 'rc-tooltip';\nimport Checkbox from 'react-simple-checkbox';\n\nvar i = 1;                     //  set your counter to 1\n\nconst Handle = Slider.Handle;\n\nconst handle = (props) => {\n    const { value, dragging, index, ...restProps } = props;\n    return (\n        <Tooltip\n            prefixCls=\"rc-slider-tooltip\"\n            overlay={value}\n            visible={dragging}\n            placement=\"top\"\n            key={index}\n        >\n            <Handle value={value} {...restProps} />\n        </Tooltip>\n    );\n};\n\nexport default class EA4_2 extends Component {\n\n    static propTypes = {}\n    static defaultProps = {}\n\n    constructor(props) {\n        super(props);\n        this.state = { // state keys go here\n            constant: 1.0,\n            parameter: 0.0,\n            checked: true\n        }\n    }\n\n    componentDidMount() {\n        this.init();\n    }\n\n    handleCheckboxChange = (value) => {\n        this.setState({ checked: value });\n\n        if(value)\n        {\n            this.init();\n        }\n        else \n        {\n            this.draw();\n        }\n    }\n\n    changeConstant = (value) => {\n        this.setState({ constant: value });\n        if(!this.state.checked)\n        {\n            this.draw();\n        }\n    }\n\n    changeParameter =  (value) => \n    {\n        this.setState({parameter: value});\n\n        if(!this.state.checked)\n        {\n            this.draw();\n        }\n    }\n\n    draw = () => {\n\n        try {\n            var gl = this['webGLCanvas'].getContext('webgl');\n            if (!gl) { throw \"x\"; }\n        } catch (err) {\n            throw \"Your web browser does not support WebGL!\";\n        }\n \n           // Pipeline setup.\n           gl.clearColor(Math.random(0.2), Math.random(0.2), Math.random(0.2), 0.5);\n           // Backface culling.\n           gl.frontFace(gl.CCW);\n           gl.enable(gl.CULL_FACE);\n           gl.cullFace(gl.BACK);\n\n           // Compile vertex shader. \n           var vsSource = '' + \n               'attribute vec3 pos;' + \n               'attribute vec4 col;' +\n               'attribute float c;' + \n               'varying vec4 color;' + \n               'void main(){' + 'color = col;' + \n               'gl_Position = vec4(c * pos, 1);' +\n               '}';\n           var vs = gl.createShader(gl.VERTEX_SHADER);\n           gl.shaderSource(vs, vsSource);\n           gl.compileShader(vs);\n\n           // Compile fragment shader.\n           var fsSouce = 'precision mediump float;' + \n               'varying vec4 color;' + \n               'void main() {' + \n               'gl_FragColor = color;' + \n               '}';\n           var fs = gl.createShader(gl.FRAGMENT_SHADER);\n           gl.shaderSource(fs, fsSouce);\n           gl.compileShader(fs);\n\n           // Link shader together into a program.\n           var prog = gl.createProgram();\n           gl.attachShader(prog, vs);\n           gl.attachShader(prog, fs);\n           gl.bindAttribLocation(prog, 0, \"pos\");\n           gl.linkProgram(prog);\n           gl.useProgram(prog);\n\n           // Vertex data.\n           // Positions, Index data.\n           var vertices, indicesLines, indicesTris;\n           // Fill the data arrays.\n           var containerObject = this.createVertexData(vertices, indicesLines, indicesTris);\n\n           vertices = containerObject.vertices;\n           indicesLines = containerObject.indicesLines;\n           indicesTris = containerObject.indicesTris;\n\n           // Setup position vertex buffer object.\n           var vboPos = gl.createBuffer();\n           gl.bindBuffer(gl.ARRAY_BUFFER, vboPos);\n           gl.bufferData(gl.ARRAY_BUFFER,\n               vertices, gl.STATIC_DRAW);\n           // Bind vertex buffer to attribute variable.\n           var posAttrib = gl.getAttribLocation(prog, 'pos');\n           gl.vertexAttribPointer(posAttrib, 3, gl.FLOAT,\n               false, 0, 0);\n           gl.enableVertexAttribArray(posAttrib);\n\n           // Setup constant color.\n           var colAttrib = gl.getAttribLocation(prog, 'col');\n\n           // Setup lines index buffer object.\n           var iboLines = gl.createBuffer();\n           gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboLines);\n           gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,\n               indicesLines, gl.STATIC_DRAW);\n           iboLines.numberOfElements = indicesLines.length;\n           gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n           // Setup tris index buffer object.\n           var iboTris = gl.createBuffer();\n           gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboTris);\n           gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,\n               indicesTris, gl.STATIC_DRAW);\n           iboTris.numberOfElements = indicesTris.length;\n           gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n           // Clear framebuffer and render primitives.\n           gl.clear(gl.COLOR_BUFFER_BIT);\n\n           var c = gl.getAttribLocation(prog, 'c');\n\n           gl.vertexAttrib1f(c,this.state.constant);\n           // Setup rendering tris.\n           gl.vertexAttrib4f(colAttrib, Math.random(0.5), Math.random(0.5),Math.random(0.5),1);\n           gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboTris);\n           gl.drawElements(gl.TRIANGLES,\n               iboTris.numberOfElements, gl.UNSIGNED_SHORT, 0);\n\n           // Setup rendering lines.\n           gl.vertexAttrib4f(colAttrib, Math.random(0.5),Math.random(0.5),Math.random(0.5),1);\n           gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, iboLines);\n           gl.drawElements(gl.LINES,\n               iboLines.numberOfElements, gl.UNSIGNED_SHORT, 0);\n\n\n    }\n\n    createVertexData = (vertices, indicesLines, indicesTris) => {\n        var n = 100;\n        var m = 100;\n        // Positions.\n        vertices = new Float32Array(3 * (n+1) * (m+1));\n        // Index data.\n        indicesLines = new Uint16Array(2 * 2 * n * m);\n        indicesTris  = new Uint16Array(3 * 2 * n * m);\n\n        var dt = 10/n;\n        var dr = 10/m;\n        // Counter for entries in index array.\n        var iLines = 0;\n        var iTris = 0;\n\n        // Loop angle t.\n        for(var i=0, t=-Math.PI; i <= n; i++, t += dt) {\n            // Loop radius r.\n            for(var j=0, r=Math.PI; j <= m; j++, r += dr){\n\n                 var u = t;\n                 var v = r;\n\n                var iVertex = i*(m+1) + j;\n\n                var x = 2 * Math.sin(3* u)/(2 + Math.cos(v*this.state.parameter));\n                var y = 2 * (Math.sin(u) + 2* Math.sin(2 *u*this.state.parameter))/(2 + Math.cos(v*this.state.parameter + 2 *Math.PI/3));    \n                var z = (Math.cos(u) - 2 * Math.cos(2 * u)) * (2 + Math.cos(v)) * (2 + Math.cos(v + 2 * Math.PI))/4;\n\n                \n\n                // Set vertex positions.\n                vertices[iVertex * 3] = x;\n                vertices[iVertex * 3 + 1] = y;\n                vertices[iVertex * 3 + 2] = z;\n\n                // Set index.\n                // Line on beam.\n                if(j>0 && i>0){\n                    indicesLines[iLines++] = iVertex - 1;\n                    indicesLines[iLines++] = iVertex;\n                }\n                // Line on ring.\n                if(j>0 && i>0){\n                    indicesLines[iLines++] = iVertex - (m+1);                            \n                    indicesLines[iLines++] = iVertex;\n                }\n\n                // Set index.\n                // Two Triangles.\n                if(j>0 && i>0){\n                    indicesTris[iTris++] = iVertex;\n                    indicesTris[iTris++] = iVertex - 1;\n                    indicesTris[iTris++] = iVertex - (m+1);\n                    //        \n                    indicesTris[iTris++] = iVertex - 1;\n                    indicesTris[iTris++] = iVertex - (m+1) - 1;\n                    indicesTris[iTris++] = iVertex - (m+1);    \n                }\n            }\n        }\n\n        return {vertices:vertices , \n            indicesLines:indicesLines , \n            indicesTris:indicesTris }\n    } \n\n     myLoop = () => {\n\n        setTimeout(() => {\n            this.draw();\n            this.changeParameter(this.state.parameter + 0.001);\n            this.changeConstant(this.state.constant - 0.01);\n            i++;\n\n            if (this.state.checked) {\n                if (i < 100000) {\n                    this.myLoop();\n                }\n            } else {\n                i = 0;\n            }\n        }, 100)\n    }\n\n    init = () => {\n        try {\n            this.myLoop();            \n        } catch (e) {\n            alert(\"Error: \" + e);\n        }\n    }\n    render() {\n\n        const wrapperStyle = { width: 400, margin: 10 };\n        return (\n\n            <div>\n                <div>\n                    <h2>EA4 2 - Tranguloid Trefoil (with extra parameter)</h2>\n                </div>\n\n                <div className='rowC'>\n\n                    <div className='canvasBox'>\n                        <canvas ref={ref => this['webGLCanvas'] = ref} width='512px' height='512px'></canvas>\n                    </div>\n                </div>\n\n                <div style={wrapperStyle}>\n                            Zoom :\n                                <Slider min={0.001} max={2.0} defaultValue={1.0} step={0.001} handle={handle} onChange={this.changeConstant} />\n                        </div>\n\n                        <div style={wrapperStyle}>\n                            Parameter :\n                                <Slider min={0.000001} max={4.0} defaultValue={0.0} step={0.000001} handle={handle} onChange={this.changeParameter} />\n                        </div>\n\n                        <div style={wrapperStyle}>\n                    Animation on?\n                        <Checkbox\n                        id='Animation'\n                        color='#884A88'\n                        size='2'\n                        checked={this.state.checked}\n                        onChange={this.handleCheckboxChange}\n                    />\n                </div>\n\n                <div style={{ position: 'relative', height: '30px' }}></div>\n            </div>\n\n\n        );\n    }\n}","export function createVertexData() {\n\tvar n = 100;\n\tvar m = 100;\n\n\t// Positions.\n\tthis.vertices = new Float32Array(3 * (n + 1) * (m + 1));\n\tvar vertices = this.vertices;\n\t// Normals.\n\tthis.normals = new Float32Array(3 * (n + 1) * (m + 1));\n\tvar normals = this.normals;\n\t// Index data.\n\tthis.indicesLines = new Uint16Array(2 * 2 * n * m);\n\tvar indicesLines = this.indicesLines;\n\tthis.indicesTris = new Uint16Array(3 * 2 * n * m);\n\tvar indicesTris = this.indicesTris;\n\n\tvar du = 10 / n;\n\tvar dv = 10 / m;\n\n\t// Counter for entries in index array.\n\tvar iLines = 0;\n\tvar iTris = 0;\n\n\t// Loop angle u.\n\tfor(var i = 0, u = 0; i <= n; i++, u += du) {\n\t\t// Loop angle v.\n\t\tfor(var j = 0, v = 0; j <= m; j++, v += dv) {\n\n\t\t\tvar iVertex = i * (m + 1) + j;\n\n\t\t\tvar x = u * Math.cos(Math.cos(u)) * Math.cos(v);\n            var y = u * Math.cos(Math.cos(u)) * Math.sin(v);\n            var z = u * Math.sin(Math.cos(u));\n\n\t\t\t// Set vertex positions.\n\t\t\tvertices[iVertex * 3] = x;\n\t\t\tvertices[iVertex * 3 + 1] = y;\n\t\t\tvertices[iVertex * 3 + 2] = z;\n\n\t\t\t// Calc and set normals.\n\t\t\tvar nx = Math.cos(u) * Math.cos(v);\n\t\t\tvar ny = Math.cos(u) * Math.sin(v);\n\t\t\tvar nz = Math.sin(u);\n\t\t\tnormals[iVertex * 3] = nx;\n\t\t\tnormals[iVertex * 3 + 1] = ny;\n\t\t\tnormals[iVertex * 3 + 2] = nz;\n\n\t\t\t// if(i>14){\n\t\t\t// continue;\n\t\t\t// }\n\n\t\t\t// Set index.\n\t\t\t// Line on beam.\n\t\t\tif(j > 0 && i > 0) {\n\t\t\t\tindicesLines[iLines++] = iVertex - 1;\n\t\t\t\tindicesLines[iLines++] = iVertex;\n\t\t\t}\n\t\t\t// Line on ring.\n\t\t\tif(j > 0 && i > 0) {\n\t\t\t\tindicesLines[iLines++] = iVertex - (m + 1);\n\t\t\t\tindicesLines[iLines++] = iVertex;\n\t\t\t}\n\n\t\t\t// Set index.\n\t\t\t// Two Triangles.\n\t\t\tif(j > 0 && i > 0) {\n\t\t\t\tindicesTris[iTris++] = iVertex;\n\t\t\t\tindicesTris[iTris++] = iVertex - 1;\n\t\t\t\tindicesTris[iTris++] = iVertex - (m + 1);\n\t\t\t\t//\n\t\t\t\tindicesTris[iTris++] = iVertex - 1;\n\t\t\t\tindicesTris[iTris++] = iVertex - (m + 1) - 1;\n\t\t\t\tindicesTris[iTris++] = iVertex - (m + 1);\n\t\t\t}\n\t\t}\n\t}\n}","export function createVertexData() {\n\tvar n = 100;\n\tvar m = 100;\n\n\t// Positions.\n\tthis.vertices = new Float32Array(3 * (n + 1) * (m + 1));\n\tvar vertices = this.vertices;\n\t// Normals.\n\tthis.normals = new Float32Array(3 * (n + 1) * (m + 1));\n\tvar normals = this.normals;\n\t// Index data.\n\tthis.indicesLines = new Uint16Array(2 * 2 * n * m);\n\tvar indicesLines = this.indicesLines;\n\tthis.indicesTris = new Uint16Array(3 * 2 * n * m);\n\tvar indicesTris = this.indicesTris;\n\n\tvar du = 10 / n;\n\tvar dv = 10 / m;\n\n\t// Counter for entries in index array.\n\tvar iLines = 0;\n\tvar iTris = 0;\n\n\t// Loop angle u.\n\tfor(var i = 0, u = 0; i <= n; i++, u += du) {\n\t\t// Loop angle v.\n\t\tfor(var j = 0, v = 0; j <= m; j++, v += dv) {\n\n\t\t\tvar iVertex = i * (m + 1) + j;\n\n\t\t\tvar x = 2 * Math.sin(3* u)/(2 + Math.cos(v));\n\t\t\tvar y = 2 * (Math.sin(u) + 2* Math.sin(2 *u))/(2 + Math.cos(v + 2 *Math.PI/3));    \n\t\t\tvar z = (Math.cos(u) - 2 * Math.cos(2 * u)) * (2 + Math.cos(v)) * (2 + Math.cos(v + 2 * Math.PI))/4;\n\n\t\t\t// Set vertex positions.\n\t\t\tvertices[iVertex * 3] = x;\n\t\t\tvertices[iVertex * 3 + 1] = y;\n\t\t\tvertices[iVertex * 3 + 2] = z;\n\n\t\t\t// Calc and set normals.\n\t\t\tvar nx = Math.cos(u) * Math.cos(v);\n\t\t\tvar ny = Math.cos(u) * Math.sin(v);\n\t\t\tvar nz = Math.sin(u);\n\t\t\tnormals[iVertex * 3] = nx;\n\t\t\tnormals[iVertex * 3 + 1] = ny;\n\t\t\tnormals[iVertex * 3 + 2] = nz;\n\n\t\t\t// if(i>14){\n\t\t\t// continue;\n\t\t\t// }\n\n\t\t\t// Set index.\n\t\t\t// Line on beam.\n\t\t\tif(j > 0 && i > 0) {\n\t\t\t\tindicesLines[iLines++] = iVertex - 1;\n\t\t\t\tindicesLines[iLines++] = iVertex;\n\t\t\t}\n\t\t\t// Line on ring.\n\t\t\tif(j > 0 && i > 0) {\n\t\t\t\tindicesLines[iLines++] = iVertex - (m + 1);\n\t\t\t\tindicesLines[iLines++] = iVertex;\n\t\t\t}\n\n\t\t\t// Set index.\n\t\t\t// Two Triangles.\n\t\t\tif(j > 0 && i > 0) {\n\t\t\t\tindicesTris[iTris++] = iVertex;\n\t\t\t\tindicesTris[iTris++] = iVertex - 1;\n\t\t\t\tindicesTris[iTris++] = iVertex - (m + 1);\n\t\t\t\t//\n\t\t\t\tindicesTris[iTris++] = iVertex - 1;\n\t\t\t\tindicesTris[iTris++] = iVertex - (m + 1) - 1;\n\t\t\t\tindicesTris[iTris++] = iVertex - (m + 1);\n\t\t\t}\n\t\t}\n\t}\n}","import React, { Component } from 'react';\nimport './ea5.css';\nimport * as glmatrix from 'gl-matrix';\nimport * as importedGeometry1 from './sphere.js';\nimport * as importedGeometry2 from './custom.js';\nimport Slider from 'rc-slider';\nimport Tooltip from 'rc-tooltip';\nimport 'rc-slider/assets/index.css';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Range = createSliderWithTooltip(Slider.Range);\nconst Handle = Slider.Handle;\n\nvar deltaRotate = Math.PI / 36;\n\nconst handle = (props) => {\n    const { value, dragging, index, ...restProps } = props;\n    return (\n        <Tooltip\n            prefixCls=\"rc-slider-tooltip\"\n            overlay={value}\n            visible={dragging}\n            placement=\"top\"\n            key={index}\n        >\n            <Handle value={value} {...restProps} />\n        </Tooltip>\n    );\n};\n\nvar vertexShaderText =\n    [\n        'attribute vec3 aPosition;',\n        'attribute vec3 aNormal;',\n        'uniform mat4 uPMatrix;',\n        'uniform mat4 uMVMatrix;',\n        'varying vec4 vColor;',\n        'void main()',\n        '{',\n        'gl_Position = uPMatrix * uMVMatrix * vec4(aPosition, 1.0);',\n        'vColor = vec4(aNormal.x, aNormal.y, aNormal.z, 1.0);',\n        'vColor = (vColor + 1.0) / 2.0;',\n        '}'\n    ].join('\\n');\n\n\nvar fragmentShaderText =\n    [\n        'precision mediump float;',\n        'varying vec4 vColor;',\n        'void main()',\n        '{',\n        '  gl_FragColor = vColor;',\n        '}'\n    ].join('\\n');\n\nvar gl;\n\n// The shader program object is also used to\n// store attribute and uniform locations.\nvar prog;\n\n// Array of model objects.\nvar models = [];\n\nvar camera = {\n    // Initial position of the camera.\n    eye: [0, 1, 4],\n    // Point to look at.\n    center: [0, 0, 0],\n    // Roll and pitch of the camera.\n    up: [1, 0, 0],\n    // Opening angle given in radian.\n    // radian = degree*2*PI/360.\n    fovy: 60.0 * Math.PI / 180,\n    // Camera near plane dimensions:\n    // value for left right top bottom in projection.\n    lrtb: 4.0,\n    // View matrix.\n    vMatrix: glmatrix.mat4.create(),\n    // Projection matrix.\n    pMatrix: glmatrix.mat4.create(),\n    // Projection types: ortho, perspective, frustum.\n    projectionType: \"ortho\",\n    // Angle to Z-Axis for camera when orbiting the center\n    // given in radian.\n    zAngle: 0,\n    // Distance in XZ-Plane from center when orbiting.\n    distance: 8,\n};\n\nexport default class EA5 extends Component {\n\n    static propTypes = {}\n    static defaultProps = {}\n\n    constructor(props) {\n        super(props);\n        this.state = { // state keys go here\n            eventKey: \" \",\n            zoom: 2,\n            xMin: -3.0, xMax: 3.0, yMin: -3.0, yMax: 3.0,\n            rotationX: 0,\n            rotationY: 0,\n            rotationZ: 0,\n            cameraEyeX: 0,\n            cameraEyeY: 1,\n            cameraEyeZ: 4,\n            cameraCenterX: 0,\n            cameraCenterY: 0,\n            cameraCenterZ: 0,\n            cameraUpX: 0,\n            cameraUpY: 0,\n            cameraUpZ: 0\n        }\n    }\n\n    componentDidMount() {\n        this.init();\n    }\n\n        /*\n    *\n    *\n    * GUI Functions\n    * \n    * \n    * */\n\nhandleKeyDown = (key) => {\n\n    console.log(key + \"is down\");\n\n    if (key === 'w') {\n\n        console.log('w pressed ! ')\n\n        var value = this.state.rotationX + 0.01;\n        var value = this.state.cameraEyeX + 0.1;\n\n            this.setState\n            (\n                {\n                    rotationX: value,\n                    cameraEyeX: value\n                }\n            )\n    }\n    else \n    if (key === 's') {\n\n        console.log('s pressed ! ')\n        var value = this.state.rotationX - 0.01;\n        var value = this.state.cameraEyeX - 0.1;\n\n            this.setState\n            (\n                {\n                    rotationX: value,\n                    cameraEyeX: value\n                }\n            )\n    }\n    else\n    if (key === 'a') {\n\n        console.log('a pressed ! ')\n        var value = this.state.rotationY - 0.01;\n        var value = this.state.cameraEyeY - 0.1;\n\n            this.setState\n            (\n                {\n                    rotationY: value,\n                    cameraEyeY: value\n                }\n            )\n    }    \n    else\n    if (key === 'd') {\n\n\n        console.log('d pressed ! ')\n        var value = this.state.rotationY + 0.01;\n        var value = this.state.cameraEyeY + 0.1;\n\n            this.setState\n            (\n                {\n                    rotationY: value,\n                    cameraEyeY: value\n                }\n            )\n    }\n    else\n    if (key === 'q') {\n        console.log('q pressed ! ')\n        var value = this.state.rotationZ - 0.1;\n        var value = this.state.cameraEyeZ - 0.1;\n\n            this.setState\n            (\n                {\n                    rotationZ: value,\n                    cameraEyeZ: value\n                }\n            )\n    }\n    else\n    if (key === 'e') {\n        console.log('e pressed ! ')\n        var value = this.state.rotationZ + 0.1;\n        var value = this.state.cameraEyeZ + 0.1;\n\n            this.setState\n            (\n                {\n                    rotationZ: value,\n                    cameraEyeZ: value\n                }\n            )\n    }\n    else\n    if (key === 'o') {\n        console.log('i pressed ! ')\n\n        var value = this.state.zoom + 0.1;\n\n            this.setState\n            (\n                {\n                    zoom: value\n                }\n            )\n    }\n    else\n    if (key === 'i') {\n        console.log('o pressed ! ')\n\n        var value = this.state.zoom - 0.1;\n\n            this.setState\n            (\n                {\n                    zoom: value\n                }\n            )\n    }\n\n    this.renderWegGL();\n}\n\n\n    render() {\n\n        const wrapperStyle = { width: 400, margin: 10 };\n        return (\n\n            <div>\n                <div>\n                    <h2>EA5</h2>\n                </div>\n\n                <div className='rowCEA5'>\n                    <div className='canvasBoxEA5'>\n                        <canvas ref={ref => this['webGLCanvas'] = ref} width='512px' height='512px'></canvas>\n                    </div>\n\n                    <KeyboardEventHandler\n                    handleKeys={['w','a','s','d','q','e','i','o']}\n                    onKeyEvent={(key, e) => this.handleKeyDown(key)} />\n\n                    <div className='sliderBoxEA5'>\n                    <div style={wrapperStyle}>\n                            Move Camera with W,A,S,D on X and Y axis and with Q,E around Z. Zoom with I,O.\n                            The Look At Center is 0,0,0\n                        </div>\n                        <div style={wrapperStyle}>\n                            rotationX: { this.state.rotationX} , cameraEyeX: { this.state.cameraEyeX}\n                        </div>\n                        <div style={wrapperStyle}>\n                            rotationY: {this.state.rotationY} , cameraEyeY: { this.state.cameraEyeY}\n                        </div>\n                        <div style={wrapperStyle}>\n                            rotationZ: {this.state.rotationZ}, cameraEyeZ: { this.state.cameraEyeZ}\n                        </div>\n                        <div style={wrapperStyle}>\n                            camera Zoom: <p>{this.state.zoom}</p>\n                        </div>\n                    </div>\n                </div>\n                <div style={{ position: 'relative', height: '30px' }}></div>\n            </div>\n        );\n    }\n\n\n    /*\n    *\n    *\n    * WEB GL Section\n    * \n    * \n    * */\n\n    init = () => {\n\n\n        try {\n            this.initWebGL();\n        } catch (e) {\n            alert(\"Error: \" + e);\n        }\n\n        this.initShaderProgram();\n        this.initUniforms()\n        this.initModels();\n        this.initEventHandler();\n        this.initPipline();\n\n        this.renderWegGL();\n    }\n\n    initWebGL = () => {\n\n        try {\n            gl = this['webGLCanvas'].getContext('webgl');\n            if (!gl) { throw \"x\"; }\n        } catch (err) {\n            throw \"Your web browser does not support WebGL!\";\n        }\n\n        gl.viewportWidth = this['webGLCanvas'].width;\n        gl.viewportHeight = this['webGLCanvas'].height;\n    }\n\n    /**\n     * Init pipeline parameters that will not change again.\n     * If projection or viewport change, their setup must\n     * be in render .\n     */\n    initPipline = () => {\n        gl.clearColor(.95, .95, .95, 1);\n\n        // Backface culling.\n        gl.frontFace(gl.CCW);\n        gl.enable(gl.CULL_FACE);\n        gl.cullFace(gl.BACK);\n\n        // Depth(Z)-Buffer.\n        gl.enable(gl.DEPTH_TEST);\n\n        // Polygon offset of rastered Fragments.\n        gl.enable(gl.POLYGON_OFFSET_FILL);\n        gl.polygonOffset(0.5, 0);\n\n        // Set viewport.\n        gl.viewport(0, 0, gl.viewportWidth, gl.viewportHeight);\n\n        // Init camera.\n        // Set projection aspect ratio.\n        camera.aspect = gl.viewportWidth / gl.viewportHeight;\n    }\n\n    initShaderProgram = () => {\n        // Init vertex shader.\n        var vs = this.initShader(gl.VERTEX_SHADER, \"vertexshader\");\n        // Init fragment shader.\n        var fs = this.initShader(gl.FRAGMENT_SHADER, \"fragmentshader\");\n        // Link shader into a shader program.\n        prog = gl.createProgram();\n        gl.attachShader(prog, vs);\n        gl.attachShader(prog, fs);\n        gl.bindAttribLocation(prog, 0, \"aPosition\");\n        gl.linkProgram(prog);\n        gl.useProgram(prog);\n    }\n\n    /**\n     * Create and init shader from source.\n     * \n     * @parameter shaderType: openGL shader type.\n     * @parameter SourceTagId: Id of HTML Tag with shader source.\n     * @returns shader object.\n     */\n    initShader = (shaderType, SourceTagId) => {\n        var shader = gl.createShader(shaderType);\n        var shaderSource;\n\n        if (SourceTagId == 'vertexshader') {\n            shaderSource = vertexShaderText;\n        }\n        else {\n            shaderSource = fragmentShaderText;\n        }\n\n        gl.shaderSource(shader, shaderSource);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            console.log(SourceTagId + \": \" + gl.getShaderInfoLog(shader));\n            return null;\n        }\n        return shader;\n    }\n\n    initUniforms = () => {\n        // Projection Matrix.\n        prog.pMatrixUniform = gl.getUniformLocation(prog, \"uPMatrix\");\n\n        // Model-View-Matrix.\n        prog.mvMatrixUniform = gl.getUniformLocation(prog, \"uMVMatrix\");\n    }\n\n    initModels = () => {\n        // fill-style\n        var fs = \"fillwireframe\";\n        this.createModel(importedGeometry1, fs);\n        this.createModel(importedGeometry2, fs);\n    }\n\n    /**\n     * Create model object, fill it and push it in models array.\n     * \n     * @parameter geometryname: string with name of geometry.\n     * @parameter fillstyle: wireframe, fill, fillwireframe.\n     */\n    createModel = (geometryname, fillstyle) => {\n        var model = {};\n        model.fillstyle = fillstyle;\n        \n        this.initDataAndBuffers(model, geometryname);\n        // Create and initialize Model-View-Matrix.\n        model.mvMatrix = glmatrix.mat4.create();\n\n        models.push(model);\n    }\n\n    /**\n     * Init data and buffers for model object.\n     * \n     * @parameter model: a model object to augment with data.\n     * @parameter geometryname: string with name of geometry.\n     */\n    initDataAndBuffers = (model, geometryname) => {\n        // Provide model object with vertex data arrays.\n        // Fill data arrays for Vertex-Positions, Normals, Index data:\n        // vertices, normals, indicesLines, indicesTris;\n        // Pointer this refers to the window.\n        geometryname.createVertexData.apply(model);\n\n        // Setup position vertex buffer object.\n        model.vboPos = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, model.vboPos);\n        gl.bufferData(gl.ARRAY_BUFFER, model.vertices, gl.STATIC_DRAW);\n        // Bind vertex buffer to attribute variable.\n        prog.positionAttrib = gl.getAttribLocation(prog, 'aPosition');\n        gl.enableVertexAttribArray(prog.positionAttrib);\n\n        // Setup normal vertex buffer object.\n        model.vboNormal = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, model.vboNormal);\n        gl.bufferData(gl.ARRAY_BUFFER, model.normals, gl.STATIC_DRAW);\n        // Bind buffer to attribute variable.\n        prog.normalAttrib = gl.getAttribLocation(prog, 'aNormal');\n        gl.enableVertexAttribArray(prog.normalAttrib);\n\n        // Setup lines index buffer object.\n        model.iboLines = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, model.iboLines);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, model.indicesLines,\n            gl.STATIC_DRAW);\n        model.iboLines.numberOfElements = model.indicesLines.length;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n        // Setup triangle index buffer object.\n        model.iboTris = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, model.iboTris);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, model.indicesTris,\n            gl.STATIC_DRAW);\n        model.iboTris.numberOfElements = model.indicesTris.length;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    }\n\n    initEventHandler = () => {\n\n        window.onkeydown = (evt) => {\n            var key = evt.which ? evt.which : evt.keyCode;\n            var c = String.fromCharCode(key);\n            // console.log(evt);\n\n            // Change projection of scene.\n            switch (c) {\n                case ('O'):\n                    camera.projectionType = \"ortho\";\n                    camera.lrtb = 4;\n                    break;\n            }\n\n            // Render the scene again on any key pressed.\n            this.renderWegGL();\n        };\n    }\n\n    calculateCameraOrbit = () => {\n        // Calculate x,z position/eye of camera orbiting the center.\n        var x = 0;\n        var z = 2;\n        camera.eye[x] = camera.center[x];\n        camera.eye[z] = camera.center[z];\n        camera.eye[x] += camera.distance * Math.sin(camera.zAngle);\n        camera.eye[z] += camera.distance * Math.cos(camera.zAngle);\n    }\n\n    /**\n     * Run the rendering pipeline.\n     */\n    renderWegGL = () => {\n\n        \n        camera.eye = [this.state.cameraEyeX, this.state.cameraEyeY, this.state.cameraEyeZ];\n\n        camera.lrtb = this.state.zoom;\n\n        // Clear framebuffer and depth-/z-buffer.\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n        this.setProjection();\n\n        //glmatrix.mat4.identity(camera.vMatrix);\n        //glmatrix.mat4.rotate(camera.vMatrix, camera.vMatrix, Math.PI * this.state.rotationX,[1, 0, 0]);\n        //glmatrix.mat4.rotate(camera.vMatrix, camera.vMatrix, Math.PI * this.state.rotationY,[0, 1, 0]);\n        //glmatrix.mat4.rotate(camera.vMatrix, camera.vMatrix, Math.PI * this.state.rotationZ,[0, 0, 1]);\n\n        //this.calculateCameraOrbit();\n        glmatrix.mat4.lookAt(camera.vMatrix, camera.eye, camera.center, camera.up);\n\n        // Loop over models.\n        for (var i = 0; i < models.length; i++) {\n            // Update modelview for model.\n            glmatrix.mat4.copy(models[i].mvMatrix, camera.vMatrix);\n\n            // Set uniforms for model.\n            gl.uniformMatrix4fv(prog.mvMatrixUniform, false,\n                models[i].mvMatrix);\n\n            this.draw(models[i]);\n        }\n    }\n\n    setProjection = () => {\n        // Set projection Matrix.\n        switch (camera.projectionType) {\n            case (\"ortho\"):\n                var v = camera.lrtb;\n                glmatrix.mat4.ortho(camera.pMatrix, -v, v, -v, v, -10, 10);\n                break;\n        }\n        // Set projection uniform.\n        gl.uniformMatrix4fv(prog.pMatrixUniform, false, camera.pMatrix);\n    }\n\n    draw = (model) => {\n        // Setup position VBO.\n        gl.bindBuffer(gl.ARRAY_BUFFER, model.vboPos);\n        gl.vertexAttribPointer(prog.positionAttrib, 3, gl.FLOAT, false, 0, 0);\n\n        // Setup normal VBO.\n        gl.bindBuffer(gl.ARRAY_BUFFER, model.vboNormal);\n        gl.vertexAttribPointer(prog.normalAttrib, 3, gl.FLOAT, false, 0, 0);\n\n        // Setup rendering tris.\n        var fill = (model.fillstyle.search(/fill/) != -1);\n        if (fill) {\n            gl.enableVertexAttribArray(prog.normalAttrib);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, model.iboTris);\n            gl.drawElements(gl.TRIANGLES, model.iboTris.numberOfElements,\n                gl.UNSIGNED_SHORT, 0);\n        }\n\n        // Setup rendering lines.\n        var wireframe = (model.fillstyle.search(/wireframe/) != -1);\n        if (wireframe) {\n            gl.disableVertexAttribArray(prog.normalAttrib);\n            gl.vertexAttrib3f(prog.normalAttrib, 0, 0, 0);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, model.iboLines);\n            gl.drawElements(gl.LINES, model.iboLines.numberOfElements,\n                gl.UNSIGNED_SHORT, 0);\n        }\n    }\n}","export function createVertexData() {\n\tvar n = 100;\n\tvar m = 100;\n\n\t// Positions.\n\tthis.vertices = new Float32Array(3 * (n + 1) * (m + 1));\n\tvar vertices = this.vertices;\n\t// Normals.\n\tthis.normals = new Float32Array(3 * (n + 1) * (m + 1));\n\tvar normals = this.normals;\n\t// Index data.\n\tthis.indicesLines = new Uint16Array(2 * 2 * n * m);\n\tvar indicesLines = this.indicesLines;\n\tthis.indicesTris = new Uint16Array(3 * 2 * n * m);\n\tvar indicesTris = this.indicesTris;\n\n\tvar du = 20 / n;\n\tvar dv = 20 / m;\n\t// Counter for entries in index array.\n\tvar iLines = 0;\n\tvar iTris = 0;\n\n\t// Loop u.\n\tfor(var i = 0, u = -10; i <= n; i++, u += du) {\n\t\t// Loop v.\n\t\tfor(var j = 0, v = -10; j <= m; j++, v += dv) {\n\n\t\t\tvar iVertex = i * (m + 1) + j;\n\n\t\t\tvar x = u;\n\t\t\tvar y = 0;\n\t\t\tvar z = v;\n\n\t\t\t// Set vertex positions.\n\t\t\tvertices[iVertex * 3] = x;\n\t\t\tvertices[iVertex * 3 + 1] = y;\n\t\t\tvertices[iVertex * 3 + 2] = z;\n\n\t\t\t// Calc and set normals.\n\t\t\tnormals[iVertex * 3] = 0;\n\t\t\tnormals[iVertex * 3 + 1] = 1;\n\t\t\tnormals[iVertex * 3 + 2] = 0;\n\n\t\t\t// Set index.\n\t\t\t// Line on beam.\n\t\t\tif(j > 0 && i > 0) {\n\t\t\t\tindicesLines[iLines++] = iVertex - 1;\n\t\t\t\tindicesLines[iLines++] = iVertex;\n\t\t\t}\n\t\t\t// Line on ring.\n\t\t\tif(j > 0 && i > 0) {\n\t\t\t\tindicesLines[iLines++] = iVertex - (m + 1);\n\t\t\t\tindicesLines[iLines++] = iVertex;\n\t\t\t}\n\n\t\t\t// Set index.\n\t\t\t// Two Triangles.\n\t\t\tif(j > 0 && i > 0) {\n\t\t\t\tindicesTris[iTris++] = iVertex;\n\t\t\t\tindicesTris[iTris++] = iVertex - 1;\n\t\t\t\tindicesTris[iTris++] = iVertex - (m + 1);\n\t\t\t\t//\n\t\t\t\tindicesTris[iTris++] = iVertex - 1;\n\t\t\t\tindicesTris[iTris++] = iVertex - (m + 1) - 1;\n\t\t\t\tindicesTris[iTris++] = iVertex - (m + 1);\n\t\t\t}\n\t\t}\n\t}\n}","export function createVertexData() {\n\tvar n = 32;\n\tvar m = 32;\n\n\t// Positions.\n\tthis.vertices = new Float32Array(3 * (n + 1) * (m + 1));\n\tvar vertices = this.vertices;\n\t// Normals.\n\tthis.normals = new Float32Array(3 * (n + 1) * (m + 1));\n\tvar normals = this.normals;\n\t// Index data.\n\tthis.indicesLines = new Uint16Array(2 * 2 * n * m);\n\tvar indicesLines = this.indicesLines;\n\tthis.indicesTris = new Uint16Array(3 * 2 * n * m);\n\tvar indicesTris = this.indicesTris;\n\n\tvar du = 2 * Math.PI / n;\n\tvar dv = Math.PI / m;\n\tvar r = 1;\n\t// Counter for entries in index array.\n\tvar iLines = 0;\n\tvar iTris = 0;\n\n\t// Loop angle u.\n\tfor(var i = 0, u = 0; i <= n; i++, u += du) {\n\t\t// Loop angle v.\n\t\tfor(var j = 0, v = 0; j <= m; j++, v += dv) {\n\n\t\t\tvar iVertex = i * (m + 1) + j;\n\n\t\t\tvar x = r * Math.sin(v) * Math.cos(u);\n\t\t\tvar y = r * Math.sin(v) * Math.sin(u);\n\t\t\tvar z = r * Math.cos(v);\n\n\t\t\t// Set vertex positions.\n\t\t\tvertices[iVertex * 3] = x;\n\t\t\tvertices[iVertex * 3 + 1] = y;\n\t\t\tvertices[iVertex * 3 + 2] = z;\n\n\t\t\t// Calc and set normals.\n\t\t\tvar vertexLength = Math.sqrt(x * x + y * y + z * z);\n\t\t\tnormals[iVertex * 3] = x / vertexLength;\n\t\t\tnormals[iVertex * 3 + 1] = y / vertexLength;\n\t\t\tnormals[iVertex * 3 + 2] = z / vertexLength;\n\n\t\t\t// Set index.\n\t\t\t// Line on beam.\n\t\t\tif(j > 0 && i > 0) {\n\t\t\t\tindicesLines[iLines++] = iVertex - 1;\n\t\t\t\tindicesLines[iLines++] = iVertex;\n\t\t\t}\n\t\t\t// Line on ring.\n\t\t\tif(j > 0 && i > 0) {\n\t\t\t\tindicesLines[iLines++] = iVertex - (m + 1);\n\t\t\t\tindicesLines[iLines++] = iVertex;\n\t\t\t}\n\n\t\t\t// Set index.\n\t\t\t// Two Triangles.\n\t\t\tif(j > 0 && i > 0) {\n\t\t\t\tindicesTris[iTris++] = iVertex;\n\t\t\t\tindicesTris[iTris++] = iVertex - 1;\n\t\t\t\tindicesTris[iTris++] = iVertex - (m + 1);\n\t\t\t\t//\n\t\t\t\tindicesTris[iTris++] = iVertex - 1;\n\t\t\t\tindicesTris[iTris++] = iVertex - (m + 1) - 1;\n\t\t\t\tindicesTris[iTris++] = iVertex - (m + 1);\n\t\t\t}\n\t\t}\n\t}\n}","export function createVertexData() {\n\tvar n = 16;\n\tvar m = 32;\n\n\t// Positions.\n\tthis.vertices = new Float32Array(3 * (n + 1) * (m + 1));\n\tvar vertices = this.vertices;\n\t// Normals.\n\tthis.normals = new Float32Array(3 * (n + 1) * (m + 1));\n\tvar normals = this.normals;\n\t// Index data.\n\tthis.indicesLines = new Uint16Array(2 * 2 * n * m);\n\tvar indicesLines = this.indicesLines;\n\tthis.indicesTris = new Uint16Array(3 * 2 * n * m);\n\tvar indicesTris = this.indicesTris;\n\n\tvar du = 2 * Math.PI / n;\n\tvar dv = 2 * Math.PI / m;\n\tvar r = 0.3;\n\tvar R = 0.5;\n\t// Counter for entries in index array.\n\tvar iLines = 0;\n\tvar iTris = 0;\n\n\t// Loop angle u.\n\tfor(var i = 0, u = 0; i <= n; i++, u += du) {\n\t\t// Loop angle v.\n\t\tfor(var j = 0, v = 0; j <= m; j++, v += dv) {\n\n\t\t\tvar iVertex = i * (m + 1) + j;\n\n\t\t\tvar x = (R + r * Math.cos(u) ) * Math.cos(v);\n\t\t\tvar y = (R + r * Math.cos(u) ) * Math.sin(v);\n\t\t\tvar z = r * Math.sin(u);\n\n\t\t\t// Set vertex positions.\n\t\t\tvertices[iVertex * 3] = x;\n\t\t\tvertices[iVertex * 3 + 1] = y;\n\t\t\tvertices[iVertex * 3 + 2] = z;\n\n\t\t\t// Calc and set normals.\n\t\t\tvar nx = Math.cos(u) * Math.cos(v);\n\t\t\tvar ny = Math.cos(u) * Math.sin(v);\n\t\t\tvar nz = Math.sin(u);\n\t\t\tnormals[iVertex * 3] = nx;\n\t\t\tnormals[iVertex * 3 + 1] = ny;\n\t\t\tnormals[iVertex * 3 + 2] = nz;\n\n\t\t\t// if(i>14){\n\t\t\t// continue;\n\t\t\t// }\n\n\t\t\t// Set index.\n\t\t\t// Line on beam.\n\t\t\tif(j > 0 && i > 0) {\n\t\t\t\tindicesLines[iLines++] = iVertex - 1;\n\t\t\t\tindicesLines[iLines++] = iVertex;\n\t\t\t}\n\t\t\t// Line on ring.\n\t\t\tif(j > 0 && i > 0) {\n\t\t\t\tindicesLines[iLines++] = iVertex - (m + 1);\n\t\t\t\tindicesLines[iLines++] = iVertex;\n\t\t\t}\n\n\t\t\t// Set index.\n\t\t\t// Two Triangles.\n\t\t\tif(j > 0 && i > 0) {\n\t\t\t\tindicesTris[iTris++] = iVertex;\n\t\t\t\tindicesTris[iTris++] = iVertex - 1;\n\t\t\t\tindicesTris[iTris++] = iVertex - (m + 1);\n\t\t\t\t//\n\t\t\t\tindicesTris[iTris++] = iVertex - 1;\n\t\t\t\tindicesTris[iTris++] = iVertex - (m + 1) - 1;\n\t\t\t\tindicesTris[iTris++] = iVertex - (m + 1);\n\t\t\t}\n\t\t}\n\t}\n}","import React, { Component } from 'react';\nimport './ea6.css';\nimport * as glmatrix from 'gl-matrix';\nimport * as plane from './GVT_Src_vertexData_plane.js';\nimport * as sphere from './GVT_Src_vertexData_sphere.js';\nimport * as torus from './GVT_Src_vertexData_torus.js';\nimport Slider from 'rc-slider';\nimport Tooltip from 'rc-tooltip';\nimport 'rc-slider/assets/index.css';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Range = createSliderWithTooltip(Slider.Range);\nconst Handle = Slider.Handle;\n\nvar i = 1;\n\nconst handle = (props) => {\n    const { value, dragging, index, ...restProps } = props;\n    return (\n        <Tooltip\n            prefixCls=\"rc-slider-tooltip\"\n            overlay={value}\n            visible={dragging}\n            placement=\"top\"\n            key={index}\n        >\n            <Handle value={value} {...restProps} />\n        </Tooltip>\n    );\n};\n\nvar vertexShaderText =\n    [\n        'attribute vec3 aPosition;',\n        'attribute vec3 aNormal;',\n        'uniform mat4 uPMatrix;',\n        'uniform mat4 uMVMatrix;',\n        'varying vec4 vColor;',\n        'void main()',\n        '{',\n        'gl_Position = uPMatrix * uMVMatrix * vec4(aPosition, 1.0);',\n        'vColor = vec4(aNormal.x, aNormal.y, aNormal.z, 1.0);',\n        'vColor = (vColor + 1.0) / 2.0;',\n        '}'\n    ].join('\\n');\n\n\nvar fragmentShaderText =\n    [\n        'precision mediump float;',\n        'varying vec4 vColor;',\n        'void main()',\n        '{',\n        '  gl_FragColor = vColor;',\n        '}'\n    ].join('\\n');\n\nvar gl;\n\n// The shader program object is also used to\n// store attribute and uniform locations.\nvar prog;\n\n// Array of model objects.\nvar models = [];\n\nvar camera = {\n    // Initial position of the camera.\n    eye: [0.7, 0.6, 1.2],\n    // Point to look at.\n    center: [0, 0, 0],\n    // Roll and pitch of the camera.\n    up: [0, 1, 0],\n    // Opening angle given in radian.\n    // radian = degree*2*PI/360.\n    fovy: 60.0 * Math.PI / 180,\n    // Camera near plane dimensions:\n    // value for left right top bottom in projection.\n    lrtb: 4.0,\n    // View matrix.\n    vMatrix: glmatrix.mat4.create(),\n    // Projection matrix.\n    pMatrix: glmatrix.mat4.create(),\n    // Projection types: ortho, perspective, frustum.\n    projectionType: \"ortho\",\n    // Angle to Z-Axis for camera when orbiting the center\n    // given in radian.\n    zAngle: 0,\n    // Distance in XZ-Plane from center when orbiting.\n    distance: 8,\n};\n\n\nexport default class EA6 extends Component {\n\n    static propTypes = {}\n    static defaultProps = {}\n\n    constructor(props) {\n        super(props);\n        this.state = { // state keys go here\n            eventKey: \" \",\n            zoom: 3.6,\n            xMin: -3.0, xMax: 3.0, yMin: -3.0, yMax: 3.0,\n            rotationX: 0,\n            rotationY: 0,\n            rotationZ: 0,\n            cameraEyeX: 0.7,\n            cameraEyeY: 0.6,\n            cameraEyeZ: 1.2,\n            cameraCenterX: 0,\n            cameraCenterY: 0,\n            cameraCenterZ: 0,\n            cameraUpX: 0,\n            cameraUpY: 0,\n            cameraUpZ: 0,\n            angle: 0,\n            interactiveSphere1: null,\n            interactiveSphere2: null,\n            interactiveSphere3: null,\n            interactiveSphere4: null,\n            interactiveTorus: null,\n            deltaTime: 0.05,\n            isLoop: false,\n            radius: 0.2,\n            commandNote: ''\n        }\n    }\n\n    componentDidMount() {\n        this.init();\n    }\n\n    /*\n*\n*\n* GUI Functions\n* \n* \n* */\n\n\n    myLoop = () => {\n\n        setTimeout(() => {\n            this.animateModels();\n            this.renderWegGL();\n\n            var changedAngle = this.state.angle + this.state.deltaTime;\n            this.setState({ angle: changedAngle });\n            i++;\n\n            if (i < 100000 && this.state.isLoop) {\n                this.myLoop();\n            }\n\n        }, 25)\n    }\n\n    handleKeyDown = (key) => {\n\n        this.setState({commandNote:((key + \" pressed! \")+this.state.commandNote)});\n        \n        if (key === 'w') {\n\n\n            //var value = this.state.rotationX + 0.01;\n            var value = this.state.cameraEyeX + 0.1;\n\n            this.setState\n                (\n                    {\n                        rotationX: value,\n                        cameraEyeX: value\n                    }\n                )\n\n\n        }\n        else\n            if (key === 's') {\n\n                //var value = this.state.rotationX - 0.01;\n                var value = this.state.cameraEyeX - 0.1;\n\n                this.setState\n                    (\n                        {\n                            rotationX: value,\n                            cameraEyeX: value\n                        }\n                    )\n\n            }\n            else\n                if (key === 'a') {\n\n                    //var value = this.state.rotationY - 0.01;\n                    var value = this.state.cameraEyeY - 0.1;\n\n                    this.setState\n                        (\n                            {\n                                rotationY: value,\n                                cameraEyeY: value\n                            }\n                        )\n\n                }\n                else\n                    if (key === 'd') {\n\n                        //var value = this.state.rotationY + 0.01;\n                        var value = this.state.cameraEyeY + 0.1;\n\n                        this.setState\n                            (\n                                {\n                                    rotationY: value,\n                                    cameraEyeY: value\n                                }\n                            )\n\n                    }\n                    else\n                        if (key === 'q') {\n\n                            var value = this.state.rotationZ - 0.1;\n                            var value = this.state.cameraEyeZ - 0.1;\n\n                            this.setState\n                                (\n                                    {\n                                        rotationZ: value,\n                                        cameraEyeZ: value\n                                    }\n                                )\n\n                        }\n                        else\n                            if (key === 'e') {\n\n                                var value = this.state.rotationZ + 0.1;\n                                var value = this.state.cameraEyeZ + 0.1;\n\n                                this.setState\n                                    (\n                                        {\n                                            rotationZ: value,\n                                            cameraEyeZ: value\n                                        }\n                                    )\n\n                            }\n                            else\n                                if (key === 'o') {\n\n                                    var value = this.state.zoom + 0.1;\n\n                                    this.setState\n                                        (\n                                            {\n                                                zoom: value\n                                            }\n                                        )\n\n                                }\n                                else\n                                    if (key === 'i') {\n\n                                        var value = this.state.zoom - 0.1;\n\n                                        this.setState\n                                            (\n                                                {\n                                                    zoom: value\n                                                }\n                                            )\n\n                                    }\n        if (key === '1') {\n\n            if (this.state.interactiveTorus !== null) {\n                this.state.interactiveTorus.rotate[0] += this.state.deltaTime;\n                console.log(this.state.interactiveTorus.rotate[0]);\n            }\n        }\n        if (key === '2') {\n            if (this.state.interactiveTorus !== null) {\n                this.state.interactiveTorus.rotate[1] += this.state.deltaTime;\n            }\n        }\n        if (key === '3') {\n            if (this.state.interactiveTorus !== null) {\n                this.state.interactiveTorus.rotate[2] += this.state.deltaTime;\n            }\n        }\n        if (key === 'k') {\n            this.setState({isLoop: false});\n            this.animateModels();\n            var changedAngle = this.state.angle + this.state.deltaTime;\n            this.setState({ angle: changedAngle });\n        }\n\n        if (key === 'l') {\n            this.setState({isLoop: true});\n            this.myLoop();\n            \n        }\n\n        this.renderWegGL();\n    }\n\n\n    render() {\n\n        const wrapperStyle = { width: 400, margin: 10 };\n        return (\n\n            <div>\n                <div>\n                    <h2>EA6</h2>\n                </div>\n\n                <div className='rowCEA5'>\n                    <div className='canvasBoxEA5'>\n                        <canvas ref={ref => this['webGLCanvas'] = ref} width='512px' height='512px'></canvas>\n                    </div>\n\n                    <KeyboardEventHandler\n                        handleKeys={['w', 'a', 's', 'd', 'q', 'e', 'i', 'o', '1', '2', '3','k','l']}\n                        onKeyEvent={(key, e) => this.handleKeyDown(key)} />\n\n                    <div className='sliderBoxEA5'>\n                        <div style={wrapperStyle}>\n                            <h2>Note:</h2>\n                            <p>The spheres will start on by one with a little delay.</p>\n                            <h2>Controls:</h2>\n                            <p>Start the Animated Loop with L or skip keyframe by keyframe with K. (Note: K will stop the loop.)</p>\n                            <p>Move Camera with W,A,S,D on X and Y axis and with Q,E around Z. Zoom with I,O.</p>\n                            <p>The Look At Center is 0,0,0</p>\n                        </div>\n                        <div style={wrapperStyle}>\n                            rotationX: {this.state.rotationX} , cameraEyeX: {this.state.cameraEyeX}\n                        </div>\n                        <div style={wrapperStyle}>\n                            rotationY: {this.state.rotationY} , cameraEyeY: {this.state.cameraEyeY}\n                        </div>\n                        <div style={wrapperStyle}>\n                            rotationZ: {this.state.rotationZ}, cameraEyeZ: {this.state.cameraEyeZ}\n                        </div>\n                        <div style={wrapperStyle}>\n                            camera Zoom: <p>{this.state.zoom}</p>\n                        </div>\n                        <div style={wrapperStyle}>\n                            function angle : <p>{this.state.angle}</p>\n                        </div>\n                        <div style={wrapperStyle}>\n                            last Commands:  {this.state.commandNote}\n                        </div>\n                    </div>\n                </div>\n                <div style={{ position: 'relative', height: '30px' }}></div>\n            </div>\n        );\n    }\n\n\n    /*\n    *\n    *\n    * WEB GL Section\n    * \n    * \n    * */\n\n    init = () => {\n        try {\n            this.initWebGL();\n\n\n            this.initShaderProgram();\n            this.initUniforms()\n            this.initModels();\n            this.initPipline();\n\n\n            //this.renderWegGL();\n            this.myLoop();\n            \n\n        } catch (e) {\n            alert(\"Error: \" + e);\n        }\n    }\n\n    initWebGL = () => {\n\n        try {\n            gl = this['webGLCanvas'].getContext('webgl');\n            if (!gl) { throw \"x\"; }\n        } catch (err) {\n            throw \"Your web browser does not support WebGL!\";\n        }\n\n        gl.viewportWidth = this['webGLCanvas'].width;\n        gl.viewportHeight = this['webGLCanvas'].height;\n    }\n\n    animateModels = () => \n    {\n\n        var xOffset = Math.cos(this.state.angle) * this.state.radius;\n        var yOffset = Math.sin(this.state.angle) * this.state.radius;\n\n        this.state.interactiveTorus.rotate[0] += this.state.deltaTime * 0.5;\n\n        this.state.interactiveSphere1.translate = [this.state.interactiveSphere1.translate[0] + yOffset,\n        this.state.interactiveSphere1.translate[1] + xOffset,\n        this.state.interactiveSphere1.translate[2]]\n\n        if(this.state.angle > 6.499)\n        {\n        this.state.interactiveSphere2.translate = [this.state.interactiveSphere2.translate[0] - yOffset,\n        this.state.interactiveSphere2.translate[1] - xOffset,\n        this.state.interactiveSphere2.translate[2]]\n        }\n\n        if(this.state.angle > 3.1)\n        {\n\n        this.state.interactiveSphere3.translate = [this.state.interactiveSphere3.translate[0],\n        this.state.interactiveSphere3.translate[1] + yOffset,\n        this.state.interactiveSphere3.translate[2]+xOffset]\n    }\n\n    if(this.state.angle > 9.14)\n    {\n\n        this.state.interactiveSphere4.translate = [this.state.interactiveSphere4.translate[0]+yOffset,\n        this.state.interactiveSphere4.translate[1],\n        this.state.interactiveSphere4.translate[2]-xOffset]\n\n    }\n    \n    }\n\n    /**\n     * Init pipeline parameters that will not change again.\n     * If projection or viewport change, their setup must\n     * be in render .\n     */\n    initPipline = () => {\n        gl.clearColor(.95, .95, .95, 1);\n\n        // Backface culling.\n        gl.frontFace(gl.CCW);\n        gl.enable(gl.CULL_FACE);\n        gl.cullFace(gl.BACK);\n\n        // Depth(Z)-Buffer.\n        gl.enable(gl.DEPTH_TEST);\n\n        // Polygon offset of rastered Fragments.\n        gl.enable(gl.POLYGON_OFFSET_FILL);\n        gl.polygonOffset(0.5, 0);\n\n        // Set viewport.\n        gl.viewport(0, 0, gl.viewportWidth, gl.viewportHeight);\n\n        // Init camera.\n        // Set projection aspect ratio.\n        camera.aspect = gl.viewportWidth / gl.viewportHeight;\n    }\n\n    initShaderProgram = () => {\n        // Init vertex shader.\n        var vs = this.initShader(gl.VERTEX_SHADER, \"vertexshader\");\n        // Init fragment shader.\n        var fs = this.initShader(gl.FRAGMENT_SHADER, \"fragmentshader\");\n        // Link shader into a shader program.\n        prog = gl.createProgram();\n        gl.attachShader(prog, vs);\n        gl.attachShader(prog, fs);\n        gl.bindAttribLocation(prog, 0, \"aPosition\");\n        gl.linkProgram(prog);\n        gl.useProgram(prog);\n    }\n\n    /**\n     * Create and init shader from source.\n     * \n     * @parameter shaderType: openGL shader type.\n     * @parameter SourceTagId: Id of HTML Tag with shader source.\n     * @returns shader object.\n     */\n    initShader = (shaderType, SourceTagId) => {\n        var shader = gl.createShader(shaderType);\n        var shaderSource;\n\n        if (SourceTagId == 'vertexshader') {\n            shaderSource = vertexShaderText;\n        }\n        else {\n            shaderSource = fragmentShaderText;\n        }\n\n        gl.shaderSource(shader, shaderSource);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            console.log(SourceTagId + \": \" + gl.getShaderInfoLog(shader));\n            return null;\n        }\n        return shader;\n    }\n\n    initUniforms = () => {\n        // Projection Matrix.\n        prog.pMatrixUniform = gl.getUniformLocation(prog, \"uPMatrix\");\n\n        // Model-View-Matrix.\n        prog.mvMatrixUniform = gl.getUniformLocation(prog, \"uMVMatrix\");\n    }\n\n    initModels = () => {\n        // fill-style\n        var fs = \"fillwireframe\";\n        var wf = \"wireframe\";\n        var fill = 'fill';\n\n        this.createModel('torus', torus, fill, [0, 0, 0], [1.535, 0, 0], [4, 4, 4]);\n        this.createModel('plane', plane, wf, [0, -.8, 0], [0, 0, 0],\n            [.3, .3, .3]);\n\n        this.createModel('sphere', sphere, fill, [0.0, 0.0, 0.0], [0, 0, 0],\n            [.5, .5, .5]);\n        this.createModel('sphere', sphere, fill, [0, 0, 0], [0, 0, 0],\n            [.5, .5, .5]);\n        this.createModel('sphere', sphere, fill, [0, 0, 0], [0, 0, 0],\n            [.5, .5, .5]);\n        this.createModel('sphere', sphere, fill, [0, 0, 0], [0, 0, 0],\n            [.5, .5, .5]);\n\n        // Select one model that can be manipulated interactively by user.\n        this.setState({ interactiveTorus: models[0] });\n        this.setState({ interactiveSphere1: models[2] });\n        this.setState({ interactiveSphere2: models[3] });\n        this.setState({ interactiveSphere3: models[4] });\n        this.setState({ interactiveSphere4: models[5] });\n\n    }\n\n    /**\n     * Create model object, fill it and push it in models array.\n     * \n     * @parameter geometryname: string with name of geometry.\n     * @parameter fillstyle: wireframe, fill, fillwireframe.\n     */\n    createModel = (geometryname, geometry, fillstyle, translate, rotate, scale) => {\n        var model = {};\n        model.name = geometryname;\n        model.fillstyle = fillstyle;\n\n        this.initDataAndBuffers(model, geometry);\n        // Create and initialize Model-View-Matrix.\n        this.initTransformations(model, translate, rotate, scale);\n\n        models.push(model);\n    }\n\n    initTransformations = (model, translate, rotate, scale) => {\n        // Store transformation vectors.\n        model.translate = translate;\n        model.rotate = rotate;\n        model.scale = scale;\n\n        // Create and initialize Model-Matrix.\n        model.mMatrix = glmatrix.mat4.create();\n\n        // Create and initialize Model-View-Matrix.\n        model.mvMatrix = glmatrix.mat4.create();\n    }\n\n    /**\n     * Init data and buffers for model object.\n     * \n     * @parameter model: a model object to augment with data.\n     * @parameter geometryname: string with name of geometry.\n     */\n    initDataAndBuffers = (model, geometryname) => {\n        // Provide model object with vertex data arrays.\n        // Fill data arrays for Vertex-Positions, Normals, Index data:\n        // vertices, normals, indicesLines, indicesTris;\n        // Pointer this refers to the window.\n        geometryname.createVertexData.apply(model);\n\n        // Setup position vertex buffer object.\n        model.vboPos = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, model.vboPos);\n        gl.bufferData(gl.ARRAY_BUFFER, model.vertices, gl.STATIC_DRAW);\n        // Bind vertex buffer to attribute variable.\n        prog.positionAttrib = gl.getAttribLocation(prog, 'aPosition');\n        gl.enableVertexAttribArray(prog.positionAttrib);\n\n        // Setup normal vertex buffer object.\n        model.vboNormal = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, model.vboNormal);\n        gl.bufferData(gl.ARRAY_BUFFER, model.normals, gl.STATIC_DRAW);\n        // Bind buffer to attribute variable.\n        prog.normalAttrib = gl.getAttribLocation(prog, 'aNormal');\n        gl.enableVertexAttribArray(prog.normalAttrib);\n\n        // Setup lines index buffer object.\n        model.iboLines = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, model.iboLines);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, model.indicesLines,\n            gl.STATIC_DRAW);\n        model.iboLines.numberOfElements = model.indicesLines.length;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n        // Setup triangle index buffer object.\n        model.iboTris = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, model.iboTris);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, model.indicesTris,\n            gl.STATIC_DRAW);\n        model.iboTris.numberOfElements = model.indicesTris.length;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    }\n\n    calculateCameraOrbit = () => {\n        // Calculate x,z position/eye of camera orbiting the center.\n        var x = 0;\n        var z = 2;\n        camera.eye[x] = camera.center[x];\n        camera.eye[z] = camera.center[z];\n        camera.eye[x] += camera.distance * Math.sin(camera.zAngle);\n        camera.eye[z] += camera.distance * Math.cos(camera.zAngle);\n    }\n\n    /**\n     * Run the rendering pipeline.\n     */\n    renderWegGL = () => {\n\n        camera.eye = [this.state.cameraEyeY, this.state.cameraEyeX, this.state.cameraEyeZ];\n\n        camera.lrtb = this.state.zoom;\n\n        // Clear framebuffer and depth-/z-buffer.\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n        this.setProjection();\n\n        glmatrix.mat4.lookAt(camera.vMatrix, camera.eye, camera.center, camera.up);\n\n        // Loop over models.\n        for (var i = 0; i < models.length; i++) {\n\n            this.updateTransformations(models[i]);\n            // Update modelview for model.\n\n            // Set uniforms for model.\n            gl.uniformMatrix4fv(prog.mvMatrixUniform, false,\n                models[i].mvMatrix);\n\n            this.draw(models[i]);\n        }\n    }\n\n    updateTransformations = (model) => {\n\n        var mMatrix = model.mMatrix;\n        var mvMatrix = model.mvMatrix;\n\n        glmatrix.mat4.identity(mMatrix);\n        glmatrix.mat4.identity(mvMatrix);\n\n        glmatrix.mat4.translate(mMatrix, mMatrix, model.translate);\n\n        // Rotate.\n        glmatrix.mat4.rotateX(mMatrix, mMatrix, model.rotate[0]);\n        glmatrix.mat4.rotateY(mMatrix, mMatrix, model.rotate[1]);\n        glmatrix.mat4.rotateZ(mMatrix, mMatrix, model.rotate[2]);\n\n        glmatrix.mat4.scale(mMatrix, mMatrix, model.scale);\n\n        glmatrix.mat4.multiply(mvMatrix, camera.vMatrix, mMatrix);\n    }\n\n    setProjection = () => {\n        // Set projection Matrix.\n        switch (camera.projectionType) {\n            case (\"ortho\"):\n                var v = camera.lrtb;\n                glmatrix.mat4.ortho(camera.pMatrix, -v, v, -v, v, -20, 20);\n                break;\n        }\n        // Set projection uniform.\n        gl.uniformMatrix4fv(prog.pMatrixUniform, false, camera.pMatrix);\n    }\n\n    draw = (model) => {\n        // Setup position VBO.\n        gl.bindBuffer(gl.ARRAY_BUFFER, model.vboPos);\n        gl.vertexAttribPointer(prog.positionAttrib, 3, gl.FLOAT, false, 0, 0);\n\n        // Setup normal VBO.\n        gl.bindBuffer(gl.ARRAY_BUFFER, model.vboNormal);\n        gl.vertexAttribPointer(prog.normalAttrib, 3, gl.FLOAT, false, 0, 0);\n\n        // Setup rendering tris.\n        var fill = (model.fillstyle.search(/fill/) != -1);\n        if (fill) {\n            gl.enableVertexAttribArray(prog.normalAttrib);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, model.iboTris);\n            gl.drawElements(gl.TRIANGLES, model.iboTris.numberOfElements,\n                gl.UNSIGNED_SHORT, 0);\n        }\n\n        // Setup rendering lines.\n        var wireframe = (model.fillstyle.search(/wireframe/) != -1);\n        if (wireframe) {\n            gl.disableVertexAttribArray(prog.normalAttrib);\n            gl.vertexAttrib3f(prog.normalAttrib, 0, 0, 0);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, model.iboLines);\n            gl.drawElements(gl.LINES, model.iboLines.numberOfElements,\n                gl.UNSIGNED_SHORT, 0);\n        }\n    }\n}","import React, { Component } from 'react';\n\nimport Buttons from \"./Buttons.js\";\n\nimport EA1 from './EA1/index.js';\nimport EA2 from './EA2/index.js';\nimport EA3 from './EA3/index.js';\nimport EA4_1 from './EA4_1/index.js';\nimport EA4_2 from './EA4_2/index.js';\nimport EA5 from './EA5/index.js';\nimport EA6 from './EA6/index.js';\n\nclass Menu extends Component {\n  state = {\n    renderView: 0\n  };\n\n  clickBtn = e => {\n    this.setState({\n      renderView: +e.target.value\n    });\n  };\n\n  render() {\n    switch (this.state.renderView) {\n      case 1:\n        return <EA1/>;\n      case 2:\n        return <EA2 />;\n      case 3:\n        return <EA3 />;\n      case 4:\n        return <EA4_1 />;\n      case 5:\n        return <EA4_2 />;\n      case 6:\n        return <EA5 />;\n      case 7:\n        return <EA6 />;\n      default:\n        return <Buttons clickBtn={this.clickBtn} />;\n    }\n  }\n}\n\nexport default Menu;","import React, { Component } from 'react';\nimport './App.css';\nimport Menu from './Menu.js';\n\nclass App extends Component {\n\n  _refreshPage() {\n    console.log(\"Clicked\");\n    window.location.reload();\n  }\n\n  render() {\n    return (\n      <div>\n       <button onClick = {this._refreshPage} > Home </button>\n      <Menu />\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}